if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareTestMethods = function() {
  if (!goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareTestMethods must be called from " + "within a goog.module");
  }
  goog.moduleLoaderState_.declareTestMethods = true;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !goog.global.atob && goog.global.document && goog.global.document.all;
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareTestMethods:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
      if (goog.moduleLoaderState_.declareTestMethods) {
        for (var entry in exports) {
          if (entry.indexOf("test", 0) === 0 || entry == "tearDown" || entry == "setUp" || entry == "setUpPage" || entry == "tearDownPage") {
            goog.global[entry] = exports[entry];
          }
        }
      }
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function(source) {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    var loadingModule = false;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          loadingModule = true;
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3269";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__6603__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__6602 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__6602) : cljs.core.into_array.call(null, G__6602);
      }());
    };
    var G__6603 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__6604__i = 0, G__6604__a = new Array(arguments.length - 0);
        while (G__6604__i < G__6604__a.length) {
          G__6604__a[G__6604__i] = arguments[G__6604__i + 0];
          ++G__6604__i;
        }
        args = new cljs.core.IndexedSeq(G__6604__a, 0);
      }
      return G__6603__delegate.call(this, args);
    };
    G__6603.cljs$lang$maxFixedArity = 0;
    G__6603.cljs$lang$applyTo = function(arglist__6605) {
      var args = cljs.core.seq(arglist__6605);
      return G__6603__delegate(args);
    };
    G__6603.cljs$core$IFn$_invoke$arity$variadic = G__6603__delegate;
    return G__6603;
  }();
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  var G__6607 = x;
  return goog.isString(G__6607);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__6609 = x__$1;
    return goog.typeOf(G__6609);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4296__auto__ = ty;
    if (cljs.core.truth_(and__4296__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4296__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__6611 = obj;
    return goog.typeOf(G__6611);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4420__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4420__auto__)) {
    var s = temp__4420__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__6613 = Symbol;
  return goog.typeOf(G__6613);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function cljs$core$make_array() {
  var G__6615 = arguments.length;
  switch(G__6615) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5193__auto___6617 = len;
  var i_6618 = 0;
  while (true) {
    if (i_6618 < n__5193__auto___6617) {
      new_arr[i_6618] = arr[i_6618];
      var G__6619 = i_6618 + 1;
      i_6618 = G__6619;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__6620 = i + 1;
      i = G__6620;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget() {
  var G__6625 = arguments.length;
  switch(G__6625) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__6626 = cljs.core.aget;
  var G__6627 = array[i];
  var G__6628 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__6626, G__6627, G__6628) : cljs.core.apply.call(null, G__6626, G__6627, G__6628);
};
cljs.core.aget.cljs$lang$applyTo = function(seq6621) {
  var G__6622 = cljs.core.first(seq6621);
  var seq6621__$1 = cljs.core.next(seq6621);
  var G__6623 = cljs.core.first(seq6621__$1);
  var seq6621__$2 = cljs.core.next(seq6621__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__6622, G__6623, seq6621__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset() {
  var G__6635 = arguments.length;
  switch(G__6635) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__6636 = cljs.core.aset;
  var G__6637 = array[idx];
  var G__6638 = idx2;
  var G__6639 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__6636, G__6637, G__6638, G__6639) : cljs.core.apply.call(null, G__6636, G__6637, G__6638, G__6639);
};
cljs.core.aset.cljs$lang$applyTo = function(seq6630) {
  var G__6631 = cljs.core.first(seq6630);
  var seq6630__$1 = cljs.core.next(seq6630);
  var G__6632 = cljs.core.first(seq6630__$1);
  var seq6630__$2 = cljs.core.next(seq6630__$1);
  var G__6633 = cljs.core.first(seq6630__$2);
  var seq6630__$3 = cljs.core.next(seq6630__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__6631, G__6632, G__6633, seq6630__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array() {
  var G__6642 = arguments.length;
  switch(G__6642) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__6643 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__6644 = [];
  var G__6645 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6643, G__6644, G__6645) : cljs.core.reduce.call(null, G__6643, G__6644, G__6645);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke() {
  var argseq__5348__auto__ = 2 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5348__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq6647) {
  var G__6648 = cljs.core.first(seq6647);
  var seq6647__$1 = cljs.core.next(seq6647);
  var G__6649 = cljs.core.first(seq6647__$1);
  var seq6647__$2 = cljs.core.next(seq6647__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__6648, G__6649, seq6647__$2);
};
cljs.core.Fn = function() {
  var obj6651 = {};
  return obj6651;
}();
cljs.core.IFn = function() {
  var obj6653 = {};
  return obj6653;
}();
cljs.core._invoke = function cljs$core$_invoke() {
  var G__6655 = arguments.length;
  switch(G__6655) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6657 = x__4944__auto__;
        return goog.typeOf(G__6657);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6659 = x__4944__auto__;
        return goog.typeOf(G__6659);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6661 = x__4944__auto__;
        return goog.typeOf(G__6661);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$4;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6663 = x__4944__auto__;
        return goog.typeOf(G__6663);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$5;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6665 = x__4944__auto__;
        return goog.typeOf(G__6665);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$6;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6667 = x__4944__auto__;
        return goog.typeOf(G__6667);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$7;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6669 = x__4944__auto__;
        return goog.typeOf(G__6669);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$8;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6671 = x__4944__auto__;
        return goog.typeOf(G__6671);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$9;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6673 = x__4944__auto__;
        return goog.typeOf(G__6673);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$10;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6675 = x__4944__auto__;
        return goog.typeOf(G__6675);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$11;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6677 = x__4944__auto__;
        return goog.typeOf(G__6677);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$12;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6679 = x__4944__auto__;
        return goog.typeOf(G__6679);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$13;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6681 = x__4944__auto__;
        return goog.typeOf(G__6681);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$14;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6683 = x__4944__auto__;
        return goog.typeOf(G__6683);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$15;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6685 = x__4944__auto__;
        return goog.typeOf(G__6685);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$16;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6687 = x__4944__auto__;
        return goog.typeOf(G__6687);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$17;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6689 = x__4944__auto__;
        return goog.typeOf(G__6689);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$18;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6691 = x__4944__auto__;
        return goog.typeOf(G__6691);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$19;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6693 = x__4944__auto__;
        return goog.typeOf(G__6693);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$20;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6695 = x__4944__auto__;
        return goog.typeOf(G__6695);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$21;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6697 = x__4944__auto__;
        return goog.typeOf(G__6697);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$22;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__6699 = x__4944__auto__;
        return goog.typeOf(G__6699);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
  var obj6702 = {};
  return obj6702;
}();
cljs.core._clone = function cljs$core$_clone(value) {
  if (function() {
    var and__4296__auto__ = value;
    if (and__4296__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4944__auto__ = value == null ? null : value;
    return function() {
      var or__4308__auto__ = cljs.core._clone[function() {
        var G__6706 = x__4944__auto__;
        return goog.typeOf(G__6706);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._clone["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj6708 = {};
  return obj6708;
}();
cljs.core._count = function cljs$core$_count(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._count[function() {
        var G__6712 = x__4944__auto__;
        return goog.typeOf(G__6712);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._count["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj6714 = {};
  return obj6714;
}();
cljs.core._empty = function cljs$core$_empty(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._empty[function() {
        var G__6718 = x__4944__auto__;
        return goog.typeOf(G__6718);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._empty["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj6720 = {};
  return obj6720;
}();
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._conj[function() {
        var G__6724 = x__4944__auto__;
        return goog.typeOf(G__6724);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._conj["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj6726 = {};
  return obj6726;
}();
cljs.core._nth = function cljs$core$_nth() {
  var G__6728 = arguments.length;
  switch(G__6728) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IIndexed$_nth$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._nth[function() {
        var G__6730 = x__4944__auto__;
        return goog.typeOf(G__6730);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._nth["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIndexed.-nth", coll);
        }
      }
    }().call(null, coll, n);
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IIndexed$_nth$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._nth[function() {
        var G__6732 = x__4944__auto__;
        return goog.typeOf(G__6732);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._nth["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIndexed.-nth", coll);
        }
      }
    }().call(null, coll, n, not_found);
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
  var obj6735 = {};
  return obj6735;
}();
cljs.core.ISeq = function() {
  var obj6737 = {};
  return obj6737;
}();
cljs.core._first = function cljs$core$_first(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._first[function() {
        var G__6741 = x__4944__auto__;
        return goog.typeOf(G__6741);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._first["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._rest[function() {
        var G__6745 = x__4944__auto__;
        return goog.typeOf(G__6745);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._rest["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj6747 = {};
  return obj6747;
}();
cljs.core._next = function cljs$core$_next(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._next[function() {
        var G__6751 = x__4944__auto__;
        return goog.typeOf(G__6751);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._next["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj6753 = {};
  return obj6753;
}();
cljs.core._lookup = function cljs$core$_lookup() {
  var G__6755 = arguments.length;
  switch(G__6755) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ILookup$_lookup$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._lookup[function() {
        var G__6757 = x__4944__auto__;
        return goog.typeOf(G__6757);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._lookup["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ILookup.-lookup", o);
        }
      }
    }().call(null, o, k);
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ILookup$_lookup$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._lookup[function() {
        var G__6759 = x__4944__auto__;
        return goog.typeOf(G__6759);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._lookup["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ILookup.-lookup", o);
        }
      }
    }().call(null, o, k, not_found);
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
  var obj6762 = {};
  return obj6762;
}();
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__6766 = x__4944__auto__;
        return goog.typeOf(G__6766);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._assoc[function() {
        var G__6770 = x__4944__auto__;
        return goog.typeOf(G__6770);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._assoc["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj6772 = {};
  return obj6772;
}();
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._dissoc[function() {
        var G__6776 = x__4944__auto__;
        return goog.typeOf(G__6776);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._dissoc["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj6778 = {};
  return obj6778;
}();
cljs.core._key = function cljs$core$_key(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._key[function() {
        var G__6782 = x__4944__auto__;
        return goog.typeOf(G__6782);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._key["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._val[function() {
        var G__6786 = x__4944__auto__;
        return goog.typeOf(G__6786);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._val["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj6788 = {};
  return obj6788;
}();
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._disjoin[function() {
        var G__6792 = x__4944__auto__;
        return goog.typeOf(G__6792);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._disjoin["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj6794 = {};
  return obj6794;
}();
cljs.core._peek = function cljs$core$_peek(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._peek[function() {
        var G__6798 = x__4944__auto__;
        return goog.typeOf(G__6798);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._peek["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._pop[function() {
        var G__6802 = x__4944__auto__;
        return goog.typeOf(G__6802);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._pop["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj6804 = {};
  return obj6804;
}();
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._assoc_n[function() {
        var G__6808 = x__4944__auto__;
        return goog.typeOf(G__6808);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._assoc_n["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj6810 = {};
  return obj6810;
}();
cljs.core._deref = function cljs$core$_deref(o) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._deref[function() {
        var G__6814 = x__4944__auto__;
        return goog.typeOf(G__6814);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._deref["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj6816 = {};
  return obj6816;
}();
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._deref_with_timeout[function() {
        var G__6820 = x__4944__auto__;
        return goog.typeOf(G__6820);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj6822 = {};
  return obj6822;
}();
cljs.core._meta = function cljs$core$_meta(o) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._meta[function() {
        var G__6826 = x__4944__auto__;
        return goog.typeOf(G__6826);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._meta["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj6828 = {};
  return obj6828;
}();
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._with_meta[function() {
        var G__6832 = x__4944__auto__;
        return goog.typeOf(G__6832);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._with_meta["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj6834 = {};
  return obj6834;
}();
cljs.core._reduce = function cljs$core$_reduce() {
  var G__6836 = arguments.length;
  switch(G__6836) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IReduce$_reduce$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._reduce[function() {
        var G__6838 = x__4944__auto__;
        return goog.typeOf(G__6838);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._reduce["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReduce.-reduce", coll);
        }
      }
    }().call(null, coll, f);
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IReduce$_reduce$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._reduce[function() {
        var G__6840 = x__4944__auto__;
        return goog.typeOf(G__6840);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._reduce["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReduce.-reduce", coll);
        }
      }
    }().call(null, coll, f, start);
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
  var obj6843 = {};
  return obj6843;
}();
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._kv_reduce[function() {
        var G__6847 = x__4944__auto__;
        return goog.typeOf(G__6847);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj6849 = {};
  return obj6849;
}();
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._equiv[function() {
        var G__6853 = x__4944__auto__;
        return goog.typeOf(G__6853);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._equiv["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj6855 = {};
  return obj6855;
}();
cljs.core._hash = function cljs$core$_hash(o) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._hash[function() {
        var G__6859 = x__4944__auto__;
        return goog.typeOf(G__6859);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._hash["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj6861 = {};
  return obj6861;
}();
cljs.core._seq = function cljs$core$_seq(o) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._seq[function() {
        var G__6865 = x__4944__auto__;
        return goog.typeOf(G__6865);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._seq["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj6867 = {};
  return obj6867;
}();
cljs.core.IList = function() {
  var obj6869 = {};
  return obj6869;
}();
cljs.core.IRecord = function() {
  var obj6871 = {};
  return obj6871;
}();
cljs.core.IReversible = function() {
  var obj6873 = {};
  return obj6873;
}();
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._rseq[function() {
        var G__6877 = x__4944__auto__;
        return goog.typeOf(G__6877);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._rseq["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj6879 = {};
  return obj6879;
}();
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._sorted_seq[function() {
        var G__6883 = x__4944__auto__;
        return goog.typeOf(G__6883);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._sorted_seq_from[function() {
        var G__6887 = x__4944__auto__;
        return goog.typeOf(G__6887);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._entry_key[function() {
        var G__6891 = x__4944__auto__;
        return goog.typeOf(G__6891);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._entry_key["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._comparator[function() {
        var G__6895 = x__4944__auto__;
        return goog.typeOf(G__6895);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._comparator["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj6897 = {};
  return obj6897;
}();
cljs.core._write = function cljs$core$_write(writer, s) {
  if (function() {
    var and__4296__auto__ = writer;
    if (and__4296__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4944__auto__ = writer == null ? null : writer;
    return function() {
      var or__4308__auto__ = cljs.core._write[function() {
        var G__6901 = x__4944__auto__;
        return goog.typeOf(G__6901);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._write["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (function() {
    var and__4296__auto__ = writer;
    if (and__4296__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4944__auto__ = writer == null ? null : writer;
    return function() {
      var or__4308__auto__ = cljs.core._flush[function() {
        var G__6905 = x__4944__auto__;
        return goog.typeOf(G__6905);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._flush["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj6907 = {};
  return obj6907;
}();
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._pr_writer[function() {
        var G__6911 = x__4944__auto__;
        return goog.typeOf(G__6911);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._pr_writer["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj6913 = {};
  return obj6913;
}();
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (function() {
    var and__4296__auto__ = d;
    if (and__4296__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4944__auto__ = d == null ? null : d;
    return function() {
      var or__4308__auto__ = cljs.core._realized_QMARK_[function() {
        var G__6917 = x__4944__auto__;
        return goog.typeOf(G__6917);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj6919 = {};
  return obj6919;
}();
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._notify_watches[function() {
        var G__6923 = x__4944__auto__;
        return goog.typeOf(G__6923);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._notify_watches["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._add_watch[function() {
        var G__6927 = x__4944__auto__;
        return goog.typeOf(G__6927);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._add_watch["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._remove_watch[function() {
        var G__6931 = x__4944__auto__;
        return goog.typeOf(G__6931);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._remove_watch["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj6933 = {};
  return obj6933;
}();
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._as_transient[function() {
        var G__6937 = x__4944__auto__;
        return goog.typeOf(G__6937);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._as_transient["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj6939 = {};
  return obj6939;
}();
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._conj_BANG_[function() {
        var G__6943 = x__4944__auto__;
        return goog.typeOf(G__6943);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._persistent_BANG_[function() {
        var G__6947 = x__4944__auto__;
        return goog.typeOf(G__6947);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj6949 = {};
  return obj6949;
}();
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._assoc_BANG_[function() {
        var G__6953 = x__4944__auto__;
        return goog.typeOf(G__6953);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj6955 = {};
  return obj6955;
}();
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__6959 = x__4944__auto__;
        return goog.typeOf(G__6959);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj6961 = {};
  return obj6961;
}();
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__6965 = x__4944__auto__;
        return goog.typeOf(G__6965);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._pop_BANG_[function() {
        var G__6969 = x__4944__auto__;
        return goog.typeOf(G__6969);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj6971 = {};
  return obj6971;
}();
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__6975 = x__4944__auto__;
        return goog.typeOf(G__6975);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj6977 = {};
  return obj6977;
}();
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._compare[function() {
        var G__6981 = x__4944__auto__;
        return goog.typeOf(G__6981);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._compare["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj6983 = {};
  return obj6983;
}();
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._drop_first[function() {
        var G__6987 = x__4944__auto__;
        return goog.typeOf(G__6987);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._drop_first["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj6989 = {};
  return obj6989;
}();
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._chunked_first[function() {
        var G__6993 = x__4944__auto__;
        return goog.typeOf(G__6993);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._chunked_first["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._chunked_rest[function() {
        var G__6997 = x__4944__auto__;
        return goog.typeOf(G__6997);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj6999 = {};
  return obj6999;
}();
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._chunked_next[function() {
        var G__7003 = x__4944__auto__;
        return goog.typeOf(G__7003);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._chunked_next["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj7005 = {};
  return obj7005;
}();
cljs.core._name = function cljs$core$_name(x) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._name[function() {
        var G__7009 = x__4944__auto__;
        return goog.typeOf(G__7009);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._name["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._namespace[function() {
        var G__7013 = x__4944__auto__;
        return goog.typeOf(G__7013);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._namespace["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj7015 = {};
  return obj7015;
}();
cljs.core.IReset = function() {
  var obj7017 = {};
  return obj7017;
}();
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._reset_BANG_[function() {
        var G__7021 = x__4944__auto__;
        return goog.typeOf(G__7021);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj7023 = {};
  return obj7023;
}();
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_() {
  var G__7025 = arguments.length;
  switch(G__7025) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._swap_BANG_[function() {
        var G__7027 = x__4944__auto__;
        return goog.typeOf(G__7027);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._swap_BANG_[function() {
        var G__7029 = x__4944__auto__;
        return goog.typeOf(G__7029);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._swap_BANG_[function() {
        var G__7031 = x__4944__auto__;
        return goog.typeOf(G__7031);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a, b);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._swap_BANG_[function() {
        var G__7033 = x__4944__auto__;
        return goog.typeOf(G__7033);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a, b, xs);
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
  var obj7036 = {};
  return obj7036;
}();
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._vreset_BANG_[function() {
        var G__7040 = x__4944__auto__;
        return goog.typeOf(G__7040);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj7042 = {};
  return obj7042;
}();
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._iterator[function() {
        var G__7046 = x__4944__auto__;
        return goog.typeOf(G__7046);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._iterator["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__7049 = 4294967295;
  var G__7050 = 5;
  return Math.imul(G__7049, G__7050);
}() === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var G__7053 = a;
    var G__7054 = b;
    return Math.imul(G__7053, G__7054);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__7055 = i + 2;
        var G__7056 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__7055;
        h1 = G__7056;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj7058 = {};
  return obj7058;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__7059 = i + 1;
          var G__7060 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__7059;
          hash = G__7060;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj7064 = {};
      return obj7064;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (function() {
    var G__7067 = o;
    if (G__7067) {
      var bit__4975__auto__ = G__7067.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4975__auto__ || G__7067.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__7068 = o;
        return Math.floor(G__7068);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4296__auto__ = cljs.core.not(a.ns);
      if (and__4296__auto__) {
        return b.ns;
      } else {
        return and__4296__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__7075 = a.ns;
            var G__7076 = b.ns;
            return goog.array.defaultCompare(G__7075, G__7076);
          }();
          if (0 === nsc) {
            var G__7077 = a.name;
            var G__7078 = b.name;
            return goog.array.defaultCompare(G__7077, G__7078);
          } else {
            return nsc;
          }
        }
      } else {
        var G__7079 = a.name;
        var G__7080 = b.name;
        return goog.array.defaultCompare(G__7079, G__7080);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__7082 = null;
  var G__7082__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__7082__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__7082 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7082__2.call(this, self__, coll);
      case 3:
        return G__7082__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7082.cljs$core$IFn$_invoke$arity$2 = G__7082__2;
  G__7082.cljs$core$IFn$_invoke$arity$3 = G__7082__3;
  return G__7082;
}();
cljs.core.Symbol.prototype.apply = function(self__, args7081) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7081)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4724__auto__ = self__._hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol() {
  var G__7084 = arguments.length;
  switch(G__7084) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__7131 = null;
  var G__7131__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__7131__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__7131__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__7131__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__7131__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__7131__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__7131__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__7131__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__7131__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__7131__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__7131__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__7131__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__7131__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__7131__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__7131__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__7131__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__7131__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__7131__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__7131__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__7131__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__7131__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__7131__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7087 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__7088 = a;
    var G__7089 = b;
    var G__7090 = c;
    var G__7091 = d;
    var G__7092 = e;
    var G__7093 = f;
    var G__7094 = g;
    var G__7095 = h;
    var G__7096 = i;
    var G__7097 = j;
    var G__7098 = k;
    var G__7099 = l;
    var G__7100 = m;
    var G__7101 = n;
    var G__7102 = o;
    var G__7103 = p;
    var G__7104 = q;
    var G__7105 = r;
    var G__7106 = s;
    var G__7107 = t;
    var G__7108 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7087, G__7088, G__7089, G__7090, G__7091, G__7092, G__7093, G__7094, G__7095, G__7096, G__7097, G__7098, G__7099, G__7100, G__7101, G__7102, G__7103, G__7104, G__7105, G__7106, G__7107, G__7108) : cljs.core.apply.call(null, G__7087, G__7088, G__7089, G__7090, G__7091, G__7092, G__7093, G__7094, G__7095, G__7096, G__7097, G__7098, G__7099, G__7100, G__7101, G__7102, G__7103, G__7104, G__7105, 
    G__7106, G__7107, G__7108);
  };
  G__7131 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__7131__1.call(this, self__);
      case 2:
        return G__7131__2.call(this, self__, a);
      case 3:
        return G__7131__3.call(this, self__, a, b);
      case 4:
        return G__7131__4.call(this, self__, a, b, c);
      case 5:
        return G__7131__5.call(this, self__, a, b, c, d);
      case 6:
        return G__7131__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__7131__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__7131__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__7131__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__7131__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__7131__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__7131__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__7131__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__7131__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__7131__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__7131__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__7131__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__7131__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__7131__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__7131__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__7131__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__7131__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7131.cljs$core$IFn$_invoke$arity$1 = G__7131__1;
  G__7131.cljs$core$IFn$_invoke$arity$2 = G__7131__2;
  G__7131.cljs$core$IFn$_invoke$arity$3 = G__7131__3;
  G__7131.cljs$core$IFn$_invoke$arity$4 = G__7131__4;
  G__7131.cljs$core$IFn$_invoke$arity$5 = G__7131__5;
  G__7131.cljs$core$IFn$_invoke$arity$6 = G__7131__6;
  G__7131.cljs$core$IFn$_invoke$arity$7 = G__7131__7;
  G__7131.cljs$core$IFn$_invoke$arity$8 = G__7131__8;
  G__7131.cljs$core$IFn$_invoke$arity$9 = G__7131__9;
  G__7131.cljs$core$IFn$_invoke$arity$10 = G__7131__10;
  G__7131.cljs$core$IFn$_invoke$arity$11 = G__7131__11;
  G__7131.cljs$core$IFn$_invoke$arity$12 = G__7131__12;
  G__7131.cljs$core$IFn$_invoke$arity$13 = G__7131__13;
  G__7131.cljs$core$IFn$_invoke$arity$14 = G__7131__14;
  G__7131.cljs$core$IFn$_invoke$arity$15 = G__7131__15;
  G__7131.cljs$core$IFn$_invoke$arity$16 = G__7131__16;
  G__7131.cljs$core$IFn$_invoke$arity$17 = G__7131__17;
  G__7131.cljs$core$IFn$_invoke$arity$18 = G__7131__18;
  G__7131.cljs$core$IFn$_invoke$arity$19 = G__7131__19;
  G__7131.cljs$core$IFn$_invoke$arity$20 = G__7131__20;
  G__7131.cljs$core$IFn$_invoke$arity$21 = G__7131__21;
  G__7131.cljs$core$IFn$_invoke$arity$22 = G__7131__22;
  return G__7131;
}();
cljs.core.Var.prototype.apply = function(self__, args7086) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7086)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__7109 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__7110 = a;
  var G__7111 = b;
  var G__7112 = c;
  var G__7113 = d;
  var G__7114 = e;
  var G__7115 = f;
  var G__7116 = g;
  var G__7117 = h;
  var G__7118 = i;
  var G__7119 = j;
  var G__7120 = k;
  var G__7121 = l;
  var G__7122 = m;
  var G__7123 = n;
  var G__7124 = o;
  var G__7125 = p;
  var G__7126 = q;
  var G__7127 = r;
  var G__7128 = s;
  var G__7129 = t;
  var G__7130 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7109, G__7110, G__7111, G__7112, G__7113, G__7114, G__7115, G__7116, G__7117, G__7118, G__7119, G__7120, G__7121, G__7122, G__7123, G__7124, G__7125, G__7126, G__7127, G__7128, G__7129, G__7130) : cljs.core.apply.call(null, G__7109, G__7110, G__7111, G__7112, G__7113, G__7114, G__7115, G__7116, G__7117, G__7118, G__7119, G__7120, G__7121, G__7122, G__7123, G__7124, G__7125, G__7126, G__7127, 
  G__7128, G__7129, G__7130);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  var G__7133 = x;
  if (G__7133) {
    var bit__4982__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__4308__auto__ = bit__4982__auto__;
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return G__7133.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__7133.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__7133);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__7133);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  var G__7135 = value;
  if (G__7135) {
    var bit__4982__auto__ = G__7135.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4982__auto__ || G__7135.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__7135.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__7135);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__7135);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__7137 = coll;
      if (G__7137) {
        var bit__4975__auto__ = G__7137.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4975__auto__ || G__7137.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__7139 = coll;
      if (G__7139) {
        var bit__4975__auto__ = G__7139.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4975__auto__ || G__7139.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__7141 = coll;
      if (G__7141) {
        var bit__4975__auto__ = G__7141.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4975__auto__ || G__7141.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__7143 = coll;
      if (G__7143) {
        var bit__4975__auto__ = G__7143.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4975__auto__ || G__7143.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_() {
  var G__7148 = arguments.length;
  switch(G__7148) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__7150 = y;
        var G__7151 = cljs.core.first(more);
        var G__7152 = cljs.core.next(more);
        x = G__7150;
        y = G__7151;
        more = G__7152;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq7144) {
  var G__7145 = cljs.core.first(seq7144);
  var seq7144__$1 = cljs.core.next(seq7144);
  var G__7146 = cljs.core.first(seq7144__$1);
  var seq7144__$2 = cljs.core.next(seq7144__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__7145, G__7146, seq7144__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__7153 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__7153) : cljs.core.es6_iterator_seq.call(null, G__7153);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null)], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__7154 = n + 1;
      var G__7155 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__7156 = cljs.core.next(coll__$1);
      n = G__7154;
      hash_code = G__7155;
      coll__$1 = G__7156;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__7157 = n + 1;
      var G__7158 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__7159 = cljs.core.next(coll__$1);
      n = G__7157;
      hash_code = G__7158;
      coll__$1 = G__7159;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  var G__7160 = this$__$1.valueOf();
  var G__7161 = other.valueOf();
  return goog.array.defaultCompare(G__7160, G__7161);
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__7162 = o;
  return goog.getUid(G__7162);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__7164 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7164) : cljs.core.deref.call(null, G__7164);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce() {
  var G__7166 = arguments.length;
  switch(G__7166) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__7167 = val;
          var G__7168 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7167, G__7168) : f.call(null, G__7167, G__7168);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__7174 = nval;
          var G__7175 = n + 1;
          val = G__7174;
          n = G__7175;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__7169 = val__$1;
        var G__7170 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7169, G__7170) : f.call(null, G__7169, G__7170);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__7176 = nval;
        var G__7177 = n + 1;
        val__$1 = G__7176;
        n = G__7177;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__7171 = val__$1;
        var G__7172 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7171, G__7172) : f.call(null, G__7171, G__7172);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__7178 = nval;
        var G__7179 = n + 1;
        val__$1 = G__7178;
        n = G__7179;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce() {
  var G__7181 = arguments.length;
  switch(G__7181) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__7182 = val;
          var G__7183 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7182, G__7183) : f.call(null, G__7182, G__7183);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__7189 = nval;
          var G__7190 = n + 1;
          val = G__7189;
          n = G__7190;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__7184 = val__$1;
        var G__7185 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7184, G__7185) : f.call(null, G__7184, G__7185);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__7191 = nval;
        var G__7192 = n + 1;
        val__$1 = G__7191;
        n = G__7192;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__7186 = val__$1;
        var G__7187 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7186, G__7187) : f.call(null, G__7186, G__7187);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__7193 = nval;
        var G__7194 = n + 1;
        val__$1 = G__7193;
        n = G__7194;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  var G__7196 = x;
  if (G__7196) {
    var bit__4982__auto__ = G__7196.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4982__auto__ || G__7196.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__7196.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__7196);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__7196);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  var G__7198 = x;
  if (G__7198) {
    var bit__4982__auto__ = G__7198.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4982__auto__ || G__7198.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__7198.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__7198);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__7198);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__7199 = coll__$1;
  var G__7200 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__7199, G__7200) : cljs.core.equiv_sequential.call(null, G__7199, G__7200);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__7201 = o;
  var G__7202 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__7201, G__7202) : cljs.core.cons.call(null, G__7201, G__7202);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq() {
  var G__7204 = arguments.length;
  switch(G__7204) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq() {
  var G__7207 = arguments.length;
  switch(G__7207) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__7209 = coll__$1;
  var G__7210 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__7209, G__7210) : cljs.core.equiv_sequential.call(null, G__7209, G__7210);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__7211 = cljs.core.List.EMPTY;
  var G__7212 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__7211, G__7212) : cljs.core.with_meta.call(null, G__7211, G__7212);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__7213 = f;
  var G__7214 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__7213, G__7214) : cljs.core.seq_reduce.call(null, G__7213, G__7214);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__7215 = f;
  var G__7216 = start;
  var G__7217 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__7215, G__7216, G__7217) : cljs.core.seq_reduce.call(null, G__7215, G__7216, G__7217);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__7218 = o;
  var G__7219 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__7218, G__7219) : cljs.core.cons.call(null, G__7218, G__7219);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__7220 = sn;
      s = G__7220;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj() {
  var G__7225 = arguments.length;
  switch(G__7225) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__7227 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__7228 = cljs.core.first(xs);
      var G__7229 = cljs.core.next(xs);
      coll = G__7227;
      x = G__7228;
      xs = G__7229;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq7221) {
  var G__7222 = cljs.core.first(seq7221);
  var seq7221__$1 = cljs.core.next(seq7221);
  var G__7223 = cljs.core.first(seq7221__$1);
  var seq7221__$2 = cljs.core.next(seq7221__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__7222, G__7223, seq7221__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__7230 = cljs.core.next(s);
      var G__7231 = acc + 1;
      s = G__7230;
      acc = G__7231;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__7233 = coll;
      if (G__7233) {
        var bit__4975__auto__ = G__7233.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4975__auto__ || G__7233.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth() {
  var G__7235 = arguments.length;
  switch(G__7235) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__7237 = cljs.core.next(coll);
            var G__7238 = n - 1;
            coll = G__7237;
            n = G__7238;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__7239 = cljs.core.next(coll);
            var G__7240 = n - 1;
            var G__7241 = not_found;
            coll = G__7239;
            n = G__7240;
            not_found = G__7241;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth() {
  var G__7243 = arguments.length;
  switch(G__7243) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (function() {
        var G__7244 = coll;
        if (G__7244) {
          var bit__4975__auto__ = G__7244.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4975__auto__ || G__7244.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (function() {
                var G__7245 = coll;
                if (G__7245) {
                  var bit__4982__auto__ = G__7245.cljs$lang$protocol_mask$partition0$ & 64;
                  if (bit__4982__auto__ || G__7245.cljs$core$ISeq$) {
                    return true;
                  } else {
                    if (!G__7245.cljs$lang$protocol_mask$partition0$) {
                      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__7245);
                    } else {
                      return false;
                    }
                  }
                } else {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__7245);
                }
              }()) {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (function() {
        var G__7246 = coll;
        if (G__7246) {
          var bit__4975__auto__ = G__7246.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4975__auto__ || G__7246.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (function() {
                var G__7247 = coll;
                if (G__7247) {
                  var bit__4982__auto__ = G__7247.cljs$lang$protocol_mask$partition0$ & 64;
                  if (bit__4982__auto__ || G__7247.cljs$core$ISeq$) {
                    return true;
                  } else {
                    if (!G__7247.cljs$lang$protocol_mask$partition0$) {
                      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__7247);
                    } else {
                      return false;
                    }
                  }
                } else {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__7247);
                }
              }()) {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__7249 = n__$1 - 1;
      var G__7250 = cljs.core.rest(xs);
      n__$1 = G__7249;
      xs = G__7250;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get() {
  var G__7252 = arguments.length;
  switch(G__7252) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (function() {
      var G__7253 = o;
      if (G__7253) {
        var bit__4975__auto__ = G__7253.cljs$lang$protocol_mask$partition0$ & 256;
        if (bit__4975__auto__ || G__7253.cljs$core$ILookup$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (function() {
      var G__7254 = o;
      if (G__7254) {
        var bit__4975__auto__ = G__7254.cljs$lang$protocol_mask$partition0$ & 256;
        if (bit__4975__auto__ || G__7254.cljs$core$ILookup$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc() {
  var G__7261 = arguments.length;
  switch(G__7261) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__7263 = ret;
      var G__7264 = cljs.core.first(kvs);
      var G__7265 = cljs.core.second(kvs);
      var G__7266 = cljs.core.nnext(kvs);
      coll = G__7263;
      k = G__7264;
      v = G__7265;
      kvs = G__7266;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq7256) {
  var G__7257 = cljs.core.first(seq7256);
  var seq7256__$1 = cljs.core.next(seq7256);
  var G__7258 = cljs.core.first(seq7256__$1);
  var seq7256__$2 = cljs.core.next(seq7256__$1);
  var G__7259 = cljs.core.first(seq7256__$2);
  var seq7256__$3 = cljs.core.next(seq7256__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__7257, G__7258, G__7259, seq7256__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc() {
  var G__7271 = arguments.length;
  switch(G__7271) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__7273 = ret;
        var G__7274 = cljs.core.first(ks);
        var G__7275 = cljs.core.next(ks);
        coll = G__7273;
        k = G__7274;
        ks = G__7275;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq7267) {
  var G__7268 = cljs.core.first(seq7267);
  var seq7267__$1 = cljs.core.next(seq7267);
  var G__7269 = cljs.core.first(seq7267__$1);
  var seq7267__$2 = cljs.core.next(seq7267__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__7268, G__7269, seq7267__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4308__auto__ = function() {
    var G__7280 = f;
    return goog.isFunction(G__7280);
  }();
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    var G__7281 = f;
    if (G__7281) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto____$1 = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          return G__7281.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__7281.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__7281);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__7281);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__7747 = null;
  var G__7747__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__7747__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7283 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7283) : self__.afn.call(null, G__7283);
  };
  var G__7747__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7284 = a;
    var G__7285 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7284, G__7285) : self__.afn.call(null, G__7284, G__7285);
  };
  var G__7747__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7286 = a;
    var G__7287 = b;
    var G__7288 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7286, G__7287, G__7288) : self__.afn.call(null, G__7286, G__7287, G__7288);
  };
  var G__7747__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7289 = a;
    var G__7290 = b;
    var G__7291 = c;
    var G__7292 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7289, G__7290, G__7291, G__7292) : self__.afn.call(null, G__7289, G__7290, G__7291, G__7292);
  };
  var G__7747__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7293 = a;
    var G__7294 = b;
    var G__7295 = c;
    var G__7296 = d;
    var G__7297 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7293, G__7294, G__7295, G__7296, G__7297) : self__.afn.call(null, G__7293, G__7294, G__7295, G__7296, G__7297);
  };
  var G__7747__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7298 = a;
    var G__7299 = b;
    var G__7300 = c;
    var G__7301 = d;
    var G__7302 = e;
    var G__7303 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7298, G__7299, G__7300, G__7301, G__7302, G__7303) : self__.afn.call(null, G__7298, G__7299, G__7300, G__7301, G__7302, G__7303);
  };
  var G__7747__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7304 = a;
    var G__7305 = b;
    var G__7306 = c;
    var G__7307 = d;
    var G__7308 = e;
    var G__7309 = f;
    var G__7310 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7304, G__7305, G__7306, G__7307, G__7308, G__7309, G__7310) : self__.afn.call(null, G__7304, G__7305, G__7306, G__7307, G__7308, G__7309, G__7310);
  };
  var G__7747__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7311 = a;
    var G__7312 = b;
    var G__7313 = c;
    var G__7314 = d;
    var G__7315 = e;
    var G__7316 = f;
    var G__7317 = g;
    var G__7318 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7311, G__7312, G__7313, G__7314, G__7315, G__7316, G__7317, G__7318) : self__.afn.call(null, G__7311, G__7312, G__7313, G__7314, G__7315, G__7316, G__7317, G__7318);
  };
  var G__7747__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7319 = a;
    var G__7320 = b;
    var G__7321 = c;
    var G__7322 = d;
    var G__7323 = e;
    var G__7324 = f;
    var G__7325 = g;
    var G__7326 = h;
    var G__7327 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7319, G__7320, G__7321, G__7322, G__7323, G__7324, G__7325, G__7326, G__7327) : self__.afn.call(null, G__7319, G__7320, G__7321, G__7322, G__7323, G__7324, G__7325, G__7326, G__7327);
  };
  var G__7747__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7328 = a;
    var G__7329 = b;
    var G__7330 = c;
    var G__7331 = d;
    var G__7332 = e;
    var G__7333 = f;
    var G__7334 = g;
    var G__7335 = h;
    var G__7336 = i;
    var G__7337 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7328, G__7329, G__7330, G__7331, G__7332, G__7333, G__7334, G__7335, G__7336, G__7337) : self__.afn.call(null, G__7328, G__7329, G__7330, G__7331, G__7332, G__7333, G__7334, G__7335, G__7336, G__7337);
  };
  var G__7747__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7338 = a;
    var G__7339 = b;
    var G__7340 = c;
    var G__7341 = d;
    var G__7342 = e;
    var G__7343 = f;
    var G__7344 = g;
    var G__7345 = h;
    var G__7346 = i;
    var G__7347 = j;
    var G__7348 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7338, G__7339, G__7340, G__7341, G__7342, G__7343, G__7344, G__7345, G__7346, G__7347, G__7348) : self__.afn.call(null, G__7338, G__7339, G__7340, G__7341, G__7342, G__7343, G__7344, G__7345, G__7346, G__7347, G__7348);
  };
  var G__7747__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7349 = a;
    var G__7350 = b;
    var G__7351 = c;
    var G__7352 = d;
    var G__7353 = e;
    var G__7354 = f;
    var G__7355 = g;
    var G__7356 = h;
    var G__7357 = i;
    var G__7358 = j;
    var G__7359 = k;
    var G__7360 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7349, G__7350, G__7351, G__7352, G__7353, G__7354, G__7355, G__7356, G__7357, G__7358, G__7359, G__7360) : self__.afn.call(null, G__7349, G__7350, G__7351, G__7352, G__7353, G__7354, G__7355, G__7356, G__7357, G__7358, G__7359, G__7360);
  };
  var G__7747__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7361 = a;
    var G__7362 = b;
    var G__7363 = c;
    var G__7364 = d;
    var G__7365 = e;
    var G__7366 = f;
    var G__7367 = g;
    var G__7368 = h;
    var G__7369 = i;
    var G__7370 = j;
    var G__7371 = k;
    var G__7372 = l;
    var G__7373 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7361, G__7362, G__7363, G__7364, G__7365, G__7366, G__7367, G__7368, G__7369, G__7370, G__7371, G__7372, G__7373) : self__.afn.call(null, G__7361, G__7362, G__7363, G__7364, G__7365, G__7366, G__7367, G__7368, G__7369, G__7370, G__7371, G__7372, G__7373);
  };
  var G__7747__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7374 = a;
    var G__7375 = b;
    var G__7376 = c;
    var G__7377 = d;
    var G__7378 = e;
    var G__7379 = f;
    var G__7380 = g;
    var G__7381 = h;
    var G__7382 = i;
    var G__7383 = j;
    var G__7384 = k;
    var G__7385 = l;
    var G__7386 = m;
    var G__7387 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7374, G__7375, G__7376, G__7377, G__7378, G__7379, G__7380, G__7381, G__7382, G__7383, G__7384, G__7385, G__7386, G__7387) : self__.afn.call(null, G__7374, G__7375, G__7376, G__7377, G__7378, G__7379, G__7380, G__7381, G__7382, G__7383, G__7384, G__7385, G__7386, G__7387);
  };
  var G__7747__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7388 = a;
    var G__7389 = b;
    var G__7390 = c;
    var G__7391 = d;
    var G__7392 = e;
    var G__7393 = f;
    var G__7394 = g;
    var G__7395 = h;
    var G__7396 = i;
    var G__7397 = j;
    var G__7398 = k;
    var G__7399 = l;
    var G__7400 = m;
    var G__7401 = n;
    var G__7402 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7388, G__7389, G__7390, G__7391, G__7392, G__7393, G__7394, G__7395, G__7396, G__7397, G__7398, G__7399, G__7400, G__7401, G__7402) : self__.afn.call(null, G__7388, G__7389, G__7390, G__7391, G__7392, G__7393, G__7394, G__7395, G__7396, G__7397, G__7398, G__7399, G__7400, G__7401, G__7402);
  };
  var G__7747__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7403 = a;
    var G__7404 = b;
    var G__7405 = c;
    var G__7406 = d;
    var G__7407 = e;
    var G__7408 = f;
    var G__7409 = g;
    var G__7410 = h;
    var G__7411 = i;
    var G__7412 = j;
    var G__7413 = k;
    var G__7414 = l;
    var G__7415 = m;
    var G__7416 = n;
    var G__7417 = o;
    var G__7418 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7403, G__7404, G__7405, G__7406, G__7407, G__7408, G__7409, G__7410, G__7411, G__7412, G__7413, G__7414, G__7415, G__7416, G__7417, G__7418) : self__.afn.call(null, G__7403, G__7404, G__7405, G__7406, G__7407, G__7408, G__7409, G__7410, G__7411, G__7412, G__7413, G__7414, G__7415, G__7416, G__7417, G__7418);
  };
  var G__7747__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7419 = a;
    var G__7420 = b;
    var G__7421 = c;
    var G__7422 = d;
    var G__7423 = e;
    var G__7424 = f;
    var G__7425 = g;
    var G__7426 = h;
    var G__7427 = i;
    var G__7428 = j;
    var G__7429 = k;
    var G__7430 = l;
    var G__7431 = m;
    var G__7432 = n;
    var G__7433 = o;
    var G__7434 = p;
    var G__7435 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7419, G__7420, G__7421, G__7422, G__7423, G__7424, G__7425, G__7426, G__7427, G__7428, G__7429, G__7430, G__7431, G__7432, G__7433, G__7434, G__7435) : self__.afn.call(null, G__7419, G__7420, G__7421, G__7422, G__7423, G__7424, G__7425, G__7426, G__7427, G__7428, G__7429, G__7430, G__7431, G__7432, G__7433, G__7434, G__7435);
  };
  var G__7747__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7436 = a;
    var G__7437 = b;
    var G__7438 = c;
    var G__7439 = d;
    var G__7440 = e;
    var G__7441 = f;
    var G__7442 = g;
    var G__7443 = h;
    var G__7444 = i;
    var G__7445 = j;
    var G__7446 = k;
    var G__7447 = l;
    var G__7448 = m;
    var G__7449 = n;
    var G__7450 = o;
    var G__7451 = p;
    var G__7452 = q;
    var G__7453 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7436, G__7437, G__7438, G__7439, G__7440, G__7441, G__7442, G__7443, G__7444, G__7445, G__7446, G__7447, G__7448, G__7449, G__7450, G__7451, G__7452, G__7453) : self__.afn.call(null, G__7436, G__7437, G__7438, G__7439, G__7440, G__7441, G__7442, G__7443, G__7444, G__7445, G__7446, G__7447, G__7448, G__7449, G__7450, G__7451, G__7452, G__7453);
  };
  var G__7747__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7454 = a;
    var G__7455 = b;
    var G__7456 = c;
    var G__7457 = d;
    var G__7458 = e;
    var G__7459 = f;
    var G__7460 = g;
    var G__7461 = h;
    var G__7462 = i;
    var G__7463 = j;
    var G__7464 = k;
    var G__7465 = l;
    var G__7466 = m;
    var G__7467 = n;
    var G__7468 = o;
    var G__7469 = p;
    var G__7470 = q;
    var G__7471 = r;
    var G__7472 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7454, G__7455, G__7456, G__7457, G__7458, G__7459, G__7460, G__7461, G__7462, G__7463, G__7464, G__7465, G__7466, G__7467, G__7468, G__7469, G__7470, G__7471, G__7472) : self__.afn.call(null, G__7454, G__7455, G__7456, G__7457, G__7458, G__7459, G__7460, G__7461, G__7462, G__7463, G__7464, G__7465, G__7466, G__7467, G__7468, G__7469, G__7470, G__7471, G__7472);
  };
  var G__7747__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7473 = a;
    var G__7474 = b;
    var G__7475 = c;
    var G__7476 = d;
    var G__7477 = e;
    var G__7478 = f;
    var G__7479 = g;
    var G__7480 = h;
    var G__7481 = i;
    var G__7482 = j;
    var G__7483 = k;
    var G__7484 = l;
    var G__7485 = m;
    var G__7486 = n;
    var G__7487 = o;
    var G__7488 = p;
    var G__7489 = q;
    var G__7490 = r;
    var G__7491 = s;
    var G__7492 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7473, G__7474, G__7475, G__7476, G__7477, G__7478, G__7479, G__7480, G__7481, G__7482, G__7483, G__7484, G__7485, G__7486, G__7487, G__7488, G__7489, G__7490, G__7491, G__7492) : self__.afn.call(null, G__7473, G__7474, G__7475, G__7476, G__7477, G__7478, G__7479, G__7480, G__7481, G__7482, G__7483, G__7484, G__7485, G__7486, G__7487, G__7488, G__7489, G__7490, G__7491, G__7492);
  };
  var G__7747__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7493 = self__.afn;
    var G__7494 = a;
    var G__7495 = b;
    var G__7496 = c;
    var G__7497 = d;
    var G__7498 = e;
    var G__7499 = f;
    var G__7500 = g;
    var G__7501 = h;
    var G__7502 = i;
    var G__7503 = j;
    var G__7504 = k;
    var G__7505 = l;
    var G__7506 = m;
    var G__7507 = n;
    var G__7508 = o;
    var G__7509 = p;
    var G__7510 = q;
    var G__7511 = r;
    var G__7512 = s;
    var G__7513 = t;
    var G__7514 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7493, G__7494, G__7495, G__7496, G__7497, G__7498, G__7499, G__7500, G__7501, G__7502, G__7503, G__7504, G__7505, G__7506, G__7507, G__7508, G__7509, G__7510, G__7511, G__7512, G__7513, G__7514) : cljs.core.apply.call(null, G__7493, G__7494, G__7495, G__7496, G__7497, G__7498, G__7499, G__7500, G__7501, G__7502, G__7503, G__7504, G__7505, G__7506, G__7507, G__7508, G__7509, G__7510, G__7511, 
    G__7512, G__7513, G__7514);
  };
  G__7747 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__7747__1.call(this, self__);
      case 2:
        return G__7747__2.call(this, self__, a);
      case 3:
        return G__7747__3.call(this, self__, a, b);
      case 4:
        return G__7747__4.call(this, self__, a, b, c);
      case 5:
        return G__7747__5.call(this, self__, a, b, c, d);
      case 6:
        return G__7747__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__7747__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__7747__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__7747__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__7747__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__7747__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__7747__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__7747__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__7747__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__7747__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__7747__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__7747__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__7747__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__7747__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__7747__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__7747__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__7747__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7747.cljs$core$IFn$_invoke$arity$1 = G__7747__1;
  G__7747.cljs$core$IFn$_invoke$arity$2 = G__7747__2;
  G__7747.cljs$core$IFn$_invoke$arity$3 = G__7747__3;
  G__7747.cljs$core$IFn$_invoke$arity$4 = G__7747__4;
  G__7747.cljs$core$IFn$_invoke$arity$5 = G__7747__5;
  G__7747.cljs$core$IFn$_invoke$arity$6 = G__7747__6;
  G__7747.cljs$core$IFn$_invoke$arity$7 = G__7747__7;
  G__7747.cljs$core$IFn$_invoke$arity$8 = G__7747__8;
  G__7747.cljs$core$IFn$_invoke$arity$9 = G__7747__9;
  G__7747.cljs$core$IFn$_invoke$arity$10 = G__7747__10;
  G__7747.cljs$core$IFn$_invoke$arity$11 = G__7747__11;
  G__7747.cljs$core$IFn$_invoke$arity$12 = G__7747__12;
  G__7747.cljs$core$IFn$_invoke$arity$13 = G__7747__13;
  G__7747.cljs$core$IFn$_invoke$arity$14 = G__7747__14;
  G__7747.cljs$core$IFn$_invoke$arity$15 = G__7747__15;
  G__7747.cljs$core$IFn$_invoke$arity$16 = G__7747__16;
  G__7747.cljs$core$IFn$_invoke$arity$17 = G__7747__17;
  G__7747.cljs$core$IFn$_invoke$arity$18 = G__7747__18;
  G__7747.cljs$core$IFn$_invoke$arity$19 = G__7747__19;
  G__7747.cljs$core$IFn$_invoke$arity$20 = G__7747__20;
  G__7747.cljs$core$IFn$_invoke$arity$21 = G__7747__21;
  G__7747.cljs$core$IFn$_invoke$arity$22 = G__7747__22;
  return G__7747;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args7282) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7282)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__7515 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7515) : self__.afn.call(null, G__7515);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__7516 = a;
  var G__7517 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7516, G__7517) : self__.afn.call(null, G__7516, G__7517);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__7518 = a;
  var G__7519 = b;
  var G__7520 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7518, G__7519, G__7520) : self__.afn.call(null, G__7518, G__7519, G__7520);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__7521 = a;
  var G__7522 = b;
  var G__7523 = c;
  var G__7524 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7521, G__7522, G__7523, G__7524) : self__.afn.call(null, G__7521, G__7522, G__7523, G__7524);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__7525 = a;
  var G__7526 = b;
  var G__7527 = c;
  var G__7528 = d;
  var G__7529 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7525, G__7526, G__7527, G__7528, G__7529) : self__.afn.call(null, G__7525, G__7526, G__7527, G__7528, G__7529);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__7530 = a;
  var G__7531 = b;
  var G__7532 = c;
  var G__7533 = d;
  var G__7534 = e;
  var G__7535 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7530, G__7531, G__7532, G__7533, G__7534, G__7535) : self__.afn.call(null, G__7530, G__7531, G__7532, G__7533, G__7534, G__7535);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__7536 = a;
  var G__7537 = b;
  var G__7538 = c;
  var G__7539 = d;
  var G__7540 = e;
  var G__7541 = f;
  var G__7542 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7536, G__7537, G__7538, G__7539, G__7540, G__7541, G__7542) : self__.afn.call(null, G__7536, G__7537, G__7538, G__7539, G__7540, G__7541, G__7542);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__7543 = a;
  var G__7544 = b;
  var G__7545 = c;
  var G__7546 = d;
  var G__7547 = e;
  var G__7548 = f;
  var G__7549 = g;
  var G__7550 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7543, G__7544, G__7545, G__7546, G__7547, G__7548, G__7549, G__7550) : self__.afn.call(null, G__7543, G__7544, G__7545, G__7546, G__7547, G__7548, G__7549, G__7550);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__7551 = a;
  var G__7552 = b;
  var G__7553 = c;
  var G__7554 = d;
  var G__7555 = e;
  var G__7556 = f;
  var G__7557 = g;
  var G__7558 = h;
  var G__7559 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7551, G__7552, G__7553, G__7554, G__7555, G__7556, G__7557, G__7558, G__7559) : self__.afn.call(null, G__7551, G__7552, G__7553, G__7554, G__7555, G__7556, G__7557, G__7558, G__7559);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__7560 = a;
  var G__7561 = b;
  var G__7562 = c;
  var G__7563 = d;
  var G__7564 = e;
  var G__7565 = f;
  var G__7566 = g;
  var G__7567 = h;
  var G__7568 = i;
  var G__7569 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7560, G__7561, G__7562, G__7563, G__7564, G__7565, G__7566, G__7567, G__7568, G__7569) : self__.afn.call(null, G__7560, G__7561, G__7562, G__7563, G__7564, G__7565, G__7566, G__7567, G__7568, G__7569);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__7570 = a;
  var G__7571 = b;
  var G__7572 = c;
  var G__7573 = d;
  var G__7574 = e;
  var G__7575 = f;
  var G__7576 = g;
  var G__7577 = h;
  var G__7578 = i;
  var G__7579 = j;
  var G__7580 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7570, G__7571, G__7572, G__7573, G__7574, G__7575, G__7576, G__7577, G__7578, G__7579, G__7580) : self__.afn.call(null, G__7570, G__7571, G__7572, G__7573, G__7574, G__7575, G__7576, G__7577, G__7578, G__7579, G__7580);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__7581 = a;
  var G__7582 = b;
  var G__7583 = c;
  var G__7584 = d;
  var G__7585 = e;
  var G__7586 = f;
  var G__7587 = g;
  var G__7588 = h;
  var G__7589 = i;
  var G__7590 = j;
  var G__7591 = k;
  var G__7592 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7581, G__7582, G__7583, G__7584, G__7585, G__7586, G__7587, G__7588, G__7589, G__7590, G__7591, G__7592) : self__.afn.call(null, G__7581, G__7582, G__7583, G__7584, G__7585, G__7586, G__7587, G__7588, G__7589, G__7590, G__7591, G__7592);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__7593 = a;
  var G__7594 = b;
  var G__7595 = c;
  var G__7596 = d;
  var G__7597 = e;
  var G__7598 = f;
  var G__7599 = g;
  var G__7600 = h;
  var G__7601 = i;
  var G__7602 = j;
  var G__7603 = k;
  var G__7604 = l;
  var G__7605 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7593, G__7594, G__7595, G__7596, G__7597, G__7598, G__7599, G__7600, G__7601, G__7602, G__7603, G__7604, G__7605) : self__.afn.call(null, G__7593, G__7594, G__7595, G__7596, G__7597, G__7598, G__7599, G__7600, G__7601, G__7602, G__7603, G__7604, G__7605);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__7606 = a;
  var G__7607 = b;
  var G__7608 = c;
  var G__7609 = d;
  var G__7610 = e;
  var G__7611 = f;
  var G__7612 = g;
  var G__7613 = h;
  var G__7614 = i;
  var G__7615 = j;
  var G__7616 = k;
  var G__7617 = l;
  var G__7618 = m;
  var G__7619 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7606, G__7607, G__7608, G__7609, G__7610, G__7611, G__7612, G__7613, G__7614, G__7615, G__7616, G__7617, G__7618, G__7619) : self__.afn.call(null, G__7606, G__7607, G__7608, G__7609, G__7610, G__7611, G__7612, G__7613, G__7614, G__7615, G__7616, G__7617, G__7618, G__7619);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__7620 = a;
  var G__7621 = b;
  var G__7622 = c;
  var G__7623 = d;
  var G__7624 = e;
  var G__7625 = f;
  var G__7626 = g;
  var G__7627 = h;
  var G__7628 = i;
  var G__7629 = j;
  var G__7630 = k;
  var G__7631 = l;
  var G__7632 = m;
  var G__7633 = n;
  var G__7634 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7620, G__7621, G__7622, G__7623, G__7624, G__7625, G__7626, G__7627, G__7628, G__7629, G__7630, G__7631, G__7632, G__7633, G__7634) : self__.afn.call(null, G__7620, G__7621, G__7622, G__7623, G__7624, G__7625, G__7626, G__7627, G__7628, G__7629, G__7630, G__7631, G__7632, G__7633, G__7634);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__7635 = a;
  var G__7636 = b;
  var G__7637 = c;
  var G__7638 = d;
  var G__7639 = e;
  var G__7640 = f;
  var G__7641 = g;
  var G__7642 = h;
  var G__7643 = i;
  var G__7644 = j;
  var G__7645 = k;
  var G__7646 = l;
  var G__7647 = m;
  var G__7648 = n;
  var G__7649 = o;
  var G__7650 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7635, G__7636, G__7637, G__7638, G__7639, G__7640, G__7641, G__7642, G__7643, G__7644, G__7645, G__7646, G__7647, G__7648, G__7649, G__7650) : self__.afn.call(null, G__7635, G__7636, G__7637, G__7638, G__7639, G__7640, G__7641, G__7642, G__7643, G__7644, G__7645, G__7646, G__7647, G__7648, G__7649, G__7650);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__7651 = a;
  var G__7652 = b;
  var G__7653 = c;
  var G__7654 = d;
  var G__7655 = e;
  var G__7656 = f;
  var G__7657 = g;
  var G__7658 = h;
  var G__7659 = i;
  var G__7660 = j;
  var G__7661 = k;
  var G__7662 = l;
  var G__7663 = m;
  var G__7664 = n;
  var G__7665 = o;
  var G__7666 = p;
  var G__7667 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7651, G__7652, G__7653, G__7654, G__7655, G__7656, G__7657, G__7658, G__7659, G__7660, G__7661, G__7662, G__7663, G__7664, G__7665, G__7666, G__7667) : self__.afn.call(null, G__7651, G__7652, G__7653, G__7654, G__7655, G__7656, G__7657, G__7658, G__7659, G__7660, G__7661, G__7662, G__7663, G__7664, G__7665, G__7666, G__7667);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__7668 = a;
  var G__7669 = b;
  var G__7670 = c;
  var G__7671 = d;
  var G__7672 = e;
  var G__7673 = f;
  var G__7674 = g;
  var G__7675 = h;
  var G__7676 = i;
  var G__7677 = j;
  var G__7678 = k;
  var G__7679 = l;
  var G__7680 = m;
  var G__7681 = n;
  var G__7682 = o;
  var G__7683 = p;
  var G__7684 = q;
  var G__7685 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7668, G__7669, G__7670, G__7671, G__7672, G__7673, G__7674, G__7675, G__7676, G__7677, G__7678, G__7679, G__7680, G__7681, G__7682, G__7683, G__7684, G__7685) : self__.afn.call(null, G__7668, G__7669, G__7670, G__7671, G__7672, G__7673, G__7674, G__7675, G__7676, G__7677, G__7678, G__7679, G__7680, G__7681, G__7682, G__7683, G__7684, G__7685);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__7686 = a;
  var G__7687 = b;
  var G__7688 = c;
  var G__7689 = d;
  var G__7690 = e;
  var G__7691 = f;
  var G__7692 = g;
  var G__7693 = h;
  var G__7694 = i;
  var G__7695 = j;
  var G__7696 = k;
  var G__7697 = l;
  var G__7698 = m;
  var G__7699 = n;
  var G__7700 = o;
  var G__7701 = p;
  var G__7702 = q;
  var G__7703 = r;
  var G__7704 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7686, G__7687, G__7688, G__7689, G__7690, G__7691, G__7692, G__7693, G__7694, G__7695, G__7696, G__7697, G__7698, G__7699, G__7700, G__7701, G__7702, G__7703, G__7704) : self__.afn.call(null, G__7686, G__7687, G__7688, G__7689, G__7690, G__7691, G__7692, G__7693, G__7694, G__7695, G__7696, G__7697, G__7698, G__7699, G__7700, G__7701, G__7702, G__7703, G__7704);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__7705 = a;
  var G__7706 = b;
  var G__7707 = c;
  var G__7708 = d;
  var G__7709 = e;
  var G__7710 = f;
  var G__7711 = g;
  var G__7712 = h;
  var G__7713 = i;
  var G__7714 = j;
  var G__7715 = k;
  var G__7716 = l;
  var G__7717 = m;
  var G__7718 = n;
  var G__7719 = o;
  var G__7720 = p;
  var G__7721 = q;
  var G__7722 = r;
  var G__7723 = s;
  var G__7724 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7705, G__7706, G__7707, G__7708, G__7709, G__7710, G__7711, G__7712, G__7713, G__7714, G__7715, G__7716, G__7717, G__7718, G__7719, G__7720, G__7721, G__7722, G__7723, G__7724) : self__.afn.call(null, G__7705, G__7706, G__7707, G__7708, G__7709, G__7710, G__7711, G__7712, G__7713, G__7714, G__7715, G__7716, G__7717, G__7718, G__7719, G__7720, G__7721, G__7722, G__7723, G__7724);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__7725 = self__.afn;
  var G__7726 = a;
  var G__7727 = b;
  var G__7728 = c;
  var G__7729 = d;
  var G__7730 = e;
  var G__7731 = f;
  var G__7732 = g;
  var G__7733 = h;
  var G__7734 = i;
  var G__7735 = j;
  var G__7736 = k;
  var G__7737 = l;
  var G__7738 = m;
  var G__7739 = n;
  var G__7740 = o;
  var G__7741 = p;
  var G__7742 = q;
  var G__7743 = r;
  var G__7744 = s;
  var G__7745 = t;
  var G__7746 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7725, G__7726, G__7727, G__7728, G__7729, G__7730, G__7731, G__7732, G__7733, G__7734, G__7735, G__7736, G__7737, G__7738, G__7739, G__7740, G__7741, G__7742, G__7743, G__7744, G__7745, G__7746) : cljs.core.apply.call(null, G__7725, G__7726, G__7727, G__7728, G__7729, G__7730, G__7731, G__7732, G__7733, G__7734, G__7735, G__7736, G__7737, G__7738, G__7739, G__7740, G__7741, G__7742, G__7743, 
  G__7744, G__7745, G__7746);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__7751 = o;
    if (G__7751) {
      var bit__4982__auto__ = G__7751.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4982__auto__ || G__7751.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__7751.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__7751);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__7751);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4296__auto__ = !(o == null);
    if (and__4296__auto__) {
      var G__7755 = o;
      if (G__7755) {
        var bit__4982__auto__ = G__7755.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4982__auto__ || G__7755.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__7755.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__7755);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__7755);
      }
    } else {
      return and__4296__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj() {
  var G__7760 = arguments.length;
  switch(G__7760) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__7762 = ret;
        var G__7763 = cljs.core.first(ks);
        var G__7764 = cljs.core.next(ks);
        coll = G__7762;
        k = G__7763;
        ks = G__7764;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq7756) {
  var G__7757 = cljs.core.first(seq7756);
  var seq7756__$1 = cljs.core.next(seq7756);
  var G__7758 = cljs.core.first(seq7756__$1);
  var seq7756__$2 = cljs.core.next(seq7756__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__7757, G__7758, seq7756__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__7766 = x;
    if (G__7766) {
      var bit__4982__auto__ = G__7766.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4982__auto__ || G__7766.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__7766.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__7766);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__7766);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__7768 = x;
    if (G__7768) {
      var bit__4982__auto__ = G__7768.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4982__auto__ || G__7768.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__7768.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__7768);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__7768);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  var G__7770 = x;
  if (G__7770) {
    var bit__4982__auto__ = G__7770.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4982__auto__ || G__7770.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__7770.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__7770);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__7770);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  var G__7772 = x;
  if (G__7772) {
    var bit__4982__auto__ = G__7772.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4982__auto__ || G__7772.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__7772.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__7772);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__7772);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  var G__7774 = x;
  if (G__7774) {
    var bit__4982__auto__ = G__7774.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4982__auto__ || G__7774.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__7774.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__7774);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__7774);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  var G__7776 = x;
  if (G__7776) {
    var bit__4982__auto__ = G__7776.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4982__auto__ || G__7776.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__7776.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__7776);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__7776);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__7778 = x;
    if (G__7778) {
      var bit__4982__auto__ = G__7778.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4982__auto__ || G__7778.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__7778.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__7778);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__7778);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  var G__7780 = x;
  if (G__7780) {
    var bit__4982__auto__ = G__7780.cljs$lang$protocol_mask$partition0$ & 67108864;
    if (bit__4982__auto__ || G__7780.cljs$core$IRecord$) {
      return true;
    } else {
      if (!G__7780.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, G__7780);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, G__7780);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  var G__7782 = x;
  if (G__7782) {
    var bit__4982__auto__ = G__7782.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4982__auto__ || G__7782.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__7782.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__7782);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__7782);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  var G__7784 = x;
  if (G__7784) {
    var bit__4975__auto__ = G__7784.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4975__auto__ || G__7784.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj() {
  var G__7787 = arguments.length;
  switch(G__7787) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5359__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  var obj7789 = {};
  return obj7789;
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var G__7790 = goog.object.create;
  var G__7791 = keyvals;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__7790, G__7791) : cljs.core.apply.call(null, G__7790, G__7791);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq7785) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq7785));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__7795_7797 = obj;
  var G__7796_7798 = function(G__7795_7797, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__7795_7797, keys);
  goog.object.forEach(G__7795_7797, G__7796_7798);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__7799 = i__$1 + 1;
      var G__7800 = j__$1 + 1;
      var G__7801 = len__$1 - 1;
      i__$1 = G__7799;
      j__$1 = G__7800;
      len__$1 = G__7801;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__7802 = i__$1 - 1;
      var G__7803 = j__$1 - 1;
      var G__7804 = len__$1 - 1;
      i__$1 = G__7802;
      j__$1 = G__7803;
      len__$1 = G__7804;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj7806 = {};
  return obj7806;
}();
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__7808 = s;
    if (G__7808) {
      var bit__4982__auto__ = G__7808.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4982__auto__ || G__7808.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__7808.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__7808);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__7808);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var G__7810 = s;
  if (G__7810) {
    var bit__4982__auto__ = G__7810.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4982__auto__ || G__7810.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__7810.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__7810);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__7810);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4308__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4308__auto__) {
    return or__4308__auto__;
  } else {
    var G__7814 = f;
    if (G__7814) {
      var bit__4982__auto__ = G__7814.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4982__auto__ || G__7814.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__7814.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__7814);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__7814);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__7827 = n;
    return isNaN(G__7827);
  }()) && !(n === Infinity) && function() {
    var G__7828 = n;
    return parseFloat(G__7828);
  }() === function() {
    var G__7829 = n;
    var G__7830 = 10;
    return parseInt(G__7829, G__7830);
  }();
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_() {
  var G__7835 = arguments.length;
  switch(G__7835) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__7837 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__7838 = etc;
          s = G__7837;
          xs = G__7838;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq7831) {
  var G__7832 = cljs.core.first(seq7831);
  var seq7831__$1 = cljs.core.next(seq7831);
  var G__7833 = cljs.core.first(seq7831__$1);
  var seq7831__$2 = cljs.core.next(seq7831__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__7832, G__7833, seq7831__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__7842 = x;
            if (G__7842) {
              var bit__4975__auto__ = G__7842.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4975__auto__ || G__7842.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__7843 = x;
            var G__7844 = y;
            return goog.array.defaultCompare(G__7843, G__7844);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed() {
  var G__7846 = arguments.length;
  switch(G__7846) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__7848 = xs;
      var G__7849 = ys;
      var G__7850 = len;
      var G__7851 = n + 1;
      xs = G__7848;
      ys = G__7849;
      len = G__7850;
      n = G__7851;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__7856 = x;
        var G__7857 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7856, G__7857) : f.call(null, G__7856, G__7857);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(function() {
            var G__7858 = y;
            var G__7859 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7858, G__7859) : f.call(null, G__7858, G__7859);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort() {
  var G__7861 = arguments.length;
  switch(G__7861) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = function() {
      var G__7862 = coll;
      return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7862) : cljs.core.to_array.call(null, G__7862);
    }();
    var G__7863_7866 = a;
    var G__7864_7867 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__7863_7866, G__7864_7867);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by() {
  var G__7869 = arguments.length;
  switch(G__7869) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, function() {
      var G__7870 = x;
      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7870) : keyfn.call(null, G__7870);
    }(), function() {
      var G__7871 = y;
      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7871) : keyfn.call(null, G__7871);
    }());
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce() {
  var G__7874 = arguments.length;
  switch(G__7874) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4420__auto__ = cljs.core.seq(coll);
  if (temp__4420__auto__) {
    var s = temp__4420__auto__;
    var G__7875 = f;
    var G__7876 = cljs.core.first(s);
    var G__7877 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7875, G__7876, G__7877) : cljs.core.reduce.call(null, G__7875, G__7876, G__7877);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__7878 = val__$1;
        var G__7879 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7878, G__7879) : f.call(null, G__7878, G__7879);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__7881 = nval;
        var G__7882 = cljs.core.next(coll__$1);
        val__$1 = G__7881;
        coll__$1 = G__7882;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = function() {
    var G__7886 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7886) : cljs.core.to_array.call(null, G__7886);
  }();
  var G__7887_7889 = a;
  goog.array.shuffle(G__7887_7889);
  var G__7888 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__7888) : cljs.core.vec.call(null, G__7888);
};
cljs.core.reduce = function cljs$core$reduce() {
  var G__7891 = arguments.length;
  switch(G__7891) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (function() {
    var G__7892 = coll;
    if (G__7892) {
      var bit__4975__auto__ = G__7892.cljs$lang$protocol_mask$partition0$ & 524288;
      if (bit__4975__auto__ || G__7892.cljs$core$IReduce$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (function() {
    var G__7893 = coll;
    if (G__7893) {
      var bit__4975__auto__ = G__7893.cljs$lang$protocol_mask$partition0$ & 524288;
      if (bit__4975__auto__ || G__7893.cljs$core$IReduce$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing() {
  var G__7896 = arguments.length;
  switch(G__7896) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__7901 = null;
    var G__7901__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__7901__1 = function(x) {
      var G__7897 = x;
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__7897) : cf.call(null, G__7897);
    };
    var G__7901__2 = function(x, y) {
      var G__7898 = x;
      var G__7899 = y;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7898, G__7899) : f.call(null, G__7898, G__7899);
    };
    G__7901 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__7901__0.call(this);
        case 1:
          return G__7901__1.call(this, x);
        case 2:
          return G__7901__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7901.cljs$core$IFn$_invoke$arity$0 = G__7901__0;
    G__7901.cljs$core$IFn$_invoke$arity$1 = G__7901__1;
    G__7901.cljs$core$IFn$_invoke$arity$2 = G__7901__2;
    return G__7901;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce() {
  var G__7903 = arguments.length;
  switch(G__7903) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }(), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = function() {
    var G__7904 = f;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7904) : xform.call(null, G__7904);
  }();
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  var G__7905 = ret;
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__7905) : f__$1.call(null, G__7905);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_() {
  var G__7911 = arguments.length;
  switch(G__7911) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq7907) {
  var G__7908 = cljs.core.first(seq7907);
  var seq7907__$1 = cljs.core.next(seq7907);
  var G__7909 = cljs.core.first(seq7907__$1);
  var seq7907__$2 = cljs.core.next(seq7907__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__7908, G__7909, seq7907__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_() {
  var G__7917 = arguments.length;
  switch(G__7917) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq7913) {
  var G__7914 = cljs.core.first(seq7913);
  var seq7913__$1 = cljs.core.next(seq7913);
  var G__7915 = cljs.core.first(seq7913__$1);
  var seq7913__$2 = cljs.core.next(seq7913__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__7914, G__7915, seq7913__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_() {
  var G__7923 = arguments.length;
  switch(G__7923) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq7919) {
  var G__7920 = cljs.core.first(seq7919);
  var seq7919__$1 = cljs.core.next(seq7919);
  var G__7921 = cljs.core.first(seq7919__$1);
  var seq7919__$2 = cljs.core.next(seq7919__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__7920, G__7921, seq7919__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_() {
  var G__7929 = arguments.length;
  switch(G__7929) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq7925) {
  var G__7926 = cljs.core.first(seq7925);
  var seq7925__$1 = cljs.core.next(seq7925);
  var G__7927 = cljs.core.first(seq7925__$1);
  var seq7925__$2 = cljs.core.next(seq7925__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__7926, G__7927, seq7925__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_() {
  var G__7935 = arguments.length;
  switch(G__7935) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__7937 = y;
        var G__7938 = cljs.core.first(more);
        var G__7939 = cljs.core.next(more);
        x = G__7937;
        y = G__7938;
        more = G__7939;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq7931) {
  var G__7932 = cljs.core.first(seq7931);
  var seq7931__$1 = cljs.core.next(seq7931);
  var G__7933 = cljs.core.first(seq7931__$1);
  var seq7931__$2 = cljs.core.next(seq7931__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__7932, G__7933, seq7931__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_() {
  var G__7944 = arguments.length;
  switch(G__7944) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__7946 = y;
        var G__7947 = cljs.core.first(more);
        var G__7948 = cljs.core.next(more);
        x = G__7946;
        y = G__7947;
        more = G__7948;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq7940) {
  var G__7941 = cljs.core.first(seq7940);
  var seq7940__$1 = cljs.core.next(seq7940);
  var G__7942 = cljs.core.first(seq7940__$1);
  var seq7940__$2 = cljs.core.next(seq7940__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__7941, G__7942, seq7940__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_() {
  var G__7953 = arguments.length;
  switch(G__7953) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__7955 = y;
        var G__7956 = cljs.core.first(more);
        var G__7957 = cljs.core.next(more);
        x = G__7955;
        y = G__7956;
        more = G__7957;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq7949) {
  var G__7950 = cljs.core.first(seq7949);
  var seq7949__$1 = cljs.core.next(seq7949);
  var G__7951 = cljs.core.first(seq7949__$1);
  var seq7949__$2 = cljs.core.next(seq7949__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__7950, G__7951, seq7949__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_() {
  var G__7962 = arguments.length;
  switch(G__7962) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__7964 = y;
        var G__7965 = cljs.core.first(more);
        var G__7966 = cljs.core.next(more);
        x = G__7964;
        y = G__7965;
        more = G__7966;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq7958) {
  var G__7959 = cljs.core.first(seq7958);
  var seq7958__$1 = cljs.core.next(seq7958);
  var G__7960 = cljs.core.first(seq7958__$1);
  var seq7958__$2 = cljs.core.next(seq7958__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__7959, G__7960, seq7958__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max() {
  var G__7971 = arguments.length;
  switch(G__7971) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4620__auto__ = x;
  var y__4621__auto__ = y;
  return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4620__auto__ = x;
    var y__4621__auto__ = y;
    return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq7967) {
  var G__7968 = cljs.core.first(seq7967);
  var seq7967__$1 = cljs.core.next(seq7967);
  var G__7969 = cljs.core.first(seq7967__$1);
  var seq7967__$2 = cljs.core.next(seq7967__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__7968, G__7969, seq7967__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min() {
  var G__7977 = arguments.length;
  switch(G__7977) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4627__auto__ = x;
  var y__4628__auto__ = y;
  return x__4627__auto__ < y__4628__auto__ ? x__4627__auto__ : y__4628__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4627__auto__ = x;
    var y__4628__auto__ = y;
    return x__4627__auto__ < y__4628__auto__ ? x__4627__auto__ : y__4628__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq7973) {
  var G__7974 = cljs.core.first(seq7973);
  var seq7973__$1 = cljs.core.next(seq7973);
  var G__7975 = cljs.core.first(seq7973__$1);
  var seq7973__$2 = cljs.core.next(seq7973__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__7974, G__7975, seq7973__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add() {
  var G__7983 = arguments.length;
  switch(G__7983) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq7979) {
  var G__7980 = cljs.core.first(seq7979);
  var seq7979__$1 = cljs.core.next(seq7979);
  var G__7981 = cljs.core.first(seq7979__$1);
  var seq7979__$2 = cljs.core.next(seq7979__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__7980, G__7981, seq7979__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int() {
  var G__7989 = arguments.length;
  switch(G__7989) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq7985) {
  var G__7986 = cljs.core.first(seq7985);
  var seq7985__$1 = cljs.core.next(seq7985);
  var G__7987 = cljs.core.first(seq7985__$1);
  var seq7985__$2 = cljs.core.next(seq7985__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__7986, G__7987, seq7985__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int() {
  var G__7995 = arguments.length;
  switch(G__7995) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq7991) {
  var G__7992 = cljs.core.first(seq7991);
  var seq7991__$1 = cljs.core.next(seq7991);
  var G__7993 = cljs.core.first(seq7991__$1);
  var seq7991__$2 = cljs.core.next(seq7991__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__7992, G__7993, seq7991__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply() {
  var G__8001 = arguments.length;
  switch(G__8001) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq7997) {
  var G__7998 = cljs.core.first(seq7997);
  var seq7997__$1 = cljs.core.next(seq7997);
  var G__7999 = cljs.core.first(seq7997__$1);
  var seq7997__$2 = cljs.core.next(seq7997__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__7998, G__7999, seq7997__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int() {
  var G__8007 = arguments.length;
  switch(G__8007) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq8003) {
  var G__8004 = cljs.core.first(seq8003);
  var seq8003__$1 = cljs.core.next(seq8003);
  var G__8005 = cljs.core.first(seq8003__$1);
  var seq8003__$2 = cljs.core.next(seq8003__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__8004, G__8005, seq8003__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  var G__8011 = x;
  var G__8012 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__8011, G__8012) : cljs.core.mod.call(null, G__8011, G__8012);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract() {
  var G__8017 = arguments.length;
  switch(G__8017) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq8013) {
  var G__8014 = cljs.core.first(seq8013);
  var seq8013__$1 = cljs.core.next(seq8013);
  var G__8015 = cljs.core.first(seq8013__$1);
  var seq8013__$2 = cljs.core.next(seq8013__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__8014, G__8015, seq8013__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int() {
  var G__8023 = arguments.length;
  switch(G__8023) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq8019) {
  var G__8020 = cljs.core.first(seq8019);
  var seq8019__$1 = cljs.core.next(seq8019);
  var G__8021 = cljs.core.first(seq8019__$1);
  var seq8019__$2 = cljs.core.next(seq8019__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__8020, G__8021, seq8019__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    var G__8027 = q;
    return Math.floor(G__8027);
  } else {
    var G__8028 = q;
    return Math.ceil(G__8028);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor() {
  var G__8033 = arguments.length;
  switch(G__8033) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq8029) {
  var G__8030 = cljs.core.first(seq8029);
  var seq8029__$1 = cljs.core.next(seq8029);
  var G__8031 = cljs.core.first(seq8029__$1);
  var seq8029__$2 = cljs.core.next(seq8029__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__8030, G__8031, seq8029__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and() {
  var G__8039 = arguments.length;
  switch(G__8039) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq8035) {
  var G__8036 = cljs.core.first(seq8035);
  var seq8035__$1 = cljs.core.next(seq8035);
  var G__8037 = cljs.core.first(seq8035__$1);
  var seq8035__$2 = cljs.core.next(seq8035__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__8036, G__8037, seq8035__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or() {
  var G__8045 = arguments.length;
  switch(G__8045) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq8041) {
  var G__8042 = cljs.core.first(seq8041);
  var seq8041__$1 = cljs.core.next(seq8041);
  var G__8043 = cljs.core.first(seq8041__$1);
  var seq8041__$2 = cljs.core.next(seq8041__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__8042, G__8043, seq8041__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not() {
  var G__8051 = arguments.length;
  switch(G__8051) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq8047) {
  var G__8048 = cljs.core.first(seq8047);
  var seq8047__$1 = cljs.core.next(seq8047);
  var G__8049 = cljs.core.first(seq8047__$1);
  var seq8047__$2 = cljs.core.next(seq8047__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__8048, G__8049, seq8047__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_() {
  var G__8057 = arguments.length;
  switch(G__8057) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__8059 = y;
        var G__8060 = cljs.core.first(more);
        var G__8061 = cljs.core.next(more);
        x = G__8059;
        y = G__8060;
        more = G__8061;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq8053) {
  var G__8054 = cljs.core.first(seq8053);
  var seq8053__$1 = cljs.core.next(seq8053);
  var G__8055 = cljs.core.first(seq8053__$1);
  var seq8053__$2 = cljs.core.next(seq8053__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__8054, G__8055, seq8053__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__8062 = n__$1 - 1;
      var G__8063 = cljs.core.next(xs);
      n__$1 = G__8062;
      xs = G__8063;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str() {
  var G__8067 = arguments.length;
  switch(G__8067) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    var G__8068 = x;
    return goog.string.buildString(G__8068);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__8070 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__8071 = cljs.core.next(more);
      sb = G__8070;
      more = G__8071;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq8064) {
  var G__8065 = cljs.core.first(seq8064);
  var seq8064__$1 = cljs.core.next(seq8064);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__8065, seq8064__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs() {
  var G__8073 = arguments.length;
  switch(G__8073) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__8075 = cljs.core.next(xs);
            var G__8076 = cljs.core.next(ys);
            xs = G__8075;
            ys = G__8076;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__8077 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__8078 = cljs.core.next(s);
        res = G__8077;
        s = G__8078;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__8083 = (h + (cljs.core.hash(function() {
        var G__8081 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8081) : cljs.core.key.call(null, G__8081);
      }()) ^ cljs.core.hash(function() {
        var G__8082 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__8082) : cljs.core.val.call(null, G__8082);
      }()))) % 4503599627370496;
      var G__8084 = cljs.core.next(s);
      h = G__8083;
      s = G__8084;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__8085 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__8086 = cljs.core.next(s__$1);
      h = G__8085;
      s__$1 = G__8086;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__8097_8107 = cljs.core.seq(fn_map);
  var chunk__8098_8108 = null;
  var count__8099_8109 = 0;
  var i__8100_8110 = 0;
  while (true) {
    if (i__8100_8110 < count__8099_8109) {
      var vec__8101_8111 = chunk__8098_8108.cljs$core$IIndexed$_nth$arity$2(null, i__8100_8110);
      var key_name_8112 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8101_8111, 0, null);
      var f_8113 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8101_8111, 1, null);
      var str_name_8114 = function() {
        var G__8102 = key_name_8112;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8102) : cljs.core.name.call(null, G__8102);
      }();
      obj[str_name_8114] = f_8113;
      var G__8115 = seq__8097_8107;
      var G__8116 = chunk__8098_8108;
      var G__8117 = count__8099_8109;
      var G__8118 = i__8100_8110 + 1;
      seq__8097_8107 = G__8115;
      chunk__8098_8108 = G__8116;
      count__8099_8109 = G__8117;
      i__8100_8110 = G__8118;
      continue;
    } else {
      var temp__4422__auto___8119 = cljs.core.seq(seq__8097_8107);
      if (temp__4422__auto___8119) {
        var seq__8097_8120__$1 = temp__4422__auto___8119;
        if (cljs.core.chunked_seq_QMARK_(seq__8097_8120__$1)) {
          var c__5093__auto___8121 = function() {
            var G__8103 = seq__8097_8120__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__8103) : cljs.core.chunk_first.call(null, G__8103);
          }();
          var G__8122 = function() {
            var G__8104 = seq__8097_8120__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__8104) : cljs.core.chunk_rest.call(null, G__8104);
          }();
          var G__8123 = c__5093__auto___8121;
          var G__8124 = cljs.core.count(c__5093__auto___8121);
          var G__8125 = 0;
          seq__8097_8107 = G__8122;
          chunk__8098_8108 = G__8123;
          count__8099_8109 = G__8124;
          i__8100_8110 = G__8125;
          continue;
        } else {
          var vec__8105_8126 = cljs.core.first(seq__8097_8120__$1);
          var key_name_8127 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8105_8126, 0, null);
          var f_8128 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8105_8126, 1, null);
          var str_name_8129 = function() {
            var G__8106 = key_name_8127;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8106) : cljs.core.name.call(null, G__8106);
          }();
          obj[str_name_8129] = f_8128;
          var G__8130 = cljs.core.next(seq__8097_8120__$1);
          var G__8131 = null;
          var G__8132 = 0;
          var G__8133 = 0;
          seq__8097_8107 = G__8130;
          chunk__8098_8108 = G__8131;
          count__8099_8109 = G__8132;
          i__8100_8110 = G__8133;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  var G__8135 = coll;
  if (G__8135) {
    var bit__4982__auto__ = G__8135.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4982__auto__ || G__8135.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__8135.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__8135);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__8135);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__8137 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__8137;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__8138 = i - 1;
      var G__8139 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__8138;
      r = G__8139;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq8136) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8136));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4308__auto__ = coll == null;
    if (or__4308__auto__) {
      return or__4308__auto__;
    } else {
      var G__8143 = coll;
      if (G__8143) {
        var bit__4975__auto__ = G__8143.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4975__auto__ || G__8143.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  var G__8145 = x;
  if (G__8145) {
    var bit__4982__auto__ = G__8145.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4982__auto__ || G__8145.cljs$core$IList$) {
      return true;
    } else {
      if (!G__8145.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__8145);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__8145);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4296__auto__ = cljs.core.not(a.ns);
      if (and__4296__auto__) {
        return b.ns;
      } else {
        return and__4296__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__8152 = a.ns;
            var G__8153 = b.ns;
            return goog.array.defaultCompare(G__8152, G__8153);
          }();
          if (0 === nsc) {
            var G__8154 = a.name;
            var G__8155 = b.name;
            return goog.array.defaultCompare(G__8154, G__8155);
          } else {
            return nsc;
          }
        }
      } else {
        var G__8156 = a.name;
        var G__8157 = b.name;
        return goog.array.defaultCompare(G__8156, G__8157);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__8159 = null;
  var G__8159__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__8159__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__8159 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8159__2.call(this, self__, coll);
      case 3:
        return G__8159__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8159.cljs$core$IFn$_invoke$arity$2 = G__8159__2;
  G__8159.cljs$core$IFn$_invoke$arity$3 = G__8159__3;
  return G__8159;
}();
cljs.core.Keyword.prototype.apply = function(self__, args8158) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8158)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4724__auto__ = self__._hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null)], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (function() {
    var G__8161 = x;
    if (G__8161) {
      var bit__4975__auto__ = G__8161.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4975__auto__ || G__8161.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword() {
  var G__8163 = arguments.length;
  switch(G__8163) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), function() {
        var G__8164 = name;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8164) : cljs.core.name.call(null, G__8164);
      }(), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__8166 = ls.sval();
        ls = G__8166;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk() {
  var G__8168 = arguments.length;
  switch(G__8168) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (function() {
    var G__8171 = s;
    if (G__8171) {
      var bit__4975__auto__ = G__8171.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4975__auto__ || G__8171.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__8172 = cljs.core.next(s__$1);
      s__$1 = G__8172;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_8173 = 0;
  var xs_8174 = cljs.core.seq(coll);
  while (true) {
    if (xs_8174) {
      ret[i_8173] = cljs.core.to_array(cljs.core.first(xs_8174));
      var G__8175 = i_8173 + 1;
      var G__8176 = cljs.core.next(xs_8174);
      i_8173 = G__8175;
      xs_8174 = G__8176;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array() {
  var G__8178 = arguments.length;
  switch(G__8178) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__8180 = i + 1;
        var G__8181 = cljs.core.next(s__$1);
        i = G__8180;
        s__$1 = G__8181;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5193__auto___8182 = size;
    var i_8183 = 0;
    while (true) {
      if (i_8183 < n__5193__auto___8182) {
        a[i_8183] = init_val_or_seq;
        var G__8184 = i_8183 + 1;
        i_8183 = G__8184;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array() {
  var G__8186 = arguments.length;
  switch(G__8186) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__8188 = i + 1;
        var G__8189 = cljs.core.next(s__$1);
        i = G__8188;
        s__$1 = G__8189;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5193__auto___8190 = size;
    var i_8191 = 0;
    while (true) {
      if (i_8191 < n__5193__auto___8190) {
        a[i_8191] = init_val_or_seq;
        var G__8192 = i_8191 + 1;
        i_8191 = G__8192;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array() {
  var G__8194 = arguments.length;
  switch(G__8194) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__8196 = i + 1;
        var G__8197 = cljs.core.next(s__$1);
        i = G__8196;
        s__$1 = G__8197;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5193__auto___8198 = size;
    var i_8199 = 0;
    while (true) {
      if (i_8199 < n__5193__auto___8198) {
        a[i_8199] = init_val_or_seq;
        var G__8200 = i_8199 + 1;
        i_8199 = G__8200;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array() {
  var G__8202 = arguments.length;
  switch(G__8202) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__8204 = i + 1;
        var G__8205 = cljs.core.next(s__$1);
        i = G__8204;
        s__$1 = G__8205;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5193__auto___8206 = size;
    var i_8207 = 0;
    while (true) {
      if (i_8207 < n__5193__auto___8206) {
        a[i_8207] = init_val_or_seq;
        var G__8208 = i_8207 + 1;
        i_8207 = G__8208;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__8209 = cljs.core.next(s__$1);
        var G__8210 = i - 1;
        var G__8211 = sum + 1;
        s__$1 = G__8209;
        i = G__8210;
        sum = G__8211;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat() {
  var G__8217 = arguments.length;
  switch(G__8217) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq8213) {
  var G__8214 = cljs.core.first(seq8213);
  var seq8213__$1 = cljs.core.next(seq8213);
  var G__8215 = cljs.core.first(seq8213__$1);
  var seq8213__$2 = cljs.core.next(seq8213__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__8214, G__8215, seq8213__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_() {
  var G__8231 = arguments.length;
  switch(G__8231) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5359__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq8225) {
  var G__8226 = cljs.core.first(seq8225);
  var seq8225__$1 = cljs.core.next(seq8225);
  var G__8227 = cljs.core.first(seq8225__$1);
  var seq8225__$2 = cljs.core.next(seq8225__$1);
  var G__8228 = cljs.core.first(seq8225__$2);
  var seq8225__$3 = cljs.core.next(seq8225__$2);
  var G__8229 = cljs.core.first(seq8225__$3);
  var seq8225__$4 = cljs.core.next(seq8225__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__8226, G__8227, G__8228, G__8229, seq8225__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_() {
  var G__8237 = arguments.length;
  switch(G__8237) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__8239 = ntcoll;
      var G__8240 = cljs.core.first(vals);
      var G__8241 = cljs.core.next(vals);
      tcoll = G__8239;
      val = G__8240;
      vals = G__8241;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq8233) {
  var G__8234 = cljs.core.first(seq8233);
  var seq8233__$1 = cljs.core.next(seq8233);
  var G__8235 = cljs.core.first(seq8233__$1);
  var seq8233__$2 = cljs.core.next(seq8233__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__8234, G__8235, seq8233__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_() {
  var G__8247 = arguments.length;
  switch(G__8247) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__8249 = ntcoll;
      var G__8250 = cljs.core.first(kvs);
      var G__8251 = cljs.core.second(kvs);
      var G__8252 = cljs.core.nnext(kvs);
      tcoll = G__8249;
      key = G__8250;
      val = G__8251;
      kvs = G__8252;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq8242) {
  var G__8243 = cljs.core.first(seq8242);
  var seq8242__$1 = cljs.core.next(seq8242);
  var G__8244 = cljs.core.first(seq8242__$1);
  var seq8242__$2 = cljs.core.next(seq8242__$1);
  var G__8245 = cljs.core.first(seq8242__$2);
  var seq8242__$3 = cljs.core.next(seq8242__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__8243, G__8244, G__8245, seq8242__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_() {
  var G__8257 = arguments.length;
  switch(G__8257) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__8259 = ntcoll;
      var G__8260 = cljs.core.first(ks);
      var G__8261 = cljs.core.next(ks);
      tcoll = G__8259;
      key = G__8260;
      ks = G__8261;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq8253) {
  var G__8254 = cljs.core.first(seq8253);
  var seq8253__$1 = cljs.core.next(seq8253);
  var G__8255 = cljs.core.first(seq8253__$1);
  var seq8253__$2 = cljs.core.next(seq8253__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__8254, G__8255, seq8253__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_() {
  var G__8266 = arguments.length;
  switch(G__8266) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__8268 = ntcoll;
      var G__8269 = cljs.core.first(vals);
      var G__8270 = cljs.core.next(vals);
      tcoll = G__8268;
      val = G__8269;
      vals = G__8270;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq8262) {
  var G__8263 = cljs.core.first(seq8262);
  var seq8262__$1 = cljs.core.next(seq8262);
  var G__8264 = cljs.core.first(seq8262__$1);
  var seq8262__$2 = cljs.core.next(seq8262__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__8263, G__8264, seq8262__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5237 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5237);
      } else {
        var G__8481 = a5237;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8481) : f.call(null, G__8481);
      }
    } else {
      var b5238 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5237, b5238);
        } else {
          var G__8482 = a5237;
          var G__8483 = b5238;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8482, G__8483) : f.call(null, G__8482, G__8483);
        }
      } else {
        var c5239 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5237, b5238, c5239);
          } else {
            var G__8484 = a5237;
            var G__8485 = b5238;
            var G__8486 = c5239;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8484, G__8485, G__8486) : f.call(null, G__8484, G__8485, G__8486);
          }
        } else {
          var d5240 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5237, b5238, c5239, d5240);
            } else {
              var G__8487 = a5237;
              var G__8488 = b5238;
              var G__8489 = c5239;
              var G__8490 = d5240;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8487, G__8488, G__8489, G__8490) : f.call(null, G__8487, G__8488, G__8489, G__8490);
            }
          } else {
            var e5241 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5237, b5238, c5239, d5240, e5241);
              } else {
                var G__8491 = a5237;
                var G__8492 = b5238;
                var G__8493 = c5239;
                var G__8494 = d5240;
                var G__8495 = e5241;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8491, G__8492, G__8493, G__8494, G__8495) : f.call(null, G__8491, G__8492, G__8493, G__8494, G__8495);
              }
            } else {
              var f5242 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5237, b5238, c5239, d5240, e5241, f5242);
                } else {
                  var G__8496 = a5237;
                  var G__8497 = b5238;
                  var G__8498 = c5239;
                  var G__8499 = d5240;
                  var G__8500 = e5241;
                  var G__8501 = f5242;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8496, G__8497, G__8498, G__8499, G__8500, G__8501) : f.call(null, G__8496, G__8497, G__8498, G__8499, G__8500, G__8501);
                }
              } else {
                var g5243 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5237, b5238, c5239, d5240, e5241, f5242, g5243);
                  } else {
                    var G__8502 = a5237;
                    var G__8503 = b5238;
                    var G__8504 = c5239;
                    var G__8505 = d5240;
                    var G__8506 = e5241;
                    var G__8507 = f5242;
                    var G__8508 = g5243;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__8502, G__8503, G__8504, G__8505, G__8506, G__8507, G__8508) : f.call(null, G__8502, G__8503, G__8504, G__8505, G__8506, G__8507, G__8508);
                  }
                } else {
                  var h5244 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244);
                    } else {
                      var G__8509 = a5237;
                      var G__8510 = b5238;
                      var G__8511 = c5239;
                      var G__8512 = d5240;
                      var G__8513 = e5241;
                      var G__8514 = f5242;
                      var G__8515 = g5243;
                      var G__8516 = h5244;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__8509, G__8510, G__8511, G__8512, G__8513, G__8514, G__8515, G__8516) : f.call(null, G__8509, G__8510, G__8511, G__8512, G__8513, G__8514, G__8515, G__8516);
                    }
                  } else {
                    var i5245 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245);
                      } else {
                        var G__8517 = a5237;
                        var G__8518 = b5238;
                        var G__8519 = c5239;
                        var G__8520 = d5240;
                        var G__8521 = e5241;
                        var G__8522 = f5242;
                        var G__8523 = g5243;
                        var G__8524 = h5244;
                        var G__8525 = i5245;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__8517, G__8518, G__8519, G__8520, G__8521, G__8522, G__8523, G__8524, G__8525) : f.call(null, G__8517, G__8518, G__8519, G__8520, G__8521, G__8522, G__8523, G__8524, G__8525);
                      }
                    } else {
                      var j5246 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246);
                        } else {
                          var G__8526 = a5237;
                          var G__8527 = b5238;
                          var G__8528 = c5239;
                          var G__8529 = d5240;
                          var G__8530 = e5241;
                          var G__8531 = f5242;
                          var G__8532 = g5243;
                          var G__8533 = h5244;
                          var G__8534 = i5245;
                          var G__8535 = j5246;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__8526, G__8527, G__8528, G__8529, G__8530, G__8531, G__8532, G__8533, G__8534, G__8535) : f.call(null, G__8526, G__8527, G__8528, G__8529, G__8530, G__8531, G__8532, G__8533, G__8534, G__8535);
                        }
                      } else {
                        var k5247 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247);
                          } else {
                            var G__8536 = a5237;
                            var G__8537 = b5238;
                            var G__8538 = c5239;
                            var G__8539 = d5240;
                            var G__8540 = e5241;
                            var G__8541 = f5242;
                            var G__8542 = g5243;
                            var G__8543 = h5244;
                            var G__8544 = i5245;
                            var G__8545 = j5246;
                            var G__8546 = k5247;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__8536, G__8537, G__8538, G__8539, G__8540, G__8541, G__8542, G__8543, G__8544, G__8545, G__8546) : f.call(null, G__8536, G__8537, G__8538, G__8539, G__8540, G__8541, G__8542, G__8543, G__8544, G__8545, G__8546);
                          }
                        } else {
                          var l5248 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248);
                            } else {
                              var G__8547 = a5237;
                              var G__8548 = b5238;
                              var G__8549 = c5239;
                              var G__8550 = d5240;
                              var G__8551 = e5241;
                              var G__8552 = f5242;
                              var G__8553 = g5243;
                              var G__8554 = h5244;
                              var G__8555 = i5245;
                              var G__8556 = j5246;
                              var G__8557 = k5247;
                              var G__8558 = l5248;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__8547, G__8548, G__8549, G__8550, G__8551, G__8552, G__8553, G__8554, G__8555, G__8556, G__8557, G__8558) : f.call(null, G__8547, G__8548, G__8549, G__8550, G__8551, G__8552, G__8553, G__8554, G__8555, G__8556, G__8557, G__8558);
                            }
                          } else {
                            var m5249 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249);
                              } else {
                                var G__8559 = a5237;
                                var G__8560 = b5238;
                                var G__8561 = c5239;
                                var G__8562 = d5240;
                                var G__8563 = e5241;
                                var G__8564 = f5242;
                                var G__8565 = g5243;
                                var G__8566 = h5244;
                                var G__8567 = i5245;
                                var G__8568 = j5246;
                                var G__8569 = k5247;
                                var G__8570 = l5248;
                                var G__8571 = m5249;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__8559, G__8560, G__8561, G__8562, G__8563, G__8564, G__8565, G__8566, G__8567, G__8568, G__8569, G__8570, G__8571) : f.call(null, G__8559, G__8560, G__8561, G__8562, G__8563, G__8564, G__8565, G__8566, G__8567, G__8568, G__8569, G__8570, G__8571);
                              }
                            } else {
                              var n5250 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250);
                                } else {
                                  var G__8572 = a5237;
                                  var G__8573 = b5238;
                                  var G__8574 = c5239;
                                  var G__8575 = d5240;
                                  var G__8576 = e5241;
                                  var G__8577 = f5242;
                                  var G__8578 = g5243;
                                  var G__8579 = h5244;
                                  var G__8580 = i5245;
                                  var G__8581 = j5246;
                                  var G__8582 = k5247;
                                  var G__8583 = l5248;
                                  var G__8584 = m5249;
                                  var G__8585 = n5250;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__8572, G__8573, G__8574, G__8575, G__8576, G__8577, G__8578, G__8579, G__8580, G__8581, G__8582, G__8583, G__8584, G__8585) : f.call(null, G__8572, G__8573, G__8574, G__8575, G__8576, G__8577, G__8578, G__8579, G__8580, G__8581, G__8582, G__8583, G__8584, G__8585);
                                }
                              } else {
                                var o5251 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251);
                                  } else {
                                    var G__8586 = a5237;
                                    var G__8587 = b5238;
                                    var G__8588 = c5239;
                                    var G__8589 = d5240;
                                    var G__8590 = e5241;
                                    var G__8591 = f5242;
                                    var G__8592 = g5243;
                                    var G__8593 = h5244;
                                    var G__8594 = i5245;
                                    var G__8595 = j5246;
                                    var G__8596 = k5247;
                                    var G__8597 = l5248;
                                    var G__8598 = m5249;
                                    var G__8599 = n5250;
                                    var G__8600 = o5251;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__8586, G__8587, G__8588, G__8589, G__8590, G__8591, G__8592, G__8593, G__8594, G__8595, G__8596, G__8597, G__8598, G__8599, G__8600) : f.call(null, G__8586, G__8587, G__8588, G__8589, G__8590, G__8591, G__8592, G__8593, G__8594, G__8595, G__8596, G__8597, G__8598, G__8599, G__8600);
                                  }
                                } else {
                                  var p5252 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251, p5252);
                                    } else {
                                      var G__8601 = a5237;
                                      var G__8602 = b5238;
                                      var G__8603 = c5239;
                                      var G__8604 = d5240;
                                      var G__8605 = e5241;
                                      var G__8606 = f5242;
                                      var G__8607 = g5243;
                                      var G__8608 = h5244;
                                      var G__8609 = i5245;
                                      var G__8610 = j5246;
                                      var G__8611 = k5247;
                                      var G__8612 = l5248;
                                      var G__8613 = m5249;
                                      var G__8614 = n5250;
                                      var G__8615 = o5251;
                                      var G__8616 = p5252;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__8601, G__8602, G__8603, G__8604, G__8605, G__8606, G__8607, G__8608, G__8609, G__8610, G__8611, G__8612, G__8613, G__8614, G__8615, G__8616) : f.call(null, G__8601, G__8602, G__8603, G__8604, G__8605, G__8606, G__8607, G__8608, G__8609, G__8610, G__8611, G__8612, G__8613, G__8614, G__8615, G__8616);
                                    }
                                  } else {
                                    var q5253 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251, p5252, q5253);
                                      } else {
                                        var G__8617 = a5237;
                                        var G__8618 = b5238;
                                        var G__8619 = c5239;
                                        var G__8620 = d5240;
                                        var G__8621 = e5241;
                                        var G__8622 = f5242;
                                        var G__8623 = g5243;
                                        var G__8624 = h5244;
                                        var G__8625 = i5245;
                                        var G__8626 = j5246;
                                        var G__8627 = k5247;
                                        var G__8628 = l5248;
                                        var G__8629 = m5249;
                                        var G__8630 = n5250;
                                        var G__8631 = o5251;
                                        var G__8632 = p5252;
                                        var G__8633 = q5253;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__8617, G__8618, G__8619, G__8620, G__8621, G__8622, G__8623, G__8624, G__8625, G__8626, G__8627, G__8628, G__8629, G__8630, G__8631, G__8632, G__8633) : f.call(null, G__8617, G__8618, G__8619, G__8620, G__8621, G__8622, G__8623, G__8624, G__8625, G__8626, G__8627, G__8628, G__8629, G__8630, G__8631, G__8632, G__8633);
                                      }
                                    } else {
                                      var r5254 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251, p5252, q5253, r5254);
                                        } else {
                                          var G__8634 = a5237;
                                          var G__8635 = b5238;
                                          var G__8636 = c5239;
                                          var G__8637 = d5240;
                                          var G__8638 = e5241;
                                          var G__8639 = f5242;
                                          var G__8640 = g5243;
                                          var G__8641 = h5244;
                                          var G__8642 = i5245;
                                          var G__8643 = j5246;
                                          var G__8644 = k5247;
                                          var G__8645 = l5248;
                                          var G__8646 = m5249;
                                          var G__8647 = n5250;
                                          var G__8648 = o5251;
                                          var G__8649 = p5252;
                                          var G__8650 = q5253;
                                          var G__8651 = r5254;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__8634, G__8635, G__8636, G__8637, G__8638, G__8639, G__8640, G__8641, G__8642, G__8643, G__8644, G__8645, G__8646, G__8647, G__8648, G__8649, G__8650, G__8651) : f.call(null, G__8634, G__8635, G__8636, G__8637, G__8638, G__8639, G__8640, G__8641, G__8642, G__8643, G__8644, G__8645, G__8646, G__8647, G__8648, G__8649, G__8650, G__8651);
                                        }
                                      } else {
                                        var s5255 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251, p5252, q5253, r5254, s5255);
                                          } else {
                                            var G__8652 = a5237;
                                            var G__8653 = b5238;
                                            var G__8654 = c5239;
                                            var G__8655 = d5240;
                                            var G__8656 = e5241;
                                            var G__8657 = f5242;
                                            var G__8658 = g5243;
                                            var G__8659 = h5244;
                                            var G__8660 = i5245;
                                            var G__8661 = j5246;
                                            var G__8662 = k5247;
                                            var G__8663 = l5248;
                                            var G__8664 = m5249;
                                            var G__8665 = n5250;
                                            var G__8666 = o5251;
                                            var G__8667 = p5252;
                                            var G__8668 = q5253;
                                            var G__8669 = r5254;
                                            var G__8670 = s5255;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__8652, G__8653, G__8654, G__8655, G__8656, G__8657, G__8658, G__8659, G__8660, G__8661, G__8662, G__8663, G__8664, G__8665, G__8666, G__8667, G__8668, G__8669, G__8670) : f.call(null, G__8652, G__8653, G__8654, G__8655, G__8656, G__8657, G__8658, G__8659, G__8660, G__8661, G__8662, G__8663, G__8664, G__8665, G__8666, G__8667, G__8668, G__8669, G__8670);
                                          }
                                        } else {
                                          var t5256 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251, p5252, q5253, r5254, s5255, t5256);
                                            } else {
                                              var G__8671 = a5237;
                                              var G__8672 = b5238;
                                              var G__8673 = c5239;
                                              var G__8674 = d5240;
                                              var G__8675 = e5241;
                                              var G__8676 = f5242;
                                              var G__8677 = g5243;
                                              var G__8678 = h5244;
                                              var G__8679 = i5245;
                                              var G__8680 = j5246;
                                              var G__8681 = k5247;
                                              var G__8682 = l5248;
                                              var G__8683 = m5249;
                                              var G__8684 = n5250;
                                              var G__8685 = o5251;
                                              var G__8686 = p5252;
                                              var G__8687 = q5253;
                                              var G__8688 = r5254;
                                              var G__8689 = s5255;
                                              var G__8690 = t5256;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__8671, G__8672, G__8673, G__8674, G__8675, G__8676, G__8677, G__8678, G__8679, G__8680, G__8681, G__8682, G__8683, G__8684, G__8685, G__8686, G__8687, G__8688, G__8689, G__8690) : f.call(null, G__8671, G__8672, G__8673, G__8674, G__8675, G__8676, G__8677, G__8678, G__8679, G__8680, G__8681, G__8682, G__8683, G__8684, G__8685, G__8686, G__8687, G__8688, G__8689, G__8690);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply() {
  var G__8698 = arguments.length;
  switch(G__8698) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5359__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq8691) {
  var G__8692 = cljs.core.first(seq8691);
  var seq8691__$1 = cljs.core.next(seq8691);
  var G__8693 = cljs.core.first(seq8691__$1);
  var seq8691__$2 = cljs.core.next(seq8691__$1);
  var G__8694 = cljs.core.first(seq8691__$2);
  var seq8691__$3 = cljs.core.next(seq8691__$2);
  var G__8695 = cljs.core.first(seq8691__$3);
  var seq8691__$4 = cljs.core.next(seq8691__$3);
  var G__8696 = cljs.core.first(seq8691__$4);
  var seq8691__$5 = cljs.core.next(seq8691__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__8692, G__8693, G__8694, G__8695, G__8696, seq8691__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta() {
  var G__8708 = arguments.length;
  switch(G__8708) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5359__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__8709 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8709) : f.call(null, G__8709);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__8710 = cljs.core.meta(obj);
    var G__8711 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8710, G__8711) : f.call(null, G__8710, G__8711);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__8712 = cljs.core.meta(obj);
    var G__8713 = a;
    var G__8714 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8712, G__8713, G__8714) : f.call(null, G__8712, G__8713, G__8714);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__8715 = cljs.core.meta(obj);
    var G__8716 = a;
    var G__8717 = b;
    var G__8718 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8715, G__8716, G__8717, G__8718) : f.call(null, G__8715, G__8716, G__8717, G__8718);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__8719 = cljs.core.meta(obj);
    var G__8720 = a;
    var G__8721 = b;
    var G__8722 = c;
    var G__8723 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8719, G__8720, G__8721, G__8722, G__8723) : f.call(null, G__8719, G__8720, G__8721, G__8722, G__8723);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq8700) {
  var G__8701 = cljs.core.first(seq8700);
  var seq8700__$1 = cljs.core.next(seq8700);
  var G__8702 = cljs.core.first(seq8700__$1);
  var seq8700__$2 = cljs.core.next(seq8700__$1);
  var G__8703 = cljs.core.first(seq8700__$2);
  var seq8700__$3 = cljs.core.next(seq8700__$2);
  var G__8704 = cljs.core.first(seq8700__$3);
  var seq8700__$4 = cljs.core.next(seq8700__$3);
  var G__8705 = cljs.core.first(seq8700__$4);
  var seq8700__$5 = cljs.core.next(seq8700__$4);
  var G__8706 = cljs.core.first(seq8700__$5);
  var seq8700__$6 = cljs.core.next(seq8700__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__8701, G__8702, G__8703, G__8704, G__8705, G__8706, seq8700__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_() {
  var G__8729 = arguments.length;
  switch(G__8729) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq8725) {
  var G__8726 = cljs.core.first(seq8725);
  var seq8725__$1 = cljs.core.next(seq8725);
  var G__8727 = cljs.core.first(seq8725__$1);
  var seq8725__$2 = cljs.core.next(seq8725__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__8726, G__8727, seq8725__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t8734 !== "undefined") {
  } else {
    cljs.core.t8734 = function(nil_iter, meta8735) {
      this.nil_iter = nil_iter;
      this.meta8735 = meta8735;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t8734.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8736, meta8735__$1) {
      var self__ = this;
      var _8736__$1 = this;
      return new cljs.core.t8734(self__.nil_iter, meta8735__$1);
    };
    cljs.core.t8734.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8736) {
      var self__ = this;
      var _8736__$1 = this;
      return self__.meta8735;
    };
    cljs.core.t8734.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t8734.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t8734.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t8734.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.Symbol(null, "meta8735", "meta8735", 300411467, null)], null);
    };
    cljs.core.t8734.cljs$lang$type = true;
    cljs.core.t8734.cljs$lang$ctorStr = "cljs.core/t8734";
    cljs.core.t8734.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
      return cljs.core._write(writer__4888__auto__, "cljs.core/t8734");
    };
    cljs.core.__GT_t8734 = function cljs$core$nil_iter_$___GT_t8734(nil_iter__$1, meta8735) {
      return new cljs.core.t8734(nil_iter__$1, meta8735);
    };
  }
  return new cljs.core.t8734(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.Symbol(null, "_next", "_next", 101877036, null)], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4296__auto__ = !(lt.stepper == null);
      if (and__4296__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4296__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__8737 = lt;
        var G__8738 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__8737, G__8738) : self__.xform.call(null, G__8737, G__8738);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__8739 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8739) : self__.xform.call(null, G__8739);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__8741 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8741) : xform.call(null, G__8741);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__8743 = cljs.core.next(iters__$1);
        iters__$1 = G__8743;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5193__auto___8744 = self__.iters.length;
  var i_8745 = 0;
  while (true) {
    if (i_8745 < n__5193__auto___8744) {
      self__.nexts[i_8745] = self__.iters[i_8745].next();
      var G__8746 = i_8745 + 1;
      i_8745 = G__8746;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4296__auto__ = !(lt.stepper == null);
      if (and__4296__auto__) {
        return this$.hasNext();
      } else {
        return and__4296__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__8742 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8742) : self__.xform.call(null, G__8742);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper() {
  var G__8748 = arguments.length;
  switch(G__8748) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(function() {
    var G__8749 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8749) : xform.call(null, G__8749);
  }(), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__8751_8755 = cljs.core.seq(colls);
  var chunk__8752_8756 = null;
  var count__8753_8757 = 0;
  var i__8754_8758 = 0;
  while (true) {
    if (i__8754_8758 < count__8753_8757) {
      var coll_8759 = chunk__8752_8756.cljs$core$IIndexed$_nth$arity$2(null, i__8754_8758);
      iters.push(cljs.core.iter(coll_8759));
      var G__8760 = seq__8751_8755;
      var G__8761 = chunk__8752_8756;
      var G__8762 = count__8753_8757;
      var G__8763 = i__8754_8758 + 1;
      seq__8751_8755 = G__8760;
      chunk__8752_8756 = G__8761;
      count__8753_8757 = G__8762;
      i__8754_8758 = G__8763;
      continue;
    } else {
      var temp__4422__auto___8764 = cljs.core.seq(seq__8751_8755);
      if (temp__4422__auto___8764) {
        var seq__8751_8765__$1 = temp__4422__auto___8764;
        if (cljs.core.chunked_seq_QMARK_(seq__8751_8765__$1)) {
          var c__5093__auto___8766 = cljs.core.chunk_first(seq__8751_8765__$1);
          var G__8767 = cljs.core.chunk_rest(seq__8751_8765__$1);
          var G__8768 = c__5093__auto___8766;
          var G__8769 = cljs.core.count(c__5093__auto___8766);
          var G__8770 = 0;
          seq__8751_8755 = G__8767;
          chunk__8752_8756 = G__8768;
          count__8753_8757 = G__8769;
          i__8754_8758 = G__8770;
          continue;
        } else {
          var coll_8771 = cljs.core.first(seq__8751_8765__$1);
          iters.push(cljs.core.iter(coll_8771));
          var G__8772 = cljs.core.next(seq__8751_8765__$1);
          var G__8773 = null;
          var G__8774 = 0;
          var G__8775 = 0;
          seq__8751_8755 = G__8772;
          chunk__8752_8756 = G__8773;
          count__8753_8757 = G__8774;
          i__8754_8758 = G__8775;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence() {
  var G__8780 = arguments.length;
  switch(G__8780) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4308__auto__ = cljs.core.seq(coll);
    if (or__4308__auto__) {
      return or__4308__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq8776) {
  var G__8777 = cljs.core.first(seq8776);
  var seq8776__$1 = cljs.core.next(seq8776);
  var G__8778 = cljs.core.first(seq8776__$1);
  var seq8776__$2 = cljs.core.next(seq8776__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__8777, G__8778, seq8776__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__8783 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8783) : pred.call(null, G__8783);
      }())) {
        var G__8784 = pred;
        var G__8785 = cljs.core.next(coll);
        pred = G__8784;
        coll = G__8785;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4308__auto__ = function() {
        var G__8789 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8789) : pred.call(null, G__8789);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var G__8790 = pred;
        var G__8791 = cljs.core.next(coll);
        pred = G__8790;
        coll = G__8791;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__8798 = null;
    var G__8798__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__8798__1 = function(x) {
      return cljs.core.not(function() {
        var G__8795 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8795) : f.call(null, G__8795);
      }());
    };
    var G__8798__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__8796 = x;
        var G__8797 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8796, G__8797) : f.call(null, G__8796, G__8797);
      }());
    };
    var G__8798__3 = function() {
      var G__8799__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__8799 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__8800__i = 0, G__8800__a = new Array(arguments.length - 2);
          while (G__8800__i < G__8800__a.length) {
            G__8800__a[G__8800__i] = arguments[G__8800__i + 2];
            ++G__8800__i;
          }
          zs = new cljs.core.IndexedSeq(G__8800__a, 0);
        }
        return G__8799__delegate.call(this, x, y, zs);
      };
      G__8799.cljs$lang$maxFixedArity = 2;
      G__8799.cljs$lang$applyTo = function(arglist__8801) {
        var x = cljs.core.first(arglist__8801);
        arglist__8801 = cljs.core.next(arglist__8801);
        var y = cljs.core.first(arglist__8801);
        var zs = cljs.core.rest(arglist__8801);
        return G__8799__delegate(x, y, zs);
      };
      G__8799.cljs$core$IFn$_invoke$arity$variadic = G__8799__delegate;
      return G__8799;
    }();
    G__8798 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__8798__0.call(this);
        case 1:
          return G__8798__1.call(this, x);
        case 2:
          return G__8798__2.call(this, x, y);
        default:
          var G__8802 = null;
          if (arguments.length > 2) {
            var G__8803__i = 0, G__8803__a = new Array(arguments.length - 2);
            while (G__8803__i < G__8803__a.length) {
              G__8803__a[G__8803__i] = arguments[G__8803__i + 2];
              ++G__8803__i;
            }
            G__8802 = new cljs.core.IndexedSeq(G__8803__a, 0);
          }
          return G__8798__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__8802);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8798.cljs$lang$maxFixedArity = 2;
    G__8798.cljs$lang$applyTo = G__8798__3.cljs$lang$applyTo;
    G__8798.cljs$core$IFn$_invoke$arity$0 = G__8798__0;
    G__8798.cljs$core$IFn$_invoke$arity$1 = G__8798__1;
    G__8798.cljs$core$IFn$_invoke$arity$2 = G__8798__2;
    G__8798.cljs$core$IFn$_invoke$arity$variadic = G__8798__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__8798;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__8804__delegate = function(args) {
      return x;
    };
    var G__8804 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__8805__i = 0, G__8805__a = new Array(arguments.length - 0);
        while (G__8805__i < G__8805__a.length) {
          G__8805__a[G__8805__i] = arguments[G__8805__i + 0];
          ++G__8805__i;
        }
        args = new cljs.core.IndexedSeq(G__8805__a, 0);
      }
      return G__8804__delegate.call(this, args);
    };
    G__8804.cljs$lang$maxFixedArity = 0;
    G__8804.cljs$lang$applyTo = function(arglist__8806) {
      var args = cljs.core.seq(arglist__8806);
      return G__8804__delegate(args);
    };
    G__8804.cljs$core$IFn$_invoke$arity$variadic = G__8804__delegate;
    return G__8804;
  }();
};
cljs.core.comp = function cljs$core$comp() {
  var G__8812 = arguments.length;
  switch(G__8812) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__8841 = null;
    var G__8841__0 = function() {
      var G__8813 = function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8813) : f.call(null, G__8813);
    };
    var G__8841__1 = function(x) {
      var G__8814 = function() {
        var G__8815 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8815) : g.call(null, G__8815);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8814) : f.call(null, G__8814);
    };
    var G__8841__2 = function(x, y) {
      var G__8816 = function() {
        var G__8817 = x;
        var G__8818 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__8817, G__8818) : g.call(null, G__8817, G__8818);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8816) : f.call(null, G__8816);
    };
    var G__8841__3 = function(x, y, z) {
      var G__8819 = function() {
        var G__8820 = x;
        var G__8821 = y;
        var G__8822 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__8820, G__8821, G__8822) : g.call(null, G__8820, G__8821, G__8822);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8819) : f.call(null, G__8819);
    };
    var G__8841__4 = function() {
      var G__8842__delegate = function(x, y, z, args) {
        var G__8823 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8823) : f.call(null, G__8823);
      };
      var G__8842 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8843__i = 0, G__8843__a = new Array(arguments.length - 3);
          while (G__8843__i < G__8843__a.length) {
            G__8843__a[G__8843__i] = arguments[G__8843__i + 3];
            ++G__8843__i;
          }
          args = new cljs.core.IndexedSeq(G__8843__a, 0);
        }
        return G__8842__delegate.call(this, x, y, z, args);
      };
      G__8842.cljs$lang$maxFixedArity = 3;
      G__8842.cljs$lang$applyTo = function(arglist__8844) {
        var x = cljs.core.first(arglist__8844);
        arglist__8844 = cljs.core.next(arglist__8844);
        var y = cljs.core.first(arglist__8844);
        arglist__8844 = cljs.core.next(arglist__8844);
        var z = cljs.core.first(arglist__8844);
        var args = cljs.core.rest(arglist__8844);
        return G__8842__delegate(x, y, z, args);
      };
      G__8842.cljs$core$IFn$_invoke$arity$variadic = G__8842__delegate;
      return G__8842;
    }();
    G__8841 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8841__0.call(this);
        case 1:
          return G__8841__1.call(this, x);
        case 2:
          return G__8841__2.call(this, x, y);
        case 3:
          return G__8841__3.call(this, x, y, z);
        default:
          var G__8845 = null;
          if (arguments.length > 3) {
            var G__8846__i = 0, G__8846__a = new Array(arguments.length - 3);
            while (G__8846__i < G__8846__a.length) {
              G__8846__a[G__8846__i] = arguments[G__8846__i + 3];
              ++G__8846__i;
            }
            G__8845 = new cljs.core.IndexedSeq(G__8846__a, 0);
          }
          return G__8841__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8845);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8841.cljs$lang$maxFixedArity = 3;
    G__8841.cljs$lang$applyTo = G__8841__4.cljs$lang$applyTo;
    G__8841.cljs$core$IFn$_invoke$arity$0 = G__8841__0;
    G__8841.cljs$core$IFn$_invoke$arity$1 = G__8841__1;
    G__8841.cljs$core$IFn$_invoke$arity$2 = G__8841__2;
    G__8841.cljs$core$IFn$_invoke$arity$3 = G__8841__3;
    G__8841.cljs$core$IFn$_invoke$arity$variadic = G__8841__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8841;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__8847 = null;
    var G__8847__0 = function() {
      var G__8824 = function() {
        var G__8825 = function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8825) : g.call(null, G__8825);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8824) : f.call(null, G__8824);
    };
    var G__8847__1 = function(x) {
      var G__8826 = function() {
        var G__8827 = function() {
          var G__8828 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__8828) : h.call(null, G__8828);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8827) : g.call(null, G__8827);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8826) : f.call(null, G__8826);
    };
    var G__8847__2 = function(x, y) {
      var G__8829 = function() {
        var G__8830 = function() {
          var G__8831 = x;
          var G__8832 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__8831, G__8832) : h.call(null, G__8831, G__8832);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8830) : g.call(null, G__8830);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8829) : f.call(null, G__8829);
    };
    var G__8847__3 = function(x, y, z) {
      var G__8833 = function() {
        var G__8834 = function() {
          var G__8835 = x;
          var G__8836 = y;
          var G__8837 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__8835, G__8836, G__8837) : h.call(null, G__8835, G__8836, G__8837);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8834) : g.call(null, G__8834);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8833) : f.call(null, G__8833);
    };
    var G__8847__4 = function() {
      var G__8848__delegate = function(x, y, z, args) {
        var G__8838 = function() {
          var G__8839 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8839) : g.call(null, G__8839);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8838) : f.call(null, G__8838);
      };
      var G__8848 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8849__i = 0, G__8849__a = new Array(arguments.length - 3);
          while (G__8849__i < G__8849__a.length) {
            G__8849__a[G__8849__i] = arguments[G__8849__i + 3];
            ++G__8849__i;
          }
          args = new cljs.core.IndexedSeq(G__8849__a, 0);
        }
        return G__8848__delegate.call(this, x, y, z, args);
      };
      G__8848.cljs$lang$maxFixedArity = 3;
      G__8848.cljs$lang$applyTo = function(arglist__8850) {
        var x = cljs.core.first(arglist__8850);
        arglist__8850 = cljs.core.next(arglist__8850);
        var y = cljs.core.first(arglist__8850);
        arglist__8850 = cljs.core.next(arglist__8850);
        var z = cljs.core.first(arglist__8850);
        var args = cljs.core.rest(arglist__8850);
        return G__8848__delegate(x, y, z, args);
      };
      G__8848.cljs$core$IFn$_invoke$arity$variadic = G__8848__delegate;
      return G__8848;
    }();
    G__8847 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8847__0.call(this);
        case 1:
          return G__8847__1.call(this, x);
        case 2:
          return G__8847__2.call(this, x, y);
        case 3:
          return G__8847__3.call(this, x, y, z);
        default:
          var G__8851 = null;
          if (arguments.length > 3) {
            var G__8852__i = 0, G__8852__a = new Array(arguments.length - 3);
            while (G__8852__i < G__8852__a.length) {
              G__8852__a[G__8852__i] = arguments[G__8852__i + 3];
              ++G__8852__i;
            }
            G__8851 = new cljs.core.IndexedSeq(G__8852__a, 0);
          }
          return G__8847__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8851);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8847.cljs$lang$maxFixedArity = 3;
    G__8847.cljs$lang$applyTo = G__8847__4.cljs$lang$applyTo;
    G__8847.cljs$core$IFn$_invoke$arity$0 = G__8847__0;
    G__8847.cljs$core$IFn$_invoke$arity$1 = G__8847__1;
    G__8847.cljs$core$IFn$_invoke$arity$2 = G__8847__2;
    G__8847.cljs$core$IFn$_invoke$arity$3 = G__8847__3;
    G__8847.cljs$core$IFn$_invoke$arity$variadic = G__8847__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8847;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__8853__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__8854 = cljs.core.first(fs__$2).call(null, ret);
            var G__8855 = cljs.core.next(fs__$2);
            ret = G__8854;
            fs__$2 = G__8855;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__8853 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__8856__i = 0, G__8856__a = new Array(arguments.length - 0);
          while (G__8856__i < G__8856__a.length) {
            G__8856__a[G__8856__i] = arguments[G__8856__i + 0];
            ++G__8856__i;
          }
          args = new cljs.core.IndexedSeq(G__8856__a, 0);
        }
        return G__8853__delegate.call(this, args);
      };
      G__8853.cljs$lang$maxFixedArity = 0;
      G__8853.cljs$lang$applyTo = function(arglist__8857) {
        var args = cljs.core.seq(arglist__8857);
        return G__8853__delegate(args);
      };
      G__8853.cljs$core$IFn$_invoke$arity$variadic = G__8853__delegate;
      return G__8853;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq8807) {
  var G__8808 = cljs.core.first(seq8807);
  var seq8807__$1 = cljs.core.next(seq8807);
  var G__8809 = cljs.core.first(seq8807__$1);
  var seq8807__$2 = cljs.core.next(seq8807__$1);
  var G__8810 = cljs.core.first(seq8807__$2);
  var seq8807__$3 = cljs.core.next(seq8807__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__8808, G__8809, G__8810, seq8807__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial() {
  var G__8864 = arguments.length;
  switch(G__8864) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5359__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__8908 = null;
    var G__8908__0 = function() {
      var G__8865 = arg1;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8865) : f.call(null, G__8865);
    };
    var G__8908__1 = function(x) {
      var G__8866 = arg1;
      var G__8867 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8866, G__8867) : f.call(null, G__8866, G__8867);
    };
    var G__8908__2 = function(x, y) {
      var G__8868 = arg1;
      var G__8869 = x;
      var G__8870 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8868, G__8869, G__8870) : f.call(null, G__8868, G__8869, G__8870);
    };
    var G__8908__3 = function(x, y, z) {
      var G__8871 = arg1;
      var G__8872 = x;
      var G__8873 = y;
      var G__8874 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8871, G__8872, G__8873, G__8874) : f.call(null, G__8871, G__8872, G__8873, G__8874);
    };
    var G__8908__4 = function() {
      var G__8909__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__8909 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8910__i = 0, G__8910__a = new Array(arguments.length - 3);
          while (G__8910__i < G__8910__a.length) {
            G__8910__a[G__8910__i] = arguments[G__8910__i + 3];
            ++G__8910__i;
          }
          args = new cljs.core.IndexedSeq(G__8910__a, 0);
        }
        return G__8909__delegate.call(this, x, y, z, args);
      };
      G__8909.cljs$lang$maxFixedArity = 3;
      G__8909.cljs$lang$applyTo = function(arglist__8911) {
        var x = cljs.core.first(arglist__8911);
        arglist__8911 = cljs.core.next(arglist__8911);
        var y = cljs.core.first(arglist__8911);
        arglist__8911 = cljs.core.next(arglist__8911);
        var z = cljs.core.first(arglist__8911);
        var args = cljs.core.rest(arglist__8911);
        return G__8909__delegate(x, y, z, args);
      };
      G__8909.cljs$core$IFn$_invoke$arity$variadic = G__8909__delegate;
      return G__8909;
    }();
    G__8908 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8908__0.call(this);
        case 1:
          return G__8908__1.call(this, x);
        case 2:
          return G__8908__2.call(this, x, y);
        case 3:
          return G__8908__3.call(this, x, y, z);
        default:
          var G__8912 = null;
          if (arguments.length > 3) {
            var G__8913__i = 0, G__8913__a = new Array(arguments.length - 3);
            while (G__8913__i < G__8913__a.length) {
              G__8913__a[G__8913__i] = arguments[G__8913__i + 3];
              ++G__8913__i;
            }
            G__8912 = new cljs.core.IndexedSeq(G__8913__a, 0);
          }
          return G__8908__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8912);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8908.cljs$lang$maxFixedArity = 3;
    G__8908.cljs$lang$applyTo = G__8908__4.cljs$lang$applyTo;
    G__8908.cljs$core$IFn$_invoke$arity$0 = G__8908__0;
    G__8908.cljs$core$IFn$_invoke$arity$1 = G__8908__1;
    G__8908.cljs$core$IFn$_invoke$arity$2 = G__8908__2;
    G__8908.cljs$core$IFn$_invoke$arity$3 = G__8908__3;
    G__8908.cljs$core$IFn$_invoke$arity$variadic = G__8908__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8908;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__8914 = null;
    var G__8914__0 = function() {
      var G__8875 = arg1;
      var G__8876 = arg2;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8875, G__8876) : f.call(null, G__8875, G__8876);
    };
    var G__8914__1 = function(x) {
      var G__8877 = arg1;
      var G__8878 = arg2;
      var G__8879 = x;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8877, G__8878, G__8879) : f.call(null, G__8877, G__8878, G__8879);
    };
    var G__8914__2 = function(x, y) {
      var G__8880 = arg1;
      var G__8881 = arg2;
      var G__8882 = x;
      var G__8883 = y;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8880, G__8881, G__8882, G__8883) : f.call(null, G__8880, G__8881, G__8882, G__8883);
    };
    var G__8914__3 = function(x, y, z) {
      var G__8884 = arg1;
      var G__8885 = arg2;
      var G__8886 = x;
      var G__8887 = y;
      var G__8888 = z;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8884, G__8885, G__8886, G__8887, G__8888) : f.call(null, G__8884, G__8885, G__8886, G__8887, G__8888);
    };
    var G__8914__4 = function() {
      var G__8915__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__8915 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8916__i = 0, G__8916__a = new Array(arguments.length - 3);
          while (G__8916__i < G__8916__a.length) {
            G__8916__a[G__8916__i] = arguments[G__8916__i + 3];
            ++G__8916__i;
          }
          args = new cljs.core.IndexedSeq(G__8916__a, 0);
        }
        return G__8915__delegate.call(this, x, y, z, args);
      };
      G__8915.cljs$lang$maxFixedArity = 3;
      G__8915.cljs$lang$applyTo = function(arglist__8917) {
        var x = cljs.core.first(arglist__8917);
        arglist__8917 = cljs.core.next(arglist__8917);
        var y = cljs.core.first(arglist__8917);
        arglist__8917 = cljs.core.next(arglist__8917);
        var z = cljs.core.first(arglist__8917);
        var args = cljs.core.rest(arglist__8917);
        return G__8915__delegate(x, y, z, args);
      };
      G__8915.cljs$core$IFn$_invoke$arity$variadic = G__8915__delegate;
      return G__8915;
    }();
    G__8914 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8914__0.call(this);
        case 1:
          return G__8914__1.call(this, x);
        case 2:
          return G__8914__2.call(this, x, y);
        case 3:
          return G__8914__3.call(this, x, y, z);
        default:
          var G__8918 = null;
          if (arguments.length > 3) {
            var G__8919__i = 0, G__8919__a = new Array(arguments.length - 3);
            while (G__8919__i < G__8919__a.length) {
              G__8919__a[G__8919__i] = arguments[G__8919__i + 3];
              ++G__8919__i;
            }
            G__8918 = new cljs.core.IndexedSeq(G__8919__a, 0);
          }
          return G__8914__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8918);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8914.cljs$lang$maxFixedArity = 3;
    G__8914.cljs$lang$applyTo = G__8914__4.cljs$lang$applyTo;
    G__8914.cljs$core$IFn$_invoke$arity$0 = G__8914__0;
    G__8914.cljs$core$IFn$_invoke$arity$1 = G__8914__1;
    G__8914.cljs$core$IFn$_invoke$arity$2 = G__8914__2;
    G__8914.cljs$core$IFn$_invoke$arity$3 = G__8914__3;
    G__8914.cljs$core$IFn$_invoke$arity$variadic = G__8914__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8914;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__8920 = null;
    var G__8920__0 = function() {
      var G__8889 = arg1;
      var G__8890 = arg2;
      var G__8891 = arg3;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8889, G__8890, G__8891) : f.call(null, G__8889, G__8890, G__8891);
    };
    var G__8920__1 = function(x) {
      var G__8892 = arg1;
      var G__8893 = arg2;
      var G__8894 = arg3;
      var G__8895 = x;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8892, G__8893, G__8894, G__8895) : f.call(null, G__8892, G__8893, G__8894, G__8895);
    };
    var G__8920__2 = function(x, y) {
      var G__8896 = arg1;
      var G__8897 = arg2;
      var G__8898 = arg3;
      var G__8899 = x;
      var G__8900 = y;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8896, G__8897, G__8898, G__8899, G__8900) : f.call(null, G__8896, G__8897, G__8898, G__8899, G__8900);
    };
    var G__8920__3 = function(x, y, z) {
      var G__8901 = arg1;
      var G__8902 = arg2;
      var G__8903 = arg3;
      var G__8904 = x;
      var G__8905 = y;
      var G__8906 = z;
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8901, G__8902, G__8903, G__8904, G__8905, G__8906) : f.call(null, G__8901, G__8902, G__8903, G__8904, G__8905, G__8906);
    };
    var G__8920__4 = function() {
      var G__8921__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__8921 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8922__i = 0, G__8922__a = new Array(arguments.length - 3);
          while (G__8922__i < G__8922__a.length) {
            G__8922__a[G__8922__i] = arguments[G__8922__i + 3];
            ++G__8922__i;
          }
          args = new cljs.core.IndexedSeq(G__8922__a, 0);
        }
        return G__8921__delegate.call(this, x, y, z, args);
      };
      G__8921.cljs$lang$maxFixedArity = 3;
      G__8921.cljs$lang$applyTo = function(arglist__8923) {
        var x = cljs.core.first(arglist__8923);
        arglist__8923 = cljs.core.next(arglist__8923);
        var y = cljs.core.first(arglist__8923);
        arglist__8923 = cljs.core.next(arglist__8923);
        var z = cljs.core.first(arglist__8923);
        var args = cljs.core.rest(arglist__8923);
        return G__8921__delegate(x, y, z, args);
      };
      G__8921.cljs$core$IFn$_invoke$arity$variadic = G__8921__delegate;
      return G__8921;
    }();
    G__8920 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8920__0.call(this);
        case 1:
          return G__8920__1.call(this, x);
        case 2:
          return G__8920__2.call(this, x, y);
        case 3:
          return G__8920__3.call(this, x, y, z);
        default:
          var G__8924 = null;
          if (arguments.length > 3) {
            var G__8925__i = 0, G__8925__a = new Array(arguments.length - 3);
            while (G__8925__i < G__8925__a.length) {
              G__8925__a[G__8925__i] = arguments[G__8925__i + 3];
              ++G__8925__i;
            }
            G__8924 = new cljs.core.IndexedSeq(G__8925__a, 0);
          }
          return G__8920__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8924);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8920.cljs$lang$maxFixedArity = 3;
    G__8920.cljs$lang$applyTo = G__8920__4.cljs$lang$applyTo;
    G__8920.cljs$core$IFn$_invoke$arity$0 = G__8920__0;
    G__8920.cljs$core$IFn$_invoke$arity$1 = G__8920__1;
    G__8920.cljs$core$IFn$_invoke$arity$2 = G__8920__2;
    G__8920.cljs$core$IFn$_invoke$arity$3 = G__8920__3;
    G__8920.cljs$core$IFn$_invoke$arity$variadic = G__8920__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8920;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__8926__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__8926 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__8927__i = 0, G__8927__a = new Array(arguments.length - 0);
        while (G__8927__i < G__8927__a.length) {
          G__8927__a[G__8927__i] = arguments[G__8927__i + 0];
          ++G__8927__i;
        }
        args = new cljs.core.IndexedSeq(G__8927__a, 0);
      }
      return G__8926__delegate.call(this, args);
    };
    G__8926.cljs$lang$maxFixedArity = 0;
    G__8926.cljs$lang$applyTo = function(arglist__8928) {
      var args = cljs.core.seq(arglist__8928);
      return G__8926__delegate(args);
    };
    G__8926.cljs$core$IFn$_invoke$arity$variadic = G__8926__delegate;
    return G__8926;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq8858) {
  var G__8859 = cljs.core.first(seq8858);
  var seq8858__$1 = cljs.core.next(seq8858);
  var G__8860 = cljs.core.first(seq8858__$1);
  var seq8858__$2 = cljs.core.next(seq8858__$1);
  var G__8861 = cljs.core.first(seq8858__$2);
  var seq8858__$3 = cljs.core.next(seq8858__$2);
  var G__8862 = cljs.core.first(seq8858__$3);
  var seq8858__$4 = cljs.core.next(seq8858__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__8859, G__8860, G__8861, G__8862, seq8858__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil() {
  var G__8930 = arguments.length;
  switch(G__8930) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__8948 = null;
    var G__8948__1 = function(a) {
      var G__8931 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8931) : f.call(null, G__8931);
    };
    var G__8948__2 = function(a, b) {
      var G__8932 = a == null ? x : a;
      var G__8933 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8932, G__8933) : f.call(null, G__8932, G__8933);
    };
    var G__8948__3 = function(a, b, c) {
      var G__8934 = a == null ? x : a;
      var G__8935 = b;
      var G__8936 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8934, G__8935, G__8936) : f.call(null, G__8934, G__8935, G__8936);
    };
    var G__8948__4 = function() {
      var G__8949__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__8949 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__8950__i = 0, G__8950__a = new Array(arguments.length - 3);
          while (G__8950__i < G__8950__a.length) {
            G__8950__a[G__8950__i] = arguments[G__8950__i + 3];
            ++G__8950__i;
          }
          ds = new cljs.core.IndexedSeq(G__8950__a, 0);
        }
        return G__8949__delegate.call(this, a, b, c, ds);
      };
      G__8949.cljs$lang$maxFixedArity = 3;
      G__8949.cljs$lang$applyTo = function(arglist__8951) {
        var a = cljs.core.first(arglist__8951);
        arglist__8951 = cljs.core.next(arglist__8951);
        var b = cljs.core.first(arglist__8951);
        arglist__8951 = cljs.core.next(arglist__8951);
        var c = cljs.core.first(arglist__8951);
        var ds = cljs.core.rest(arglist__8951);
        return G__8949__delegate(a, b, c, ds);
      };
      G__8949.cljs$core$IFn$_invoke$arity$variadic = G__8949__delegate;
      return G__8949;
    }();
    G__8948 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__8948__1.call(this, a);
        case 2:
          return G__8948__2.call(this, a, b);
        case 3:
          return G__8948__3.call(this, a, b, c);
        default:
          var G__8952 = null;
          if (arguments.length > 3) {
            var G__8953__i = 0, G__8953__a = new Array(arguments.length - 3);
            while (G__8953__i < G__8953__a.length) {
              G__8953__a[G__8953__i] = arguments[G__8953__i + 3];
              ++G__8953__i;
            }
            G__8952 = new cljs.core.IndexedSeq(G__8953__a, 0);
          }
          return G__8948__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__8952);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8948.cljs$lang$maxFixedArity = 3;
    G__8948.cljs$lang$applyTo = G__8948__4.cljs$lang$applyTo;
    G__8948.cljs$core$IFn$_invoke$arity$1 = G__8948__1;
    G__8948.cljs$core$IFn$_invoke$arity$2 = G__8948__2;
    G__8948.cljs$core$IFn$_invoke$arity$3 = G__8948__3;
    G__8948.cljs$core$IFn$_invoke$arity$variadic = G__8948__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8948;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__8954 = null;
    var G__8954__2 = function(a, b) {
      var G__8937 = a == null ? x : a;
      var G__8938 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8937, G__8938) : f.call(null, G__8937, G__8938);
    };
    var G__8954__3 = function(a, b, c) {
      var G__8939 = a == null ? x : a;
      var G__8940 = b == null ? y : b;
      var G__8941 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8939, G__8940, G__8941) : f.call(null, G__8939, G__8940, G__8941);
    };
    var G__8954__4 = function() {
      var G__8955__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__8955 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__8956__i = 0, G__8956__a = new Array(arguments.length - 3);
          while (G__8956__i < G__8956__a.length) {
            G__8956__a[G__8956__i] = arguments[G__8956__i + 3];
            ++G__8956__i;
          }
          ds = new cljs.core.IndexedSeq(G__8956__a, 0);
        }
        return G__8955__delegate.call(this, a, b, c, ds);
      };
      G__8955.cljs$lang$maxFixedArity = 3;
      G__8955.cljs$lang$applyTo = function(arglist__8957) {
        var a = cljs.core.first(arglist__8957);
        arglist__8957 = cljs.core.next(arglist__8957);
        var b = cljs.core.first(arglist__8957);
        arglist__8957 = cljs.core.next(arglist__8957);
        var c = cljs.core.first(arglist__8957);
        var ds = cljs.core.rest(arglist__8957);
        return G__8955__delegate(a, b, c, ds);
      };
      G__8955.cljs$core$IFn$_invoke$arity$variadic = G__8955__delegate;
      return G__8955;
    }();
    G__8954 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__8954__2.call(this, a, b);
        case 3:
          return G__8954__3.call(this, a, b, c);
        default:
          var G__8958 = null;
          if (arguments.length > 3) {
            var G__8959__i = 0, G__8959__a = new Array(arguments.length - 3);
            while (G__8959__i < G__8959__a.length) {
              G__8959__a[G__8959__i] = arguments[G__8959__i + 3];
              ++G__8959__i;
            }
            G__8958 = new cljs.core.IndexedSeq(G__8959__a, 0);
          }
          return G__8954__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__8958);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8954.cljs$lang$maxFixedArity = 3;
    G__8954.cljs$lang$applyTo = G__8954__4.cljs$lang$applyTo;
    G__8954.cljs$core$IFn$_invoke$arity$2 = G__8954__2;
    G__8954.cljs$core$IFn$_invoke$arity$3 = G__8954__3;
    G__8954.cljs$core$IFn$_invoke$arity$variadic = G__8954__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8954;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__8960 = null;
    var G__8960__2 = function(a, b) {
      var G__8942 = a == null ? x : a;
      var G__8943 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8942, G__8943) : f.call(null, G__8942, G__8943);
    };
    var G__8960__3 = function(a, b, c) {
      var G__8944 = a == null ? x : a;
      var G__8945 = b == null ? y : b;
      var G__8946 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8944, G__8945, G__8946) : f.call(null, G__8944, G__8945, G__8946);
    };
    var G__8960__4 = function() {
      var G__8961__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__8961 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__8962__i = 0, G__8962__a = new Array(arguments.length - 3);
          while (G__8962__i < G__8962__a.length) {
            G__8962__a[G__8962__i] = arguments[G__8962__i + 3];
            ++G__8962__i;
          }
          ds = new cljs.core.IndexedSeq(G__8962__a, 0);
        }
        return G__8961__delegate.call(this, a, b, c, ds);
      };
      G__8961.cljs$lang$maxFixedArity = 3;
      G__8961.cljs$lang$applyTo = function(arglist__8963) {
        var a = cljs.core.first(arglist__8963);
        arglist__8963 = cljs.core.next(arglist__8963);
        var b = cljs.core.first(arglist__8963);
        arglist__8963 = cljs.core.next(arglist__8963);
        var c = cljs.core.first(arglist__8963);
        var ds = cljs.core.rest(arglist__8963);
        return G__8961__delegate(a, b, c, ds);
      };
      G__8961.cljs$core$IFn$_invoke$arity$variadic = G__8961__delegate;
      return G__8961;
    }();
    G__8960 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__8960__2.call(this, a, b);
        case 3:
          return G__8960__3.call(this, a, b, c);
        default:
          var G__8964 = null;
          if (arguments.length > 3) {
            var G__8965__i = 0, G__8965__a = new Array(arguments.length - 3);
            while (G__8965__i < G__8965__a.length) {
              G__8965__a[G__8965__i] = arguments[G__8965__i + 3];
              ++G__8965__i;
            }
            G__8964 = new cljs.core.IndexedSeq(G__8965__a, 0);
          }
          return G__8960__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__8964);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8960.cljs$lang$maxFixedArity = 3;
    G__8960.cljs$lang$applyTo = G__8960__4.cljs$lang$applyTo;
    G__8960.cljs$core$IFn$_invoke$arity$2 = G__8960__2;
    G__8960.cljs$core$IFn$_invoke$arity$3 = G__8960__3;
    G__8960.cljs$core$IFn$_invoke$arity$variadic = G__8960__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8960;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed() {
  var G__8967 = arguments.length;
  switch(G__8967) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = function() {
      var G__8968 = -1;
      return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__8968) : cljs.core.volatile_BANG_.call(null, G__8968);
    }();
    return function(i) {
      return function() {
        var G__8999 = null;
        var G__8999__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8999__1 = function(result) {
          var G__8969 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8969) : rf.call(null, G__8969);
        };
        var G__8999__2 = function(result, input) {
          var G__8970 = result;
          var G__8971 = function() {
            var G__8972 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__8973 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8972, G__8973) : f.call(null, G__8972, G__8973);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8970, G__8971) : rf.call(null, G__8970, G__8971);
        };
        G__8999 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8999__0.call(this);
            case 1:
              return G__8999__1.call(this, result);
            case 2:
              return G__8999__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8999.cljs$core$IFn$_invoke$arity$0 = G__8999__0;
        G__8999.cljs$core$IFn$_invoke$arity$1 = G__8999__1;
        G__8999.cljs$core$IFn$_invoke$arity$2 = G__8999__2;
        return G__8999;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4422__auto__ = cljs.core.seq(coll__$1);
      if (temp__4422__auto__) {
        var s = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5193__auto___9000 = size;
          var i_9001 = 0;
          while (true) {
            if (i_9001 < n__5193__auto___9000) {
              cljs.core.chunk_append(b, function() {
                var G__8994 = idx + i_9001;
                var G__8995 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9001);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8994, G__8995) : f.call(null, G__8994, G__8995);
              }());
              var G__9002 = i_9001 + 1;
              i_9001 = G__9002;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__8996 = idx;
            var G__8997 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8996, G__8997) : f.call(null, G__8996, G__8997);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep() {
  var G__9004 = arguments.length;
  switch(G__9004) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__9012 = null;
      var G__9012__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__9012__1 = function(result) {
        var G__9005 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9005) : rf.call(null, G__9005);
      };
      var G__9012__2 = function(result, input) {
        var v = function() {
          var G__9006 = input;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9006) : f.call(null, G__9006);
        }();
        if (v == null) {
          return result;
        } else {
          var G__9007 = result;
          var G__9008 = v;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9007, G__9008) : rf.call(null, G__9007, G__9008);
        }
      };
      G__9012 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__9012__0.call(this);
          case 1:
            return G__9012__1.call(this, result);
          case 2:
            return G__9012__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9012.cljs$core$IFn$_invoke$arity$0 = G__9012__0;
      G__9012.cljs$core$IFn$_invoke$arity$1 = G__9012__1;
      G__9012.cljs$core$IFn$_invoke$arity$2 = G__9012__2;
      return G__9012;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5193__auto___9013 = size;
        var i_9014 = 0;
        while (true) {
          if (i_9014 < n__5193__auto___9013) {
            var x_9015 = function() {
              var G__9009 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9014);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9009) : f.call(null, G__9009);
            }();
            if (x_9015 == null) {
            } else {
              cljs.core.chunk_append(b, x_9015);
            }
            var G__9016 = i_9014 + 1;
            i_9014 = G__9016;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__9010 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9010) : f.call(null, G__9010);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__9017 = cljs.core.seq(self__.watches);
  var chunk__9018 = null;
  var count__9019 = 0;
  var i__9020 = 0;
  while (true) {
    if (i__9020 < count__9019) {
      var vec__9021 = chunk__9018.cljs$core$IIndexed$_nth$arity$2(null, i__9020);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9021, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9021, 1, null);
      var G__9022_9032 = key;
      var G__9023_9033 = this$__$1;
      var G__9024_9034 = oldval;
      var G__9025_9035 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9022_9032, G__9023_9033, G__9024_9034, G__9025_9035) : f.call(null, G__9022_9032, G__9023_9033, G__9024_9034, G__9025_9035);
      var G__9036 = seq__9017;
      var G__9037 = chunk__9018;
      var G__9038 = count__9019;
      var G__9039 = i__9020 + 1;
      seq__9017 = G__9036;
      chunk__9018 = G__9037;
      count__9019 = G__9038;
      i__9020 = G__9039;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__9017);
      if (temp__4422__auto__) {
        var seq__9017__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9017__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__9017__$1);
          var G__9040 = cljs.core.chunk_rest(seq__9017__$1);
          var G__9041 = c__5093__auto__;
          var G__9042 = cljs.core.count(c__5093__auto__);
          var G__9043 = 0;
          seq__9017 = G__9040;
          chunk__9018 = G__9041;
          count__9019 = G__9042;
          i__9020 = G__9043;
          continue;
        } else {
          var vec__9026 = cljs.core.first(seq__9017__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9026, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9026, 1, null);
          var G__9027_9044 = key;
          var G__9028_9045 = this$__$1;
          var G__9029_9046 = oldval;
          var G__9030_9047 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9027_9044, G__9028_9045, G__9029_9046, G__9030_9047) : f.call(null, G__9027_9044, G__9028_9045, G__9029_9046, G__9030_9047);
          var G__9048 = cljs.core.next(seq__9017__$1);
          var G__9049 = null;
          var G__9050 = 0;
          var G__9051 = 0;
          seq__9017 = G__9048;
          chunk__9018 = G__9049;
          count__9019 = G__9050;
          i__9020 = G__9051;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__9031 = this$__$1;
  return goog.getUid(G__9031);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom() {
  var G__9055 = arguments.length;
  switch(G__9055) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__9056) {
  var map__9057 = p__9056;
  var map__9057__$1 = cljs.core.seq_QMARK_(map__9057) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9057) : map__9057;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9057__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9057__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq9052) {
  var G__9053 = cljs.core.first(seq9052);
  var seq9052__$1 = cljs.core.next(seq9052);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__9053, seq9052__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__9061 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__9061) : validate.call(null, G__9061);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__9062 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__9062) : cljs.core.pr_str.call(null, G__9062);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_() {
  var G__9069 = arguments.length;
  switch(G__9069) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5359__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__9070 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9070) : f.call(null, G__9070);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__9071 = a.state;
      var G__9072 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9071, G__9072) : f.call(null, G__9071, G__9072);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__9073 = a.state;
      var G__9074 = x;
      var G__9075 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9073, G__9074, G__9075) : f.call(null, G__9073, G__9074, G__9075);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq9063) {
  var G__9064 = cljs.core.first(seq9063);
  var seq9063__$1 = cljs.core.next(seq9063);
  var G__9065 = cljs.core.first(seq9063__$1);
  var seq9063__$2 = cljs.core.next(seq9063__$1);
  var G__9066 = cljs.core.first(seq9063__$2);
  var seq9063__$3 = cljs.core.next(seq9063__$2);
  var G__9067 = cljs.core.first(seq9063__$3);
  var seq9063__$4 = cljs.core.next(seq9063__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9064, G__9065, G__9066, G__9067, seq9063__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null)], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed() {
  var G__9078 = arguments.length;
  switch(G__9078) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__9113 = null;
        var G__9113__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9113__1 = function(result) {
          var G__9079 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9079) : rf.call(null, G__9079);
        };
        var G__9113__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = function() {
            var G__9080 = i;
            var G__9081 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9080, G__9081) : f.call(null, G__9080, G__9081);
          }();
          if (v == null) {
            return result;
          } else {
            var G__9082 = result;
            var G__9083 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9082, G__9083) : rf.call(null, G__9082, G__9083);
          }
        };
        G__9113 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9113__0.call(this);
            case 1:
              return G__9113__1.call(this, result);
            case 2:
              return G__9113__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9113.cljs$core$IFn$_invoke$arity$0 = G__9113__0;
        G__9113.cljs$core$IFn$_invoke$arity$1 = G__9113__1;
        G__9113.cljs$core$IFn$_invoke$arity$2 = G__9113__2;
        return G__9113;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4422__auto__ = cljs.core.seq(coll__$1);
      if (temp__4422__auto__) {
        var s = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5193__auto___9114 = size;
          var i_9115 = 0;
          while (true) {
            if (i_9115 < n__5193__auto___9114) {
              var x_9116 = function() {
                var G__9108 = idx + i_9115;
                var G__9109 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9115);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9108, G__9109) : f.call(null, G__9108, G__9109);
              }();
              if (x_9116 == null) {
              } else {
                cljs.core.chunk_append(b, x_9116);
              }
              var G__9117 = i_9115 + 1;
              i_9115 = G__9117;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__9110 = idx;
            var G__9111 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9110, G__9111) : f.call(null, G__9110, G__9111);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred() {
  var G__9129 = arguments.length;
  switch(G__9129) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(function() {
        var G__9145 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9145) : p.call(null, G__9145);
      }());
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__9147 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9147) : p.call(null, G__9147);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var G__9148 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9148) : p.call(null, G__9148);
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__9150 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9150) : p.call(null, G__9150);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__9152 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9152) : p.call(null, G__9152);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var G__9153 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9153) : p.call(null, G__9153);
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__9315__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4296__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4296__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4296__auto__;
          }
        }());
      };
      var G__9315 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9316__i = 0, G__9316__a = new Array(arguments.length - 3);
          while (G__9316__i < G__9316__a.length) {
            G__9316__a[G__9316__i] = arguments[G__9316__i + 3];
            ++G__9316__i;
          }
          args = new cljs.core.IndexedSeq(G__9316__a, 0);
        }
        return G__9315__delegate.call(this, x, y, z, args);
      };
      G__9315.cljs$lang$maxFixedArity = 3;
      G__9315.cljs$lang$applyTo = function(arglist__9317) {
        var x = cljs.core.first(arglist__9317);
        arglist__9317 = cljs.core.next(arglist__9317);
        var y = cljs.core.first(arglist__9317);
        arglist__9317 = cljs.core.next(arglist__9317);
        var z = cljs.core.first(arglist__9317);
        var args = cljs.core.rest(arglist__9317);
        return G__9315__delegate(x, y, z, args);
      };
      G__9315.cljs$core$IFn$_invoke$arity$variadic = G__9315__delegate;
      return G__9315;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__9318 = null;
          if (arguments.length > 3) {
            var G__9319__i = 0, G__9319__a = new Array(arguments.length - 3);
            while (G__9319__i < G__9319__a.length) {
              G__9319__a[G__9319__i] = arguments[G__9319__i + 3];
              ++G__9319__i;
            }
            G__9318 = new cljs.core.IndexedSeq(G__9319__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9318);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__9185 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9185) : p1.call(null, G__9185);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var G__9186 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9186) : p2.call(null, G__9186);
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__9188 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9188) : p1.call(null, G__9188);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__9190 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9190) : p1.call(null, G__9190);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var and__4296__auto____$2 = function() {
              var G__9192 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9192) : p2.call(null, G__9192);
            }();
            if (cljs.core.truth_(and__4296__auto____$2)) {
              var G__9193 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9193) : p2.call(null, G__9193);
            } else {
              return and__4296__auto____$2;
            }
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__9195 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9195) : p1.call(null, G__9195);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__9197 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9197) : p1.call(null, G__9197);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var and__4296__auto____$2 = function() {
              var G__9199 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9199) : p1.call(null, G__9199);
            }();
            if (cljs.core.truth_(and__4296__auto____$2)) {
              var and__4296__auto____$3 = function() {
                var G__9201 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9201) : p2.call(null, G__9201);
              }();
              if (cljs.core.truth_(and__4296__auto____$3)) {
                var and__4296__auto____$4 = function() {
                  var G__9203 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9203) : p2.call(null, G__9203);
                }();
                if (cljs.core.truth_(and__4296__auto____$4)) {
                  var G__9204 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9204) : p2.call(null, G__9204);
                } else {
                  return and__4296__auto____$4;
                }
              } else {
                return and__4296__auto____$3;
              }
            } else {
              return and__4296__auto____$2;
            }
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__9320__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4296__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4296__auto__)) {
            return cljs.core.every_QMARK_(function(and__4296__auto__) {
              return function(p1__9118_SHARP_) {
                var and__4296__auto____$1 = function() {
                  var G__9206 = p1__9118_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9206) : p1.call(null, G__9206);
                }();
                if (cljs.core.truth_(and__4296__auto____$1)) {
                  var G__9207 = p1__9118_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9207) : p2.call(null, G__9207);
                } else {
                  return and__4296__auto____$1;
                }
              };
            }(and__4296__auto__), args);
          } else {
            return and__4296__auto__;
          }
        }());
      };
      var G__9320 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9321__i = 0, G__9321__a = new Array(arguments.length - 3);
          while (G__9321__i < G__9321__a.length) {
            G__9321__a[G__9321__i] = arguments[G__9321__i + 3];
            ++G__9321__i;
          }
          args = new cljs.core.IndexedSeq(G__9321__a, 0);
        }
        return G__9320__delegate.call(this, x, y, z, args);
      };
      G__9320.cljs$lang$maxFixedArity = 3;
      G__9320.cljs$lang$applyTo = function(arglist__9322) {
        var x = cljs.core.first(arglist__9322);
        arglist__9322 = cljs.core.next(arglist__9322);
        var y = cljs.core.first(arglist__9322);
        arglist__9322 = cljs.core.next(arglist__9322);
        var z = cljs.core.first(arglist__9322);
        var args = cljs.core.rest(arglist__9322);
        return G__9320__delegate(x, y, z, args);
      };
      G__9320.cljs$core$IFn$_invoke$arity$variadic = G__9320__delegate;
      return G__9320;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__9323 = null;
          if (arguments.length > 3) {
            var G__9324__i = 0, G__9324__a = new Array(arguments.length - 3);
            while (G__9324__i < G__9324__a.length) {
              G__9324__a[G__9324__i] = arguments[G__9324__i + 3];
              ++G__9324__i;
            }
            G__9323 = new cljs.core.IndexedSeq(G__9324__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9323);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__9253 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9253) : p1.call(null, G__9253);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__9255 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9255) : p2.call(null, G__9255);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var G__9256 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9256) : p3.call(null, G__9256);
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__9258 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9258) : p1.call(null, G__9258);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__9260 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9260) : p2.call(null, G__9260);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var and__4296__auto____$2 = function() {
              var G__9262 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9262) : p3.call(null, G__9262);
            }();
            if (cljs.core.truth_(and__4296__auto____$2)) {
              var and__4296__auto____$3 = function() {
                var G__9264 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9264) : p1.call(null, G__9264);
              }();
              if (cljs.core.truth_(and__4296__auto____$3)) {
                var and__4296__auto____$4 = function() {
                  var G__9266 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9266) : p2.call(null, G__9266);
                }();
                if (cljs.core.truth_(and__4296__auto____$4)) {
                  var G__9267 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9267) : p3.call(null, G__9267);
                } else {
                  return and__4296__auto____$4;
                }
              } else {
                return and__4296__auto____$3;
              }
            } else {
              return and__4296__auto____$2;
            }
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__9269 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9269) : p1.call(null, G__9269);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__9271 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9271) : p2.call(null, G__9271);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var and__4296__auto____$2 = function() {
              var G__9273 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9273) : p3.call(null, G__9273);
            }();
            if (cljs.core.truth_(and__4296__auto____$2)) {
              var and__4296__auto____$3 = function() {
                var G__9275 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9275) : p1.call(null, G__9275);
              }();
              if (cljs.core.truth_(and__4296__auto____$3)) {
                var and__4296__auto____$4 = function() {
                  var G__9277 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9277) : p2.call(null, G__9277);
                }();
                if (cljs.core.truth_(and__4296__auto____$4)) {
                  var and__4296__auto____$5 = function() {
                    var G__9279 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9279) : p3.call(null, G__9279);
                  }();
                  if (cljs.core.truth_(and__4296__auto____$5)) {
                    var and__4296__auto____$6 = function() {
                      var G__9281 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9281) : p1.call(null, G__9281);
                    }();
                    if (cljs.core.truth_(and__4296__auto____$6)) {
                      var and__4296__auto____$7 = function() {
                        var G__9283 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9283) : p2.call(null, G__9283);
                      }();
                      if (cljs.core.truth_(and__4296__auto____$7)) {
                        var G__9284 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9284) : p3.call(null, G__9284);
                      } else {
                        return and__4296__auto____$7;
                      }
                    } else {
                      return and__4296__auto____$6;
                    }
                  } else {
                    return and__4296__auto____$5;
                  }
                } else {
                  return and__4296__auto____$4;
                }
              } else {
                return and__4296__auto____$3;
              }
            } else {
              return and__4296__auto____$2;
            }
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__9325__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4296__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4296__auto__)) {
            return cljs.core.every_QMARK_(function(and__4296__auto__) {
              return function(p1__9119_SHARP_) {
                var and__4296__auto____$1 = function() {
                  var G__9286 = p1__9119_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9286) : p1.call(null, G__9286);
                }();
                if (cljs.core.truth_(and__4296__auto____$1)) {
                  var and__4296__auto____$2 = function() {
                    var G__9288 = p1__9119_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9288) : p2.call(null, G__9288);
                  }();
                  if (cljs.core.truth_(and__4296__auto____$2)) {
                    var G__9289 = p1__9119_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9289) : p3.call(null, G__9289);
                  } else {
                    return and__4296__auto____$2;
                  }
                } else {
                  return and__4296__auto____$1;
                }
              };
            }(and__4296__auto__), args);
          } else {
            return and__4296__auto__;
          }
        }());
      };
      var G__9325 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9326__i = 0, G__9326__a = new Array(arguments.length - 3);
          while (G__9326__i < G__9326__a.length) {
            G__9326__a[G__9326__i] = arguments[G__9326__i + 3];
            ++G__9326__i;
          }
          args = new cljs.core.IndexedSeq(G__9326__a, 0);
        }
        return G__9325__delegate.call(this, x, y, z, args);
      };
      G__9325.cljs$lang$maxFixedArity = 3;
      G__9325.cljs$lang$applyTo = function(arglist__9327) {
        var x = cljs.core.first(arglist__9327);
        arglist__9327 = cljs.core.next(arglist__9327);
        var y = cljs.core.first(arglist__9327);
        arglist__9327 = cljs.core.next(arglist__9327);
        var z = cljs.core.first(arglist__9327);
        var args = cljs.core.rest(arglist__9327);
        return G__9325__delegate(x, y, z, args);
      };
      G__9325.cljs$core$IFn$_invoke$arity$variadic = G__9325__delegate;
      return G__9325;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__9328 = null;
          if (arguments.length > 3) {
            var G__9329__i = 0, G__9329__a = new Array(arguments.length - 3);
            while (G__9329__i < G__9329__a.length) {
              G__9329__a[G__9329__i] = arguments[G__9329__i + 3];
              ++G__9329__i;
            }
            G__9328 = new cljs.core.IndexedSeq(G__9329__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9328);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__9120_SHARP_) {
            var G__9305 = x;
            return p1__9120_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9120_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9305) : p1__9120_SHARP_.call(null, G__9305);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__9121_SHARP_) {
            var and__4296__auto__ = function() {
              var G__9307 = x;
              return p1__9121_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9121_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9307) : p1__9121_SHARP_.call(null, G__9307);
            }();
            if (cljs.core.truth_(and__4296__auto__)) {
              var G__9308 = y;
              return p1__9121_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9121_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9308) : p1__9121_SHARP_.call(null, G__9308);
            } else {
              return and__4296__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__9122_SHARP_) {
            var and__4296__auto__ = function() {
              var G__9310 = x;
              return p1__9122_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9122_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9310) : p1__9122_SHARP_.call(null, G__9310);
            }();
            if (cljs.core.truth_(and__4296__auto__)) {
              var and__4296__auto____$1 = function() {
                var G__9312 = y;
                return p1__9122_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9122_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9312) : p1__9122_SHARP_.call(null, G__9312);
              }();
              if (cljs.core.truth_(and__4296__auto____$1)) {
                var G__9313 = z;
                return p1__9122_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9122_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9313) : p1__9122_SHARP_.call(null, G__9313);
              } else {
                return and__4296__auto____$1;
              }
            } else {
              return and__4296__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__9330__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4296__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4296__auto__)) {
              return cljs.core.every_QMARK_(function(and__4296__auto__, ps__$1) {
                return function(p1__9123_SHARP_) {
                  return cljs.core.every_QMARK_(p1__9123_SHARP_, args);
                };
              }(and__4296__auto__, ps__$1), ps__$1);
            } else {
              return and__4296__auto__;
            }
          }());
        };
        var G__9330 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9331__i = 0, G__9331__a = new Array(arguments.length - 3);
            while (G__9331__i < G__9331__a.length) {
              G__9331__a[G__9331__i] = arguments[G__9331__i + 3];
              ++G__9331__i;
            }
            args = new cljs.core.IndexedSeq(G__9331__a, 0);
          }
          return G__9330__delegate.call(this, x, y, z, args);
        };
        G__9330.cljs$lang$maxFixedArity = 3;
        G__9330.cljs$lang$applyTo = function(arglist__9332) {
          var x = cljs.core.first(arglist__9332);
          arglist__9332 = cljs.core.next(arglist__9332);
          var y = cljs.core.first(arglist__9332);
          arglist__9332 = cljs.core.next(arglist__9332);
          var z = cljs.core.first(arglist__9332);
          var args = cljs.core.rest(arglist__9332);
          return G__9330__delegate(x, y, z, args);
        };
        G__9330.cljs$core$IFn$_invoke$arity$variadic = G__9330__delegate;
        return G__9330;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__9333 = null;
            if (arguments.length > 3) {
              var G__9334__i = 0, G__9334__a = new Array(arguments.length - 3);
              while (G__9334__i < G__9334__a.length) {
                G__9334__a[G__9334__i] = arguments[G__9334__i + 3];
                ++G__9334__i;
              }
              G__9333 = new cljs.core.IndexedSeq(G__9334__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9333);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq9124) {
  var G__9125 = cljs.core.first(seq9124);
  var seq9124__$1 = cljs.core.next(seq9124);
  var G__9126 = cljs.core.first(seq9124__$1);
  var seq9124__$2 = cljs.core.next(seq9124__$1);
  var G__9127 = cljs.core.first(seq9124__$2);
  var seq9124__$3 = cljs.core.next(seq9124__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__9125, G__9126, G__9127, seq9124__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn() {
  var G__9346 = arguments.length;
  switch(G__9346) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      var G__9362 = x;
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9362) : p.call(null, G__9362);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4308__auto__ = function() {
        var G__9364 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9364) : p.call(null, G__9364);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var G__9365 = y;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9365) : p.call(null, G__9365);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4308__auto__ = function() {
        var G__9367 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9367) : p.call(null, G__9367);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__9369 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9369) : p.call(null, G__9369);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var G__9370 = z;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9370) : p.call(null, G__9370);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__9532__delegate = function(x, y, z, args) {
        var or__4308__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__9532 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9533__i = 0, G__9533__a = new Array(arguments.length - 3);
          while (G__9533__i < G__9533__a.length) {
            G__9533__a[G__9533__i] = arguments[G__9533__i + 3];
            ++G__9533__i;
          }
          args = new cljs.core.IndexedSeq(G__9533__a, 0);
        }
        return G__9532__delegate.call(this, x, y, z, args);
      };
      G__9532.cljs$lang$maxFixedArity = 3;
      G__9532.cljs$lang$applyTo = function(arglist__9534) {
        var x = cljs.core.first(arglist__9534);
        arglist__9534 = cljs.core.next(arglist__9534);
        var y = cljs.core.first(arglist__9534);
        arglist__9534 = cljs.core.next(arglist__9534);
        var z = cljs.core.first(arglist__9534);
        var args = cljs.core.rest(arglist__9534);
        return G__9532__delegate(x, y, z, args);
      };
      G__9532.cljs$core$IFn$_invoke$arity$variadic = G__9532__delegate;
      return G__9532;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__9535 = null;
          if (arguments.length > 3) {
            var G__9536__i = 0, G__9536__a = new Array(arguments.length - 3);
            while (G__9536__i < G__9536__a.length) {
              G__9536__a[G__9536__i] = arguments[G__9536__i + 3];
              ++G__9536__i;
            }
            G__9535 = new cljs.core.IndexedSeq(G__9536__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9535);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4308__auto__ = function() {
        var G__9402 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9402) : p1.call(null, G__9402);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var G__9403 = x;
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9403) : p2.call(null, G__9403);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4308__auto__ = function() {
        var G__9405 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9405) : p1.call(null, G__9405);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__9407 = y;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9407) : p1.call(null, G__9407);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var or__4308__auto____$2 = function() {
            var G__9409 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9409) : p2.call(null, G__9409);
          }();
          if (cljs.core.truth_(or__4308__auto____$2)) {
            return or__4308__auto____$2;
          } else {
            var G__9410 = y;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9410) : p2.call(null, G__9410);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4308__auto__ = function() {
        var G__9412 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9412) : p1.call(null, G__9412);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__9414 = y;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9414) : p1.call(null, G__9414);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var or__4308__auto____$2 = function() {
            var G__9416 = z;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9416) : p1.call(null, G__9416);
          }();
          if (cljs.core.truth_(or__4308__auto____$2)) {
            return or__4308__auto____$2;
          } else {
            var or__4308__auto____$3 = function() {
              var G__9418 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9418) : p2.call(null, G__9418);
            }();
            if (cljs.core.truth_(or__4308__auto____$3)) {
              return or__4308__auto____$3;
            } else {
              var or__4308__auto____$4 = function() {
                var G__9420 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9420) : p2.call(null, G__9420);
              }();
              if (cljs.core.truth_(or__4308__auto____$4)) {
                return or__4308__auto____$4;
              } else {
                var G__9421 = z;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9421) : p2.call(null, G__9421);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__9537__delegate = function(x, y, z, args) {
        var or__4308__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return cljs.core.some(function(or__4308__auto__) {
            return function(p1__9335_SHARP_) {
              var or__4308__auto____$1 = function() {
                var G__9423 = p1__9335_SHARP_;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9423) : p1.call(null, G__9423);
              }();
              if (cljs.core.truth_(or__4308__auto____$1)) {
                return or__4308__auto____$1;
              } else {
                var G__9424 = p1__9335_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9424) : p2.call(null, G__9424);
              }
            };
          }(or__4308__auto__), args);
        }
      };
      var G__9537 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9538__i = 0, G__9538__a = new Array(arguments.length - 3);
          while (G__9538__i < G__9538__a.length) {
            G__9538__a[G__9538__i] = arguments[G__9538__i + 3];
            ++G__9538__i;
          }
          args = new cljs.core.IndexedSeq(G__9538__a, 0);
        }
        return G__9537__delegate.call(this, x, y, z, args);
      };
      G__9537.cljs$lang$maxFixedArity = 3;
      G__9537.cljs$lang$applyTo = function(arglist__9539) {
        var x = cljs.core.first(arglist__9539);
        arglist__9539 = cljs.core.next(arglist__9539);
        var y = cljs.core.first(arglist__9539);
        arglist__9539 = cljs.core.next(arglist__9539);
        var z = cljs.core.first(arglist__9539);
        var args = cljs.core.rest(arglist__9539);
        return G__9537__delegate(x, y, z, args);
      };
      G__9537.cljs$core$IFn$_invoke$arity$variadic = G__9537__delegate;
      return G__9537;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__9540 = null;
          if (arguments.length > 3) {
            var G__9541__i = 0, G__9541__a = new Array(arguments.length - 3);
            while (G__9541__i < G__9541__a.length) {
              G__9541__a[G__9541__i] = arguments[G__9541__i + 3];
              ++G__9541__i;
            }
            G__9540 = new cljs.core.IndexedSeq(G__9541__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9540);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4308__auto__ = function() {
        var G__9470 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9470) : p1.call(null, G__9470);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__9472 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9472) : p2.call(null, G__9472);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var G__9473 = x;
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9473) : p3.call(null, G__9473);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4308__auto__ = function() {
        var G__9475 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9475) : p1.call(null, G__9475);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__9477 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9477) : p2.call(null, G__9477);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var or__4308__auto____$2 = function() {
            var G__9479 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9479) : p3.call(null, G__9479);
          }();
          if (cljs.core.truth_(or__4308__auto____$2)) {
            return or__4308__auto____$2;
          } else {
            var or__4308__auto____$3 = function() {
              var G__9481 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9481) : p1.call(null, G__9481);
            }();
            if (cljs.core.truth_(or__4308__auto____$3)) {
              return or__4308__auto____$3;
            } else {
              var or__4308__auto____$4 = function() {
                var G__9483 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9483) : p2.call(null, G__9483);
              }();
              if (cljs.core.truth_(or__4308__auto____$4)) {
                return or__4308__auto____$4;
              } else {
                var G__9484 = y;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9484) : p3.call(null, G__9484);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4308__auto__ = function() {
        var G__9486 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9486) : p1.call(null, G__9486);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__9488 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9488) : p2.call(null, G__9488);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var or__4308__auto____$2 = function() {
            var G__9490 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9490) : p3.call(null, G__9490);
          }();
          if (cljs.core.truth_(or__4308__auto____$2)) {
            return or__4308__auto____$2;
          } else {
            var or__4308__auto____$3 = function() {
              var G__9492 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9492) : p1.call(null, G__9492);
            }();
            if (cljs.core.truth_(or__4308__auto____$3)) {
              return or__4308__auto____$3;
            } else {
              var or__4308__auto____$4 = function() {
                var G__9494 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9494) : p2.call(null, G__9494);
              }();
              if (cljs.core.truth_(or__4308__auto____$4)) {
                return or__4308__auto____$4;
              } else {
                var or__4308__auto____$5 = function() {
                  var G__9496 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9496) : p3.call(null, G__9496);
                }();
                if (cljs.core.truth_(or__4308__auto____$5)) {
                  return or__4308__auto____$5;
                } else {
                  var or__4308__auto____$6 = function() {
                    var G__9498 = z;
                    return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9498) : p1.call(null, G__9498);
                  }();
                  if (cljs.core.truth_(or__4308__auto____$6)) {
                    return or__4308__auto____$6;
                  } else {
                    var or__4308__auto____$7 = function() {
                      var G__9500 = z;
                      return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9500) : p2.call(null, G__9500);
                    }();
                    if (cljs.core.truth_(or__4308__auto____$7)) {
                      return or__4308__auto____$7;
                    } else {
                      var G__9501 = z;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9501) : p3.call(null, G__9501);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__9542__delegate = function(x, y, z, args) {
        var or__4308__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return cljs.core.some(function(or__4308__auto__) {
            return function(p1__9336_SHARP_) {
              var or__4308__auto____$1 = function() {
                var G__9503 = p1__9336_SHARP_;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9503) : p1.call(null, G__9503);
              }();
              if (cljs.core.truth_(or__4308__auto____$1)) {
                return or__4308__auto____$1;
              } else {
                var or__4308__auto____$2 = function() {
                  var G__9505 = p1__9336_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9505) : p2.call(null, G__9505);
                }();
                if (cljs.core.truth_(or__4308__auto____$2)) {
                  return or__4308__auto____$2;
                } else {
                  var G__9506 = p1__9336_SHARP_;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9506) : p3.call(null, G__9506);
                }
              }
            };
          }(or__4308__auto__), args);
        }
      };
      var G__9542 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9543__i = 0, G__9543__a = new Array(arguments.length - 3);
          while (G__9543__i < G__9543__a.length) {
            G__9543__a[G__9543__i] = arguments[G__9543__i + 3];
            ++G__9543__i;
          }
          args = new cljs.core.IndexedSeq(G__9543__a, 0);
        }
        return G__9542__delegate.call(this, x, y, z, args);
      };
      G__9542.cljs$lang$maxFixedArity = 3;
      G__9542.cljs$lang$applyTo = function(arglist__9544) {
        var x = cljs.core.first(arglist__9544);
        arglist__9544 = cljs.core.next(arglist__9544);
        var y = cljs.core.first(arglist__9544);
        arglist__9544 = cljs.core.next(arglist__9544);
        var z = cljs.core.first(arglist__9544);
        var args = cljs.core.rest(arglist__9544);
        return G__9542__delegate(x, y, z, args);
      };
      G__9542.cljs$core$IFn$_invoke$arity$variadic = G__9542__delegate;
      return G__9542;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__9545 = null;
          if (arguments.length > 3) {
            var G__9546__i = 0, G__9546__a = new Array(arguments.length - 3);
            while (G__9546__i < G__9546__a.length) {
              G__9546__a[G__9546__i] = arguments[G__9546__i + 3];
              ++G__9546__i;
            }
            G__9545 = new cljs.core.IndexedSeq(G__9546__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9545);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__9337_SHARP_) {
            var G__9522 = x;
            return p1__9337_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9337_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9522) : p1__9337_SHARP_.call(null, G__9522);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__9338_SHARP_) {
            var or__4308__auto__ = function() {
              var G__9524 = x;
              return p1__9338_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9338_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9524) : p1__9338_SHARP_.call(null, G__9524);
            }();
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              var G__9525 = y;
              return p1__9338_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9338_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9525) : p1__9338_SHARP_.call(null, G__9525);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__9339_SHARP_) {
            var or__4308__auto__ = function() {
              var G__9527 = x;
              return p1__9339_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9339_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9527) : p1__9339_SHARP_.call(null, G__9527);
            }();
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              var or__4308__auto____$1 = function() {
                var G__9529 = y;
                return p1__9339_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9339_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9529) : p1__9339_SHARP_.call(null, G__9529);
              }();
              if (cljs.core.truth_(or__4308__auto____$1)) {
                return or__4308__auto____$1;
              } else {
                var G__9530 = z;
                return p1__9339_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9339_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9530) : p1__9339_SHARP_.call(null, G__9530);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__9547__delegate = function(x, y, z, args) {
          var or__4308__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return cljs.core.some(function(or__4308__auto__, ps__$1) {
              return function(p1__9340_SHARP_) {
                return cljs.core.some(p1__9340_SHARP_, args);
              };
            }(or__4308__auto__, ps__$1), ps__$1);
          }
        };
        var G__9547 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9548__i = 0, G__9548__a = new Array(arguments.length - 3);
            while (G__9548__i < G__9548__a.length) {
              G__9548__a[G__9548__i] = arguments[G__9548__i + 3];
              ++G__9548__i;
            }
            args = new cljs.core.IndexedSeq(G__9548__a, 0);
          }
          return G__9547__delegate.call(this, x, y, z, args);
        };
        G__9547.cljs$lang$maxFixedArity = 3;
        G__9547.cljs$lang$applyTo = function(arglist__9549) {
          var x = cljs.core.first(arglist__9549);
          arglist__9549 = cljs.core.next(arglist__9549);
          var y = cljs.core.first(arglist__9549);
          arglist__9549 = cljs.core.next(arglist__9549);
          var z = cljs.core.first(arglist__9549);
          var args = cljs.core.rest(arglist__9549);
          return G__9547__delegate(x, y, z, args);
        };
        G__9547.cljs$core$IFn$_invoke$arity$variadic = G__9547__delegate;
        return G__9547;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__9550 = null;
            if (arguments.length > 3) {
              var G__9551__i = 0, G__9551__a = new Array(arguments.length - 3);
              while (G__9551__i < G__9551__a.length) {
                G__9551__a[G__9551__i] = arguments[G__9551__i + 3];
                ++G__9551__i;
              }
              G__9550 = new cljs.core.IndexedSeq(G__9551__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9550);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq9341) {
  var G__9342 = cljs.core.first(seq9341);
  var seq9341__$1 = cljs.core.next(seq9341);
  var G__9343 = cljs.core.first(seq9341__$1);
  var seq9341__$2 = cljs.core.next(seq9341__$1);
  var G__9344 = cljs.core.first(seq9341__$2);
  var seq9341__$3 = cljs.core.next(seq9341__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__9342, G__9343, G__9344, seq9341__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map() {
  var G__9559 = arguments.length;
  switch(G__9559) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5359__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__9575 = null;
      var G__9575__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__9575__1 = function(result) {
        var G__9560 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9560) : rf.call(null, G__9560);
      };
      var G__9575__2 = function(result, input) {
        var G__9561 = result;
        var G__9562 = function() {
          var G__9563 = input;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9563) : f.call(null, G__9563);
        }();
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9561, G__9562) : rf.call(null, G__9561, G__9562);
      };
      var G__9575__3 = function() {
        var G__9576__delegate = function(result, input, inputs) {
          var G__9564 = result;
          var G__9565 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9564, G__9565) : rf.call(null, G__9564, G__9565);
        };
        var G__9576 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__9577__i = 0, G__9577__a = new Array(arguments.length - 2);
            while (G__9577__i < G__9577__a.length) {
              G__9577__a[G__9577__i] = arguments[G__9577__i + 2];
              ++G__9577__i;
            }
            inputs = new cljs.core.IndexedSeq(G__9577__a, 0);
          }
          return G__9576__delegate.call(this, result, input, inputs);
        };
        G__9576.cljs$lang$maxFixedArity = 2;
        G__9576.cljs$lang$applyTo = function(arglist__9578) {
          var result = cljs.core.first(arglist__9578);
          arglist__9578 = cljs.core.next(arglist__9578);
          var input = cljs.core.first(arglist__9578);
          var inputs = cljs.core.rest(arglist__9578);
          return G__9576__delegate(result, input, inputs);
        };
        G__9576.cljs$core$IFn$_invoke$arity$variadic = G__9576__delegate;
        return G__9576;
      }();
      G__9575 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__9575__0.call(this);
          case 1:
            return G__9575__1.call(this, result);
          case 2:
            return G__9575__2.call(this, result, input);
          default:
            var G__9579 = null;
            if (arguments.length > 2) {
              var G__9580__i = 0, G__9580__a = new Array(arguments.length - 2);
              while (G__9580__i < G__9580__a.length) {
                G__9580__a[G__9580__i] = arguments[G__9580__i + 2];
                ++G__9580__i;
              }
              G__9579 = new cljs.core.IndexedSeq(G__9580__a, 0);
            }
            return G__9575__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__9579);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9575.cljs$lang$maxFixedArity = 2;
      G__9575.cljs$lang$applyTo = G__9575__3.cljs$lang$applyTo;
      G__9575.cljs$core$IFn$_invoke$arity$0 = G__9575__0;
      G__9575.cljs$core$IFn$_invoke$arity$1 = G__9575__1;
      G__9575.cljs$core$IFn$_invoke$arity$2 = G__9575__2;
      G__9575.cljs$core$IFn$_invoke$arity$variadic = G__9575__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__9575;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5193__auto___9581 = size;
        var i_9582 = 0;
        while (true) {
          if (i_9582 < n__5193__auto___9581) {
            cljs.core.chunk_append(b, function() {
              var G__9566 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9582);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9566) : f.call(null, G__9566);
            }());
            var G__9583 = i_9582 + 1;
            i_9582 = G__9583;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__9567 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9567) : f.call(null, G__9567);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__9568 = cljs.core.first(s1);
        var G__9569 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9568, G__9569) : f.call(null, G__9568, G__9569);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__9570 = cljs.core.first(s1);
        var G__9571 = cljs.core.first(s2);
        var G__9572 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9570, G__9571, G__9572) : f.call(null, G__9570, G__9571, G__9572);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__9552_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__9552_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq9553) {
  var G__9554 = cljs.core.first(seq9553);
  var seq9553__$1 = cljs.core.next(seq9553);
  var G__9555 = cljs.core.first(seq9553__$1);
  var seq9553__$2 = cljs.core.next(seq9553__$1);
  var G__9556 = cljs.core.first(seq9553__$2);
  var seq9553__$3 = cljs.core.next(seq9553__$2);
  var G__9557 = cljs.core.first(seq9553__$3);
  var seq9553__$4 = cljs.core.next(seq9553__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__9554, G__9555, G__9556, G__9557, seq9553__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take() {
  var G__9585 = arguments.length;
  switch(G__9585) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__9590 = null;
        var G__9590__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9590__1 = function(result) {
          var G__9586 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9586) : rf.call(null, G__9586);
        };
        var G__9590__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? function() {
            var G__9587 = result;
            var G__9588 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9587, G__9588) : rf.call(null, G__9587, G__9588);
          }() : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__9590 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9590__0.call(this);
            case 1:
              return G__9590__1.call(this, result);
            case 2:
              return G__9590__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9590.cljs$core$IFn$_invoke$arity$0 = G__9590__0;
        G__9590.cljs$core$IFn$_invoke$arity$1 = G__9590__1;
        G__9590.cljs$core$IFn$_invoke$arity$2 = G__9590__2;
        return G__9590;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4422__auto__ = cljs.core.seq(coll);
      if (temp__4422__auto__) {
        var s = temp__4422__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop() {
  var G__9592 = arguments.length;
  switch(G__9592) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__9597 = null;
        var G__9597__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9597__1 = function(result) {
          var G__9593 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9593) : rf.call(null, G__9593);
        };
        var G__9597__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            var G__9594 = result;
            var G__9595 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9594, G__9595) : rf.call(null, G__9594, G__9595);
          }
        };
        G__9597 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9597__0.call(this);
            case 1:
              return G__9597__1.call(this, result);
            case 2:
              return G__9597__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9597.cljs$core$IFn$_invoke$arity$0 = G__9597__0;
        G__9597.cljs$core$IFn$_invoke$arity$1 = G__9597__1;
        G__9597.cljs$core$IFn$_invoke$arity$2 = G__9597__2;
        return G__9597;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__9598 = n__$1 - 1;
        var G__9599 = cljs.core.rest(s);
        n__$1 = G__9598;
        coll__$1 = G__9599;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last() {
  var G__9601 = arguments.length;
  switch(G__9601) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__9603 = cljs.core.next(s);
      var G__9604 = cljs.core.next(lead);
      s = G__9603;
      lead = G__9604;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while() {
  var G__9606 = arguments.length;
  switch(G__9606) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__9614 = null;
        var G__9614__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9614__1 = function(result) {
          var G__9607 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9607) : rf.call(null, G__9607);
        };
        var G__9614__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4296__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4296__auto__)) {
              var G__9608 = input;
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9608) : pred.call(null, G__9608);
            } else {
              return and__4296__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            var G__9609 = result;
            var G__9610 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9609, G__9610) : rf.call(null, G__9609, G__9610);
          }
        };
        G__9614 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9614__0.call(this);
            case 1:
              return G__9614__1.call(this, result);
            case 2:
              return G__9614__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9614.cljs$core$IFn$_invoke$arity$0 = G__9614__0;
        G__9614.cljs$core$IFn$_invoke$arity$1 = G__9614__1;
        G__9614.cljs$core$IFn$_invoke$arity$2 = G__9614__2;
        return G__9614;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4296__auto__ = s;
        if (and__4296__auto__) {
          var G__9612 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__9612) : pred__$1.call(null, G__9612);
        } else {
          return and__4296__auto__;
        }
      }())) {
        var G__9615 = pred__$1;
        var G__9616 = cljs.core.rest(s);
        pred__$1 = G__9615;
        coll__$1 = G__9616;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat() {
  var G__9619 = arguments.length;
  switch(G__9619) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly() {
  var G__9622 = arguments.length;
  switch(G__9622) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, function() {
      var G__9627 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9627) : f.call(null, G__9627);
    }());
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave() {
  var G__9632 = arguments.length;
  switch(G__9632) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq9628) {
  var G__9629 = cljs.core.first(seq9628);
  var seq9628__$1 = cljs.core.next(seq9628);
  var G__9630 = cljs.core.first(seq9628__$1);
  var seq9628__$2 = cljs.core.next(seq9628__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__9629, G__9630, seq9628__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose() {
  var G__9635 = arguments.length;
  switch(G__9635) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__9644 = null;
        var G__9644__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9644__1 = function(result) {
          var G__9636 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9636) : rf.call(null, G__9636);
        };
        var G__9644__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = function() {
              var G__9637 = result;
              var G__9638 = sep;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9637, G__9638) : rf.call(null, G__9637, G__9638);
            }();
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              var G__9639 = sepr;
              var G__9640 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9639, G__9640) : rf.call(null, G__9639, G__9640);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            var G__9641 = result;
            var G__9642 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9641, G__9642) : rf.call(null, G__9641, G__9642);
          }
        };
        G__9644 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9644__0.call(this);
            case 1:
              return G__9644__1.call(this, result);
            case 2:
              return G__9644__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9644.cljs$core$IFn$_invoke$arity$0 = G__9644__0;
        G__9644.cljs$core$IFn$_invoke$arity$1 = G__9644__1;
        G__9644.cljs$core$IFn$_invoke$arity$2 = G__9644__2;
        return G__9644;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4420__auto__ = cljs.core.seq(coll);
      if (temp__4420__auto__) {
        var coll__$1 = temp__4420__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat() {
  var G__9656 = arguments.length;
  switch(G__9656) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq9653) {
  var G__9654 = cljs.core.first(seq9653);
  var seq9653__$1 = cljs.core.next(seq9653);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__9654, seq9653__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter() {
  var G__9659 = arguments.length;
  switch(G__9659) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__9667 = null;
      var G__9667__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__9667__1 = function(result) {
        var G__9660 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9660) : rf.call(null, G__9660);
      };
      var G__9667__2 = function(result, input) {
        if (cljs.core.truth_(function() {
          var G__9661 = input;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9661) : pred.call(null, G__9661);
        }())) {
          var G__9662 = result;
          var G__9663 = input;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9662, G__9663) : rf.call(null, G__9662, G__9663);
        } else {
          return result;
        }
      };
      G__9667 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__9667__0.call(this);
          case 1:
            return G__9667__1.call(this, result);
          case 2:
            return G__9667__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9667.cljs$core$IFn$_invoke$arity$0 = G__9667__0;
      G__9667.cljs$core$IFn$_invoke$arity$1 = G__9667__1;
      G__9667.cljs$core$IFn$_invoke$arity$2 = G__9667__2;
      return G__9667;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5193__auto___9668 = size;
        var i_9669 = 0;
        while (true) {
          if (i_9669 < n__5193__auto___9668) {
            if (cljs.core.truth_(function() {
              var G__9664 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9669);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9664) : pred.call(null, G__9664);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9669));
            } else {
            }
            var G__9670 = i_9669 + 1;
            i_9669 = G__9670;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(function() {
          var G__9665 = f;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9665) : pred.call(null, G__9665);
        }())) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove() {
  var G__9672 = arguments.length;
  switch(G__9672) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__9680 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__9680) : branch_QMARK_.call(null, G__9680);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([function() {
        var G__9681 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__9681) : children.call(null, G__9681);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__9682_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__9682_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into() {
  var G__9684 = arguments.length;
  switch(G__9684) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__9685 = to;
      if (G__9685) {
        var bit__4975__auto__ = G__9685.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4975__auto__ || G__9685.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (function() {
    var G__9686 = to;
    if (G__9686) {
      var bit__4975__auto__ = G__9686.cljs$lang$protocol_mask$partition1$ & 4;
      if (bit__4975__auto__ || G__9686.cljs$core$IEditableCollection$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv() {
  var G__9694 = arguments.length;
  switch(G__9694) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5359__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
      var G__9695 = o;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9695) : f.call(null, G__9695);
    }());
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq9688) {
  var G__9689 = cljs.core.first(seq9688);
  var seq9688__$1 = cljs.core.next(seq9688);
  var G__9690 = cljs.core.first(seq9688__$1);
  var seq9688__$2 = cljs.core.next(seq9688__$1);
  var G__9691 = cljs.core.first(seq9688__$2);
  var seq9688__$3 = cljs.core.next(seq9688__$2);
  var G__9692 = cljs.core.first(seq9688__$3);
  var seq9688__$4 = cljs.core.next(seq9688__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__9689, G__9690, G__9691, G__9692, seq9688__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__9698 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9698) : pred.call(null, G__9698);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition() {
  var G__9700 = arguments.length;
  switch(G__9700) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in() {
  var G__9703 = arguments.length;
  switch(G__9703) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!function() {
        var G__9704 = m__$1;
        if (G__9704) {
          var bit__4982__auto__ = G__9704.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4982__auto__ || G__9704.cljs$core$ILookup$) {
            return true;
          } else {
            if (!G__9704.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__9704);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__9704);
        }
      }()) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__9706 = sentinel;
          var G__9707 = m__$2;
          var G__9708 = cljs.core.next(ks__$1);
          sentinel = G__9706;
          m__$1 = G__9707;
          ks__$1 = G__9708;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__9709, v) {
  var vec__9714 = p__9709;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9714, 0, null);
  var ks = cljs.core.nthnext(vec__9714, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in() {
  var G__9723 = arguments.length;
  switch(G__9723) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5359__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__9724, f) {
  var vec__9725 = p__9724;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9725, 0, null);
  var ks = cljs.core.nthnext(vec__9725, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9726 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9726) : f.call(null, G__9726);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__9727, f, a) {
  var vec__9728 = p__9727;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9728, 0, null);
  var ks = cljs.core.nthnext(vec__9728, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9729 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__9730 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9729, G__9730) : f.call(null, G__9729, G__9730);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__9731, f, a, b) {
  var vec__9732 = p__9731;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9732, 0, null);
  var ks = cljs.core.nthnext(vec__9732, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9733 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__9734 = a;
      var G__9735 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9733, G__9734, G__9735) : f.call(null, G__9733, G__9734, G__9735);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__9736, f, a, b, c) {
  var vec__9737 = p__9736;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9737, 0, null);
  var ks = cljs.core.nthnext(vec__9737, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9738 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__9739 = a;
      var G__9740 = b;
      var G__9741 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9738, G__9739, G__9740, G__9741) : f.call(null, G__9738, G__9739, G__9740, G__9741);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__9742, f, a, b, c, args) {
  var vec__9743 = p__9742;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9743, 0, null);
  var ks = cljs.core.nthnext(vec__9743, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq9715) {
  var G__9716 = cljs.core.first(seq9715);
  var seq9715__$1 = cljs.core.next(seq9715);
  var G__9717 = cljs.core.first(seq9715__$1);
  var seq9715__$2 = cljs.core.next(seq9715__$1);
  var G__9718 = cljs.core.first(seq9715__$2);
  var seq9715__$3 = cljs.core.next(seq9715__$2);
  var G__9719 = cljs.core.first(seq9715__$3);
  var seq9715__$4 = cljs.core.next(seq9715__$3);
  var G__9720 = cljs.core.first(seq9715__$4);
  var seq9715__$5 = cljs.core.next(seq9715__$4);
  var G__9721 = cljs.core.first(seq9715__$5);
  var seq9715__$6 = cljs.core.next(seq9715__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__9716, G__9717, G__9718, G__9719, G__9720, G__9721, seq9715__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update() {
  var G__9753 = arguments.length;
  switch(G__9753) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5359__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__9754 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9754) : f.call(null, G__9754);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__9755 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__9756 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9755, G__9756) : f.call(null, G__9755, G__9756);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__9757 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__9758 = x;
    var G__9759 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9757, G__9758, G__9759) : f.call(null, G__9757, G__9758, G__9759);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__9760 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__9761 = x;
    var G__9762 = y;
    var G__9763 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9760, G__9761, G__9762, G__9763) : f.call(null, G__9760, G__9761, G__9762, G__9763);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq9745) {
  var G__9746 = cljs.core.first(seq9745);
  var seq9745__$1 = cljs.core.next(seq9745);
  var G__9747 = cljs.core.first(seq9745__$1);
  var seq9745__$2 = cljs.core.next(seq9745__$1);
  var G__9748 = cljs.core.first(seq9745__$2);
  var seq9745__$3 = cljs.core.next(seq9745__$2);
  var G__9749 = cljs.core.first(seq9745__$3);
  var seq9745__$4 = cljs.core.next(seq9745__$3);
  var G__9750 = cljs.core.first(seq9745__$4);
  var seq9745__$5 = cljs.core.next(seq9745__$4);
  var G__9751 = cljs.core.first(seq9745__$5);
  var seq9745__$6 = cljs.core.next(seq9745__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__9746, G__9747, G__9748, G__9749, G__9750, G__9751, seq9745__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__9765 = ll - 5;
      var G__9766 = r;
      ll = G__9765;
      ret = G__9766;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__9771 = cljs.core.pv_aget(node, 0);
      var G__9772 = level - 5;
      node = G__9771;
      level = G__9772;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__9773 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__9774 = level - 5;
        node = G__9773;
        level = G__9774;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__9784 = init__$2;
              var G__9785 = j + i;
              var G__9786 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9784, G__9785, G__9786) : f.call(null, G__9784, G__9785, G__9786);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__9797 = j + 1;
              var G__9798 = init__$3;
              j = G__9797;
              init__$2 = G__9798;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9787 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9787) : cljs.core.deref.call(null, G__9787);
      } else {
        var G__9799 = i + len;
        var G__9800 = init__$2;
        i = G__9799;
        init__$1 = G__9800;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__9788 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__9788) : cljs.core.tv_editable_root.call(null, G__9788);
  }(), function() {
    var G__9789 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__9789) : cljs.core.tv_editable_tail.call(null, G__9789);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__9790 = init__$2;
              var G__9791 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9790, G__9791) : f.call(null, G__9790, G__9791);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__9801 = j + 1;
              var G__9802 = init__$3;
              j = G__9801;
              init__$2 = G__9802;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9792 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9792) : cljs.core.deref.call(null, G__9792);
      } else {
        var G__9803 = i + len;
        var G__9804 = init__$2;
        i = G__9803;
        init__$1 = G__9804;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__9793 = coll__$1;
      var G__9794 = cljs.core.first_array_for_longvec(coll__$1);
      var G__9795 = 0;
      var G__9796 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9793, G__9794, G__9795, G__9796) : cljs.core.chunked_seq.call(null, G__9793, G__9794, G__9795, G__9796);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5193__auto___9805 = len;
    var i_9806 = 0;
    while (true) {
      if (i_9806 < n__5193__auto___9805) {
        new_tail[i_9806] = self__.tail[i_9806];
        var G__9807 = i_9806 + 1;
        i_9806 = G__9807;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9808 = null;
  var G__9808__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__9808__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__9808 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9808__2.call(this, self__, k);
      case 3:
        return G__9808__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9808.cljs$core$IFn$_invoke$arity$2 = G__9808__2;
  G__9808.cljs$core$IFn$_invoke$arity$3 = G__9808__3;
  return G__9808;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args9783) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9783)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__9809 = i + 1;
        var G__9810 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__9809;
        out = G__9810;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq9811) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9811));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__9812 = self__.vec;
      var G__9813 = self__.node;
      var G__9814 = self__.i;
      var G__9815 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9812, G__9813, G__9814, G__9815) : cljs.core.chunked_seq.call(null, G__9812, G__9813, G__9814, G__9815);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__9816 = self__.vec;
    var G__9817 = self__.i + self__.off;
    var G__9818 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9816, G__9817, G__9818) : cljs.core.subvec.call(null, G__9816, G__9817, G__9818);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__9819 = self__.vec;
    var G__9820 = self__.i + self__.off;
    var G__9821 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9819, G__9820, G__9821) : cljs.core.subvec.call(null, G__9819, G__9820, G__9821);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__9822 = self__.vec;
      var G__9823 = self__.node;
      var G__9824 = self__.i;
      var G__9825 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9822, G__9823, G__9824, G__9825) : cljs.core.chunked_seq.call(null, G__9822, G__9823, G__9824, G__9825);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__9826 = self__.vec;
    var G__9827 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__9828 = end;
    var G__9829 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9826, G__9827, G__9828, G__9829) : cljs.core.chunked_seq.call(null, G__9826, G__9827, G__9828, G__9829);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__9830 = self__.vec;
  var G__9831 = self__.node;
  var G__9832 = self__.i;
  var G__9833 = self__.off;
  var G__9834 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__9830, G__9831, G__9832, G__9833, G__9834) : cljs.core.chunked_seq.call(null, G__9830, G__9831, G__9832, G__9833, G__9834);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__9835 = self__.vec;
    var G__9836 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__9837 = end;
    var G__9838 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9835, G__9836, G__9837, G__9838) : cljs.core.chunked_seq.call(null, G__9835, G__9836, G__9837, G__9838);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq() {
  var G__9840 = arguments.length;
  switch(G__9840) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__9843 = init__$1;
        var G__9844 = j;
        var G__9845 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9843, G__9844, G__9845) : f.call(null, G__9843, G__9844, G__9845);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9846 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9846) : cljs.core.deref.call(null, G__9846);
      } else {
        var G__9868 = i + 1;
        var G__9869 = j + 1;
        var G__9870 = init__$2;
        i = G__9868;
        j = G__9869;
        init__$1 = G__9870;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__9847 = self__.meta;
  var G__9848 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__9849 = self__.start;
  var G__9850 = function() {
    var x__4620__auto__ = self__.end;
    var y__4621__auto__ = v_pos + 1;
    return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
  }();
  var G__9851 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9847, G__9848, G__9849, G__9850, G__9851) : cljs.core.build_subvec.call(null, G__9847, G__9848, G__9849, G__9850, G__9851);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__9852 = self__.meta;
    var G__9853 = self__.v;
    var G__9854 = self__.start;
    var G__9855 = self__.end - 1;
    var G__9856 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9852, G__9853, G__9854, G__9855, G__9856) : cljs.core.build_subvec.call(null, G__9852, G__9853, G__9854, G__9855, G__9856);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__9858 = meta__$1;
  var G__9859 = self__.v;
  var G__9860 = self__.start;
  var G__9861 = self__.end;
  var G__9862 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9858, G__9859, G__9860, G__9861, G__9862) : cljs.core.build_subvec.call(null, G__9858, G__9859, G__9860, G__9861, G__9862);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__9863 = self__.meta;
  var G__9864 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__9865 = self__.start;
  var G__9866 = self__.end + 1;
  var G__9867 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9863, G__9864, G__9865, G__9866, G__9867) : cljs.core.build_subvec.call(null, G__9863, G__9864, G__9865, G__9866, G__9867);
};
cljs.core.Subvec.prototype.call = function() {
  var G__9871 = null;
  var G__9871__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__9871__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__9871 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9871__2.call(this, self__, k);
      case 3:
        return G__9871__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9871.cljs$core$IFn$_invoke$arity$2 = G__9871__2;
  G__9871.cljs$core$IFn$_invoke$arity$3 = G__9871__3;
  return G__9871;
}();
cljs.core.Subvec.prototype.apply = function(self__, args9842) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9842)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__9872 = meta;
      var G__9873 = v.v;
      var G__9874 = v.start + start;
      var G__9875 = v.start + end;
      var G__9876 = __hash;
      meta = G__9872;
      v = G__9873;
      start = G__9874;
      end = G__9875;
      __hash = G__9876;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec() {
  var G__9878 = arguments.length;
  switch(G__9878) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj9883 = {};
    return obj9883;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__9891 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__9892 = level - 5;
        node = G__9891;
        level = G__9892;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9896 = null;
  var G__9896__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9896__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9896 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9896__2.call(this, self__, k);
      case 3:
        return G__9896__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9896.cljs$core$IFn$_invoke$arity$2 = G__9896__2;
  G__9896.cljs$core$IFn$_invoke$arity$3 = G__9896__3;
  return G__9896;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args9893) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9893)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null)], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4420__auto__ = cljs.core.next(self__.front);
  if (temp__4420__auto__) {
    var f1 = temp__4420__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4420__auto__ = cljs.core.next(self__.front);
    if (temp__4420__auto__) {
      var f1 = temp__4420__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4308__auto__ = self__.front;
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4308__auto__ = self__.rear;
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__9897 = i + incr;
        i = G__9897;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__9898 = i + 1;
      var G__9899 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__9898;
      out = G__9899;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = function() {
    var obj9903 = {};
    return obj9903;
  }();
  var l = ks.length;
  var i_9904 = 0;
  while (true) {
    if (i_9904 < l) {
      var k_9905 = ks[i_9904];
      new_obj[k_9905] = obj[k_9905];
      var G__9906 = i_9904 + 1;
      i_9904 = G__9906;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = function() {
      var G__9910 = k;
      return goog.isString(G__9910);
    }();
    if (cljs.core.truth_(and__4296__auto__)) {
      return !(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4296__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__9911 = init__$1;
        var G__9912 = k;
        var G__9913 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9911, G__9912, G__9913) : f.call(null, G__9911, G__9912, G__9913);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9914 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9914) : cljs.core.deref.call(null, G__9914);
      } else {
        var G__9920 = cljs.core.rest(keys__$1);
        var G__9921 = init__$2;
        keys__$1 = G__9920;
        init__$1 = G__9921;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = function() {
      var G__9916 = k;
      return goog.isString(G__9916);
    }();
    if (cljs.core.truth_(and__4296__auto__)) {
      return !(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4296__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__9917 = k;
    return goog.isString(G__9917);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = function() {
      var G__9919 = k;
      return goog.isString(G__9919);
    }();
    if (cljs.core.truth_(and__4296__auto__)) {
      return !(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4296__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__9907_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9907_SHARP_, self__.strobj[p1__9907_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9922 = null;
  var G__9922__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9922__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9922 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9922__2.call(this, self__, k);
      case 3:
        return G__9922__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9922.cljs$core$IFn$_invoke$arity$2 = G__9922__2;
  G__9922.cljs$core$IFn$_invoke$arity$3 = G__9922__3;
  return G__9922;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args9908) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9908)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj9924 = {};
  return obj9924;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__9925 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9925, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9925, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__9926 = i + 2;
        i = G__9926;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__9927 = i + 2;
        i = G__9927;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__9928 = i + 2;
        i = G__9928;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__9929 = i + 2;
        i = G__9929;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__9930 = i + 2;
        i = G__9930;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__4308__auto__ = function() {
        var G__9934 = k;
        return goog.isString(G__9934);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_9935 = 0;
  while (true) {
    if (i_9935 < l) {
      narr[i_9935] = arr[i_9935];
      var G__9936 = i_9935 + 1;
      i_9935 = G__9936;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9938 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9938) : cljs.core.keys.call(null, G__9938);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9939 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9939) : cljs.core.vals.call(null, G__9939);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9940 = cljs.core.seq(coll);
  var chunk__9941 = null;
  var count__9942 = 0;
  var i__9943 = 0;
  while (true) {
    if (i__9943 < count__9942) {
      var vec__9944 = chunk__9941.cljs$core$IIndexed$_nth$arity$2(null, i__9943);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9944, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9944, 1, null);
      var G__9945_9958 = v;
      var G__9946_9959 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9945_9958, G__9946_9959) : f.call(null, G__9945_9958, G__9946_9959);
      var G__9960 = seq__9940;
      var G__9961 = chunk__9941;
      var G__9962 = count__9942;
      var G__9963 = i__9943 + 1;
      seq__9940 = G__9960;
      chunk__9941 = G__9961;
      count__9942 = G__9962;
      i__9943 = G__9963;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__9940);
      if (temp__4422__auto__) {
        var seq__9940__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9940__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__9940__$1);
          var G__9964 = cljs.core.chunk_rest(seq__9940__$1);
          var G__9965 = c__5093__auto__;
          var G__9966 = cljs.core.count(c__5093__auto__);
          var G__9967 = 0;
          seq__9940 = G__9964;
          chunk__9941 = G__9965;
          count__9942 = G__9966;
          i__9943 = G__9967;
          continue;
        } else {
          var vec__9947 = cljs.core.first(seq__9940__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9947, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9947, 1, null);
          var G__9948_9968 = v;
          var G__9949_9969 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9948_9968, G__9949_9969) : f.call(null, G__9948_9968, G__9949_9969);
          var G__9970 = cljs.core.next(seq__9940__$1);
          var G__9971 = null;
          var G__9972 = 0;
          var G__9973 = 0;
          seq__9940 = G__9970;
          chunk__9941 = G__9971;
          count__9942 = G__9972;
          i__9943 = G__9973;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__9950 = init__$1;
        var G__9951 = self__.arr[i];
        var G__9952 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9950, G__9951, G__9952) : f.call(null, G__9950, G__9951, G__9952);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9953 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9953) : cljs.core.deref.call(null, G__9953);
      } else {
        var G__9974 = i + 2;
        var G__9975 = init__$2;
        i = G__9974;
        init__$1 = G__9975;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__9954 = other;
    if (G__9954) {
      var bit__4975__auto__ = G__9954.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4975__auto__ || G__9954.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__9976 = i + 2;
              i = G__9976;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj9956 = {};
    return obj9956;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__9977 = s + 2;
            var G__9978 = d;
            s = G__9977;
            d = G__9978;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__9979 = s + 2;
            var G__9980 = d + 2;
            s = G__9979;
            d = G__9980;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__9957 = cljs.core.aclone(self__.arr);
        G__9957[idx + 1] = v;
        return G__9957;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9981 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9982 = cljs.core.next(es);
          ret = G__9981;
          es = G__9982;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9983 = null;
  var G__9983__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9983__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9983 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9983__2.call(this, self__, k);
      case 3:
        return G__9983__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9983.cljs$core$IFn$_invoke$arity$2 = G__9983__2;
  G__9983.cljs$core$IFn$_invoke$arity$3 = G__9983__3;
  return G__9983;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args9937) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9937)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_9984 = 0;
    while (true) {
      if (i_9984 < arr__$1.length) {
        var k_9985 = arr__$1[i_9984];
        var v_9986 = arr__$1[i_9984 + 1];
        var idx_9987 = cljs.core.array_index_of(ret, k_9985);
        if (idx_9987 === -1) {
          ret.push(k_9985);
          ret.push(v_9986);
        } else {
        }
        var G__9988 = i_9984 + 2;
        i_9984 = G__9988;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__9989 = o;
      if (G__9989) {
        var bit__4982__auto__ = G__9989.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4982__auto__ || G__9989.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__9989.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9989);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9989);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__9990 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9990) : cljs.core.key.call(null, G__9990);
      }(), function() {
        var G__9991 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9991) : cljs.core.val.call(null, G__9991);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4420__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4420__auto__)) {
          var e = temp__4420__auto__;
          var G__9997 = cljs.core.next(es);
          var G__9998 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__9992 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9992) : cljs.core.key.call(null, G__9992);
          }(), function() {
            var G__9993 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9993) : cljs.core.val.call(null, G__9993);
          }());
          es = G__9997;
          tcoll__$2 = G__9998;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__9994 = self__.len;
          var G__9995 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__9994, G__9995) : cljs.core.array__GT_transient_hash_map.call(null, G__9994, G__9995);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__9996_9999 = self__.arr;
      G__9996_9999.pop();
      G__9996_9999.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__10000 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__10001 = i + 2;
      out = G__10000;
      i = G__10001;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set() {
  var G__10003 = arguments.length;
  switch(G__10003) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__10004 = cljs.core.aclone(arr);
  G__10004[i] = a;
  return G__10004;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__10005 = cljs.core.aclone(arr);
  G__10005[i] = a;
  G__10005[j] = b;
  return G__10005;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set() {
  var G__10008 = arguments.length;
  switch(G__10008) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__10014 = init__$1;
          var G__10015 = k;
          var G__10016 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10014, G__10015, G__10016) : f.call(null, G__10014, G__10015, G__10016);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__10017 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10017) : cljs.core.deref.call(null, G__10017);
      } else {
        var G__10018 = i + 2;
        var G__10019 = init__$2;
        i = G__10018;
        init__$1 = G__10019;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__10020 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10020) : cljs.core.create_inode_seq.call(null, G__10020);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_10034 = 0;
        var j_10035 = 0;
        while (true) {
          if (i_10034 < 32) {
            if ((self__.bitmap >>> i_10034 & 1) === 0) {
              var G__10036 = i_10034 + 1;
              var G__10037 = j_10035;
              i_10034 = G__10036;
              j_10035 = G__10037;
              continue;
            } else {
              nodes[i_10034] = !(self__.arr[j_10035] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_10035]), self__.arr[j_10035], self__.arr[j_10035 + 1], added_leaf_QMARK_) : self__.arr[j_10035 + 1];
              var G__10038 = i_10034 + 1;
              var G__10039 = j_10035 + 2;
              i_10034 = G__10038;
              j_10035 = G__10039;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__10021 = edit__$1;
          var G__10022 = shift + 5;
          var G__10023 = key_or_nil;
          var G__10024 = val_or_node;
          var G__10025 = hash;
          var G__10026 = key;
          var G__10027 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__10021, G__10022, G__10023, G__10024, G__10025, G__10026, G__10027) : cljs.core.create_node.call(null, G__10021, G__10022, G__10023, G__10024, G__10025, G__10026, G__10027);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_10040 = 0;
      var j_10041 = 0;
      while (true) {
        if (i_10040 < 32) {
          if ((self__.bitmap >>> i_10040 & 1) === 0) {
            var G__10042 = i_10040 + 1;
            var G__10043 = j_10041;
            i_10040 = G__10042;
            j_10041 = G__10043;
            continue;
          } else {
            nodes[i_10040] = !(self__.arr[j_10041] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_10041]), self__.arr[j_10041], self__.arr[j_10041 + 1], added_leaf_QMARK_) : self__.arr[j_10041 + 1];
            var G__10044 = i_10040 + 1;
            var G__10045 = j_10041 + 2;
            i_10040 = G__10044;
            j_10041 = G__10045;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__10028 = shift + 5;
          var G__10029 = key_or_nil;
          var G__10030 = val_or_node;
          var G__10031 = hash;
          var G__10032 = key;
          var G__10033 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__10028, G__10029, G__10030, G__10031, G__10032, G__10033) : cljs.core.create_node.call(null, G__10028, G__10029, G__10030, G__10031, G__10032, G__10033);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__10046 = i + 1;
        var G__10047 = j + 2;
        var G__10048 = bitmap | 1 << i;
        i = G__10046;
        j = G__10047;
        bitmap = G__10048;
        continue;
      } else {
        var G__10049 = i + 1;
        var G__10050 = j;
        var G__10051 = bitmap;
        i = G__10049;
        j = G__10050;
        bitmap = G__10051;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__10052 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__10052) : cljs.core.create_array_node_seq.call(null, G__10052);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__10053 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10053) : cljs.core.deref.call(null, G__10053);
        } else {
          var G__10054 = i + 1;
          var G__10055 = init__$2;
          i = G__10054;
          init__$1 = G__10055;
          continue;
        }
      } else {
        var G__10056 = i + 1;
        var G__10057 = init__$1;
        i = G__10056;
        init__$1 = G__10057;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__10058 = i + 2;
        i = G__10058;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__10059 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10059) : cljs.core.create_inode_seq.call(null, G__10059);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node() {
  var G__10061 = arguments.length;
  switch(G__10061) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__10063 = self__.nodes;
    var G__10064 = self__.i + 2;
    var G__10065 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10063, G__10064, G__10065) : cljs.core.create_inode_seq.call(null, G__10063, G__10064, G__10065);
  } else {
    var G__10066 = self__.nodes;
    var G__10067 = self__.i;
    var G__10068 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10066, G__10067, G__10068) : cljs.core.create_inode_seq.call(null, G__10066, G__10067, G__10068);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq() {
  var G__10070 = arguments.length;
  switch(G__10070) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4420__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4420__auto__)) {
            var node = temp__4420__auto__;
            var temp__4420__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4420__auto____$1)) {
              var node_seq = temp__4420__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__10072 = j + 2;
              j = G__10072;
              continue;
            }
          } else {
            var G__10073 = j + 2;
            j = G__10073;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__10074 = null;
  var G__10075 = self__.nodes;
  var G__10076 = self__.i;
  var G__10077 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__10074, G__10075, G__10076, G__10077) : cljs.core.create_array_node_seq.call(null, G__10074, G__10075, G__10076, G__10077);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq() {
  var G__10079 = arguments.length;
  switch(G__10079) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4420__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4420__auto__)) {
          var nj = temp__4420__auto__;
          var temp__4420__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4420__auto____$1)) {
            var ns = temp__4420__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__10081 = j + 1;
            j = G__10081;
            continue;
          }
        } else {
          var G__10082 = j + 1;
          j = G__10082;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__10084 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10084) : cljs.core.keys.call(null, G__10084);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__10085 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10085) : cljs.core.vals.call(null, G__10085);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__10086 = cljs.core.seq(coll);
  var chunk__10087 = null;
  var count__10088 = 0;
  var i__10089 = 0;
  while (true) {
    if (i__10089 < count__10088) {
      var vec__10090 = chunk__10087.cljs$core$IIndexed$_nth$arity$2(null, i__10089);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10090, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10090, 1, null);
      var G__10091_10102 = v;
      var G__10092_10103 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10091_10102, G__10092_10103) : f.call(null, G__10091_10102, G__10092_10103);
      var G__10104 = seq__10086;
      var G__10105 = chunk__10087;
      var G__10106 = count__10088;
      var G__10107 = i__10089 + 1;
      seq__10086 = G__10104;
      chunk__10087 = G__10105;
      count__10088 = G__10106;
      i__10089 = G__10107;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__10086);
      if (temp__4422__auto__) {
        var seq__10086__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10086__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__10086__$1);
          var G__10108 = cljs.core.chunk_rest(seq__10086__$1);
          var G__10109 = c__5093__auto__;
          var G__10110 = cljs.core.count(c__5093__auto__);
          var G__10111 = 0;
          seq__10086 = G__10108;
          chunk__10087 = G__10109;
          count__10088 = G__10110;
          i__10089 = G__10111;
          continue;
        } else {
          var vec__10093 = cljs.core.first(seq__10086__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10093, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10093, 1, null);
          var G__10094_10112 = v;
          var G__10095_10113 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10094_10112, G__10095_10113) : f.call(null, G__10094_10112, G__10095_10113);
          var G__10114 = cljs.core.next(seq__10086__$1);
          var G__10115 = null;
          var G__10116 = 0;
          var G__10117 = 0;
          seq__10086 = G__10114;
          chunk__10087 = G__10115;
          count__10088 = G__10116;
          i__10089 = G__10117;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__10096 = init;
    var G__10097 = null;
    var G__10098 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10096, G__10097, G__10098) : f.call(null, G__10096, G__10097, G__10098);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__10099 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10099) : cljs.core.deref.call(null, G__10099);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj10101 = {};
    return obj10101;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__10118 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__10119 = cljs.core.next(es);
          ret = G__10118;
          es = G__10119;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10120 = null;
  var G__10120__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10120__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10120 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10120__2.call(this, self__, k);
      case 3:
        return G__10120__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10120.cljs$core$IFn$_invoke$arity$2 = G__10120__2;
  G__10120.cljs$core$IFn$_invoke$arity$3 = G__10120__3;
  return G__10120;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args10083) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10083)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__10121 = i + 2;
      var G__10122 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__10121;
      ret = G__10122;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__10123 = i + 1;
      var G__10124 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__10123;
      out = G__10124;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__10125 = o;
      if (G__10125) {
        var bit__4982__auto__ = G__10125.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4982__auto__ || G__10125.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__10125.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__10125);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__10125);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__10126 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10126) : cljs.core.key.call(null, G__10126);
      }(), function() {
        var G__10127 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10127) : cljs.core.val.call(null, G__10127);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4420__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4420__auto__)) {
          var e = temp__4420__auto__;
          var G__10130 = cljs.core.next(es);
          var G__10131 = tcoll__$1.assoc_BANG_(function() {
            var G__10128 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10128) : cljs.core.key.call(null, G__10128);
          }(), function() {
            var G__10129 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10129) : cljs.core.val.call(null, G__10129);
          }());
          es = G__10130;
          tcoll__$1 = G__10131;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null)], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__10132 = ascending_QMARK_ ? t.left : t.right;
      var G__10133 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__10132;
      stack__$1 = G__10133;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__10146 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10146) : cljs.core.deref.call(null, G__10146);
  } else {
    var init__$2 = function() {
      var G__10147 = init__$1;
      var G__10148 = node.key;
      var G__10149 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10147, G__10148, G__10149) : f.call(null, G__10147, G__10148, G__10149);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__10150 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10150) : cljs.core.deref.call(null, G__10150);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__10151 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10151) : cljs.core.deref.call(null, G__10151);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10153 = null;
  var G__10153__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10153__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10153 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10153__2.call(this, self__, k);
      case 3:
        return G__10153__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10153.cljs$core$IFn$_invoke$arity$2 = G__10153__2;
  G__10153.cljs$core$IFn$_invoke$arity$3 = G__10153__3;
  return G__10153;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args10152) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10152)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__10155 = null;
  var G__10155__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10155__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10155 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10155__2.call(this, self__, k);
      case 3:
        return G__10155__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10155.cljs$core$IFn$_invoke$arity$2 = G__10155__2;
  G__10155.cljs$core$IFn$_invoke$arity$3 = G__10155__3;
  return G__10155;
}();
cljs.core.RedNode.prototype.apply = function(self__, args10154) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10154)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__10168 = k;
      var G__10169 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10168, G__10169) : comp.call(null, G__10168, G__10169);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__10188 = k;
      var G__10189 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10188, G__10189) : comp.call(null, G__10188, G__10189);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__10200 = k;
    var G__10201 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10200, G__10201) : comp.call(null, G__10200, G__10201);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__10203 = cljs.core.seq(coll);
  var chunk__10204 = null;
  var count__10205 = 0;
  var i__10206 = 0;
  while (true) {
    if (i__10206 < count__10205) {
      var vec__10207 = chunk__10204.cljs$core$IIndexed$_nth$arity$2(null, i__10206);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10207, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10207, 1, null);
      var G__10208_10220 = v;
      var G__10209_10221 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10208_10220, G__10209_10221) : f.call(null, G__10208_10220, G__10209_10221);
      var G__10222 = seq__10203;
      var G__10223 = chunk__10204;
      var G__10224 = count__10205;
      var G__10225 = i__10206 + 1;
      seq__10203 = G__10222;
      chunk__10204 = G__10223;
      count__10205 = G__10224;
      i__10206 = G__10225;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__10203);
      if (temp__4422__auto__) {
        var seq__10203__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10203__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__10203__$1);
          var G__10226 = cljs.core.chunk_rest(seq__10203__$1);
          var G__10227 = c__5093__auto__;
          var G__10228 = cljs.core.count(c__5093__auto__);
          var G__10229 = 0;
          seq__10203 = G__10226;
          chunk__10204 = G__10227;
          count__10205 = G__10228;
          i__10206 = G__10229;
          continue;
        } else {
          var vec__10210 = cljs.core.first(seq__10203__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10210, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10210, 1, null);
          var G__10211_10230 = v;
          var G__10212_10231 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10211_10230, G__10212_10231) : f.call(null, G__10211_10230, G__10212_10231);
          var G__10232 = cljs.core.next(seq__10203__$1);
          var G__10233 = null;
          var G__10234 = 0;
          var G__10235 = 0;
          seq__10203 = G__10232;
          chunk__10204 = G__10233;
          count__10205 = G__10234;
          i__10206 = G__10235;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__10213 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10213) : cljs.core.keys.call(null, G__10213);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__10214 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10214) : cljs.core.vals.call(null, G__10214);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__10215 = k;
        var G__10216 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10215, G__10216) : self__.comp.call(null, G__10215, G__10216);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__10236 = t.left;
          t = G__10236;
          continue;
        } else {
          var G__10237 = t.right;
          t = G__10237;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__10238 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__10239 = cljs.core.next(es);
          ret = G__10238;
          es = G__10239;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10240 = null;
  var G__10240__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10240__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10240 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10240__2.call(this, self__, k);
      case 3:
        return G__10240__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10240.cljs$core$IFn$_invoke$arity$2 = G__10240__2;
  G__10240.cljs$core$IFn$_invoke$arity$3 = G__10240__3;
  return G__10240;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args10202) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10202)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__10217 = k;
          var G__10218 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10217, G__10218) : self__.comp.call(null, G__10217, G__10218);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__10241 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__10242 = t.left;
              stack = G__10241;
              t = G__10242;
              continue;
            } else {
              var G__10243 = stack;
              var G__10244 = t.right;
              stack = G__10243;
              t = G__10244;
              continue;
            }
          } else {
            if (c > 0) {
              var G__10245 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__10246 = t.right;
              stack = G__10245;
              t = G__10246;
              continue;
            } else {
              var G__10247 = stack;
              var G__10248 = t.left;
              stack = G__10247;
              t = G__10248;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__10219 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10219) : cljs.core.key.call(null, G__10219);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__10250 = cljs.core.nnext(in$);
      var G__10251 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__10250;
      out = G__10251;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq10249) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10249));
};
cljs.core.array_map = function cljs$core$array_map() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq10252) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10252));
};
cljs.core.obj_map = function cljs$core$obj_map() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = function() {
    var obj10255 = {};
    return obj10255;
  }();
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__10256 = cljs.core.nnext(kvs);
      kvs = G__10256;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq10253) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10253));
};
cljs.core.sorted_map = function cljs$core$sorted_map() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__10258 = cljs.core.nnext(in$);
      var G__10259 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__10258;
      out = G__10259;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq10257) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10257));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__10262 = cljs.core.nnext(in$);
      var G__10263 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__10262;
      out = G__10263;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq10260) {
  var G__10261 = cljs.core.first(seq10260);
  var seq10260__$1 = cljs.core.next(seq10260);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__10261, seq10260__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10264 = self__.mseq;
    if (G__10264) {
      var bit__4982__auto__ = G__10264.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4982__auto__ || G__10264.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10264.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__10264);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__10264);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10265 = self__.mseq;
    if (G__10265) {
      var bit__4982__auto__ = G__10265.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4982__auto__ || G__10265.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10265.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__10265);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__10265);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4422__auto__ = cljs.core.seq(hash_map);
  if (temp__4422__auto__) {
    var mseq = temp__4422__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10266 = self__.mseq;
    if (G__10266) {
      var bit__4982__auto__ = G__10266.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4982__auto__ || G__10266.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10266.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__10266);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__10266);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10267 = self__.mseq;
    if (G__10267) {
      var bit__4982__auto__ = G__10267.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4982__auto__ || G__10267.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10267.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__10267);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__10267);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4422__auto__ = cljs.core.seq(hash_map);
  if (temp__4422__auto__) {
    var mseq = temp__4422__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__10268_SHARP_, p2__10269_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4308__auto__ = p1__10268_SHARP_;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__10269_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq10270) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10270));
};
cljs.core.merge_with = function cljs$core$merge_with() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__10273 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__10274 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10273, G__10274) : f.call(null, G__10273, G__10274);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4308__auto__ = m1;
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq10271) {
  var G__10272 = cljs.core.first(seq10271);
  var seq10271__$1 = cljs.core.next(seq10271);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__10272, seq10271__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__10275 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__10276 = cljs.core.next(keys);
      ret = G__10275;
      keys = G__10276;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__10279 = cljs.core.seq(coll);
  var chunk__10280 = null;
  var count__10281 = 0;
  var i__10282 = 0;
  while (true) {
    if (i__10282 < count__10281) {
      var vec__10283 = chunk__10280.cljs$core$IIndexed$_nth$arity$2(null, i__10282);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10283, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10283, 1, null);
      var G__10284_10289 = v;
      var G__10285_10290 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10284_10289, G__10285_10290) : f.call(null, G__10284_10289, G__10285_10290);
      var G__10291 = seq__10279;
      var G__10292 = chunk__10280;
      var G__10293 = count__10281;
      var G__10294 = i__10282 + 1;
      seq__10279 = G__10291;
      chunk__10280 = G__10292;
      count__10281 = G__10293;
      i__10282 = G__10294;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__10279);
      if (temp__4422__auto__) {
        var seq__10279__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10279__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__10279__$1);
          var G__10295 = cljs.core.chunk_rest(seq__10279__$1);
          var G__10296 = c__5093__auto__;
          var G__10297 = cljs.core.count(c__5093__auto__);
          var G__10298 = 0;
          seq__10279 = G__10295;
          chunk__10280 = G__10296;
          count__10281 = G__10297;
          i__10282 = G__10298;
          continue;
        } else {
          var vec__10286 = cljs.core.first(seq__10279__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10286, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10286, 1, null);
          var G__10287_10299 = v;
          var G__10288_10300 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10287_10299, G__10288_10300) : f.call(null, G__10287_10299, G__10288_10300);
          var G__10301 = cljs.core.next(seq__10279__$1);
          var G__10302 = null;
          var G__10303 = 0;
          var G__10304 = 0;
          seq__10279 = G__10301;
          chunk__10280 = G__10302;
          count__10281 = G__10303;
          i__10282 = G__10304;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__10277_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__10277_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10305 = null;
  var G__10305__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10305__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10305 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10305__2.call(this, self__, k);
      case 3:
        return G__10305__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10305.cljs$core$IFn$_invoke$arity$2 = G__10305__2;
  G__10305.cljs$core$IFn$_invoke$arity$3 = G__10305__3;
  return G__10305;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args10278) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10278)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__10306 = i + 1;
        var G__10307 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__10306;
        out = G__10307;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__10308 = i + 1;
        var G__10309 = cljs.core._conj_BANG_(out, items[i]);
        i = G__10308;
        out = G__10309;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10311 = null;
  var G__10311__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__10311__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__10311 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10311__2.call(this, self__, k);
      case 3:
        return G__10311__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10311.cljs$core$IFn$_invoke$arity$2 = G__10311__2;
  G__10311.cljs$core$IFn$_invoke$arity$3 = G__10311__3;
  return G__10311;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args10310) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10310)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null)], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__10314 = cljs.core.seq(coll);
  var chunk__10315 = null;
  var count__10316 = 0;
  var i__10317 = 0;
  while (true) {
    if (i__10317 < count__10316) {
      var vec__10318 = chunk__10315.cljs$core$IIndexed$_nth$arity$2(null, i__10317);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10318, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10318, 1, null);
      var G__10319_10324 = v;
      var G__10320_10325 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10319_10324, G__10320_10325) : f.call(null, G__10319_10324, G__10320_10325);
      var G__10326 = seq__10314;
      var G__10327 = chunk__10315;
      var G__10328 = count__10316;
      var G__10329 = i__10317 + 1;
      seq__10314 = G__10326;
      chunk__10315 = G__10327;
      count__10316 = G__10328;
      i__10317 = G__10329;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__10314);
      if (temp__4422__auto__) {
        var seq__10314__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10314__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__10314__$1);
          var G__10330 = cljs.core.chunk_rest(seq__10314__$1);
          var G__10331 = c__5093__auto__;
          var G__10332 = cljs.core.count(c__5093__auto__);
          var G__10333 = 0;
          seq__10314 = G__10330;
          chunk__10315 = G__10331;
          count__10316 = G__10332;
          i__10317 = G__10333;
          continue;
        } else {
          var vec__10321 = cljs.core.first(seq__10314__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10321, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10321, 1, null);
          var G__10322_10334 = v;
          var G__10323_10335 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10322_10334, G__10323_10335) : f.call(null, G__10322_10334, G__10323_10335);
          var G__10336 = cljs.core.next(seq__10314__$1);
          var G__10337 = null;
          var G__10338 = 0;
          var G__10339 = 0;
          seq__10314 = G__10336;
          chunk__10315 = G__10337;
          count__10316 = G__10338;
          i__10317 = G__10339;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__10312_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__10312_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10340 = null;
  var G__10340__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10340__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10340 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10340__2.call(this, self__, k);
      case 3:
        return G__10340__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10340.cljs$core$IFn$_invoke$arity$2 = G__10340__2;
  G__10340.cljs$core$IFn$_invoke$arity$3 = G__10340__3;
  return G__10340;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args10313) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10313)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5187__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5187__auto__.length) {
        var G__10341 = i + 1;
        var G__10342 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__10341;
        res = G__10342;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__10343 = cljs.core.next(in$__$1);
          var G__10344 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__10343;
          out = G__10344;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set() {
  var G__10347 = arguments.length;
  switch(G__10347) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5359__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq10345) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10345));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq10349) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10349));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq10350) {
  var G__10351 = cljs.core.first(seq10350);
  var seq10350__$1 = cljs.core.next(seq10350);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__10351, seq10350__$1);
};
cljs.core.replace = function cljs$core$replace() {
  var G__10355 = arguments.length;
  switch(G__10355) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__10352_SHARP_) {
    var temp__4420__auto__ = cljs.core.find(smap, p1__10352_SHARP_);
    if (cljs.core.truth_(temp__4420__auto__)) {
      var e = temp__4420__auto__;
      return cljs.core.val(e);
    } else {
      return p1__10352_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4420__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4420__auto__)) {
          var e = temp__4420__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__10353_SHARP_) {
      var temp__4420__auto__ = cljs.core.find(smap, p1__10353_SHARP_);
      if (cljs.core.truth_(temp__4420__auto__)) {
        var e = temp__4420__auto__;
        return cljs.core.second(e);
      } else {
        return p1__10353_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct() {
  var G__10358 = arguments.length;
  switch(G__10358) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__10370 = null;
        var G__10370__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10370__1 = function(result) {
          var G__10359 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10359) : rf.call(null, G__10359);
        };
        var G__10370__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(function() {
            var G__10360 = seen;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10360) : cljs.core.deref.call(null, G__10360);
          }(), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            var G__10361 = result;
            var G__10362 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10361, G__10362) : rf.call(null, G__10361, G__10362);
          }
        };
        G__10370 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10370__0.call(this);
            case 1:
              return G__10370__1.call(this, result);
            case 2:
              return G__10370__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10370.cljs$core$IFn$_invoke$arity$0 = G__10370__0;
        G__10370.cljs$core$IFn$_invoke$arity$1 = G__10370__1;
        G__10370.cljs$core$IFn$_invoke$arity$2 = G__10370__2;
        return G__10370;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__10367, seen__$1) {
        while (true) {
          var vec__10368 = p__10367;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10368, 0, null);
          var xs__$1 = vec__10368;
          var temp__4422__auto__ = cljs.core.seq(xs__$1);
          if (temp__4422__auto__) {
            var s = temp__4422__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__10371 = cljs.core.rest(s);
              var G__10372 = seen__$1;
              p__10367 = G__10371;
              seen__$1 = G__10372;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__10373 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__10374 = cljs.core.next(s__$1);
      ret = G__10373;
      s__$1 = G__10374;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (function() {
    var G__10376 = x;
    if (G__10376) {
      var bit__4975__auto__ = G__10376.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4975__auto__ || G__10376.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__10377 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__10378 = cljs.core.next(ks);
      var G__10379 = cljs.core.next(vs);
      map = G__10377;
      ks = G__10378;
      vs = G__10379;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key() {
  var G__10387 = arguments.length;
  switch(G__10387) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if (function() {
    var G__10388 = x;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10388) : k.call(null, G__10388);
  }() > function() {
    var G__10389 = y;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10389) : k.call(null, G__10389);
  }()) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__10380_SHARP_, p2__10381_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__10380_SHARP_, p2__10381_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq10382) {
  var G__10383 = cljs.core.first(seq10382);
  var seq10382__$1 = cljs.core.next(seq10382);
  var G__10384 = cljs.core.first(seq10382__$1);
  var seq10382__$2 = cljs.core.next(seq10382__$1);
  var G__10385 = cljs.core.first(seq10382__$2);
  var seq10382__$3 = cljs.core.next(seq10382__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__10383, G__10384, G__10385, seq10382__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key() {
  var G__10398 = arguments.length;
  switch(G__10398) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if (function() {
    var G__10399 = x;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10399) : k.call(null, G__10399);
  }() < function() {
    var G__10400 = y;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10400) : k.call(null, G__10400);
  }()) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__10391_SHARP_, p2__10392_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__10391_SHARP_, p2__10392_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq10393) {
  var G__10394 = cljs.core.first(seq10393);
  var seq10393__$1 = cljs.core.next(seq10393);
  var G__10395 = cljs.core.first(seq10393__$1);
  var seq10393__$2 = cljs.core.next(seq10393__$1);
  var G__10396 = cljs.core.first(seq10393__$2);
  var seq10393__$3 = cljs.core.next(seq10393__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__10394, G__10395, G__10396, seq10393__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all() {
  var G__10403 = arguments.length;
  switch(G__10403) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__10410 = null;
        var G__10410__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10410__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(function() {
              var G__10404 = result;
              var G__10405 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10404, G__10405) : rf.call(null, G__10404, G__10405);
            }());
          }();
          var G__10406 = result__$1;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10406) : rf.call(null, G__10406);
        };
        var G__10410__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var G__10407 = result;
            var G__10408 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10407, G__10408) : rf.call(null, G__10407, G__10408);
          } else {
            return result;
          }
        };
        G__10410 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10410__0.call(this);
            case 1:
              return G__10410__1.call(this, result);
            case 2:
              return G__10410__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10410.cljs$core$IFn$_invoke$arity$0 = G__10410__0;
        G__10410.cljs$core$IFn$_invoke$arity$1 = G__10410__1;
        G__10410.cljs$core$IFn$_invoke$arity$2 = G__10410__2;
        return G__10410;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while() {
  var G__10412 = arguments.length;
  switch(G__10412) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__10419 = null;
      var G__10419__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__10419__1 = function(result) {
        var G__10413 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10413) : rf.call(null, G__10413);
      };
      var G__10419__2 = function(result, input) {
        if (cljs.core.truth_(function() {
          var G__10414 = input;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10414) : pred.call(null, G__10414);
        }())) {
          var G__10415 = result;
          var G__10416 = input;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10415, G__10416) : rf.call(null, G__10415, G__10416);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__10419 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__10419__0.call(this);
          case 1:
            return G__10419__1.call(this, result);
          case 2:
            return G__10419__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10419.cljs$core$IFn$_invoke$arity$0 = G__10419__0;
      G__10419.cljs$core$IFn$_invoke$arity$1 = G__10419__1;
      G__10419.cljs$core$IFn$_invoke$arity$2 = G__10419__2;
      return G__10419;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      if (cljs.core.truth_(function() {
        var G__10417 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10417) : pred.call(null, G__10417);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__10424 = function() {
      var G__10426 = cljs.core._entry_key(sc, e);
      var G__10427 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10426, G__10427) : comp.call(null, G__10426, G__10427);
    }();
    var G__10425 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__10424, G__10425) : test.call(null, G__10424, G__10425);
  };
};
cljs.core.subseq = function cljs$core$subseq() {
  var G__10429 = arguments.length;
  switch(G__10429) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4422__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4422__auto__)) {
      var vec__10430 = temp__4422__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10430, 0, null);
      var s = vec__10430;
      if (cljs.core.truth_(function() {
        var G__10431 = e;
        return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10431) : include.call(null, G__10431);
      }())) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4422__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4422__auto__)) {
    var vec__10432 = temp__4422__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10432, 0, null);
    var s = vec__10432;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq() {
  var G__10435 = arguments.length;
  switch(G__10435) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4422__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4422__auto__)) {
      var vec__10436 = temp__4422__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10436, 0, null);
      var s = vec__10436;
      if (cljs.core.truth_(function() {
        var G__10437 = e;
        return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10437) : include.call(null, G__10437);
      }())) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4422__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4422__auto__)) {
    var vec__10438 = temp__4422__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10438, 0, null);
    var s = vec__10438;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__10440 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__10440);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__10441 = ret;
        var G__10442 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10441, G__10442) : f.call(null, G__10441, G__10442);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__10443 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10443) : cljs.core.deref.call(null, G__10443);
      } else {
        var G__10444 = i + self__.step;
        var G__10445 = ret__$1;
        i = G__10444;
        ret = G__10445;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.range = function cljs$core$range() {
  var G__10447 = arguments.length;
  switch(G__10447) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth() {
  var G__10450 = arguments.length;
  switch(G__10450) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__10455 = null;
        var G__10455__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10455__1 = function(result) {
          var G__10451 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10451) : rf.call(null, G__10451);
        };
        var G__10455__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            var G__10452 = result;
            var G__10453 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10452, G__10453) : rf.call(null, G__10452, G__10453);
          } else {
            return result;
          }
        };
        G__10455 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10455__0.call(this);
            case 1:
              return G__10455__1.call(this, result);
            case 2:
              return G__10455__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10455.cljs$core$IFn$_invoke$arity$0 = G__10455__0;
        G__10455.cljs$core$IFn$_invoke$arity$1 = G__10455__1;
        G__10455.cljs$core$IFn$_invoke$arity$2 = G__10455__2;
        return G__10455;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by() {
  var G__10458 = arguments.length;
  switch(G__10458) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__10469 = null;
        var G__10469__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10469__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(function() {
              var G__10459 = result;
              var G__10460 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10459, G__10460) : rf.call(null, G__10459, G__10460);
            }());
          }();
          var G__10461 = result__$1;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10461) : rf.call(null, G__10461);
        };
        var G__10469__2 = function(result, input) {
          var pval = function() {
            var G__10462 = pa;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10462) : cljs.core.deref.call(null, G__10462);
          }();
          var val = function() {
            var G__10463 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10463) : f.call(null, G__10463);
          }();
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = function() {
              var G__10464 = result;
              var G__10465 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10464, G__10465) : rf.call(null, G__10464, G__10465);
            }();
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__10469 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10469__0.call(this);
            case 1:
              return G__10469__1.call(this, result);
            case 2:
              return G__10469__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10469.cljs$core$IFn$_invoke$arity$0 = G__10469__0;
        G__10469.cljs$core$IFn$_invoke$arity$1 = G__10469__1;
        G__10469.cljs$core$IFn$_invoke$arity$2 = G__10469__2;
        return G__10469;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      var fst = cljs.core.first(s);
      var fv = function() {
        var G__10466 = fst;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10466) : f.call(null, G__10466);
      }();
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4422__auto__) {
        return function(p1__10456_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
            var G__10467 = p1__10456_SHARP_;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10467) : f.call(null, G__10467);
          }());
        };
      }(fst, fv, s, temp__4422__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions() {
  var G__10471 = arguments.length;
  switch(G__10471) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4420__auto__ = cljs.core.seq(coll);
    if (temp__4420__auto__) {
      var s = temp__4420__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__10472 = init;
        var G__10473 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10472, G__10473) : f.call(null, G__10472, G__10473);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt() {
  var G__10490 = arguments.length;
  switch(G__10490) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__10534 = null;
    var G__10534__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }()], null);
    };
    var G__10534__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10491 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10491) : f.call(null, G__10491);
      }()], null);
    };
    var G__10534__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10492 = x;
        var G__10493 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10492, G__10493) : f.call(null, G__10492, G__10493);
      }()], null);
    };
    var G__10534__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10494 = x;
        var G__10495 = y;
        var G__10496 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10494, G__10495, G__10496) : f.call(null, G__10494, G__10495, G__10496);
      }()], null);
    };
    var G__10534__4 = function() {
      var G__10535__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__10535 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10536__i = 0, G__10536__a = new Array(arguments.length - 3);
          while (G__10536__i < G__10536__a.length) {
            G__10536__a[G__10536__i] = arguments[G__10536__i + 3];
            ++G__10536__i;
          }
          args = new cljs.core.IndexedSeq(G__10536__a, 0);
        }
        return G__10535__delegate.call(this, x, y, z, args);
      };
      G__10535.cljs$lang$maxFixedArity = 3;
      G__10535.cljs$lang$applyTo = function(arglist__10537) {
        var x = cljs.core.first(arglist__10537);
        arglist__10537 = cljs.core.next(arglist__10537);
        var y = cljs.core.first(arglist__10537);
        arglist__10537 = cljs.core.next(arglist__10537);
        var z = cljs.core.first(arglist__10537);
        var args = cljs.core.rest(arglist__10537);
        return G__10535__delegate(x, y, z, args);
      };
      G__10535.cljs$core$IFn$_invoke$arity$variadic = G__10535__delegate;
      return G__10535;
    }();
    G__10534 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10534__0.call(this);
        case 1:
          return G__10534__1.call(this, x);
        case 2:
          return G__10534__2.call(this, x, y);
        case 3:
          return G__10534__3.call(this, x, y, z);
        default:
          var G__10538 = null;
          if (arguments.length > 3) {
            var G__10539__i = 0, G__10539__a = new Array(arguments.length - 3);
            while (G__10539__i < G__10539__a.length) {
              G__10539__a[G__10539__i] = arguments[G__10539__i + 3];
              ++G__10539__i;
            }
            G__10538 = new cljs.core.IndexedSeq(G__10539__a, 0);
          }
          return G__10534__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10538);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10534.cljs$lang$maxFixedArity = 3;
    G__10534.cljs$lang$applyTo = G__10534__4.cljs$lang$applyTo;
    G__10534.cljs$core$IFn$_invoke$arity$0 = G__10534__0;
    G__10534.cljs$core$IFn$_invoke$arity$1 = G__10534__1;
    G__10534.cljs$core$IFn$_invoke$arity$2 = G__10534__2;
    G__10534.cljs$core$IFn$_invoke$arity$3 = G__10534__3;
    G__10534.cljs$core$IFn$_invoke$arity$variadic = G__10534__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10534;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__10540 = null;
    var G__10540__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }()], null);
    };
    var G__10540__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10497 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10497) : f.call(null, G__10497);
      }(), function() {
        var G__10498 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10498) : g.call(null, G__10498);
      }()], null);
    };
    var G__10540__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10499 = x;
        var G__10500 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10499, G__10500) : f.call(null, G__10499, G__10500);
      }(), function() {
        var G__10501 = x;
        var G__10502 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10501, G__10502) : g.call(null, G__10501, G__10502);
      }()], null);
    };
    var G__10540__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10503 = x;
        var G__10504 = y;
        var G__10505 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10503, G__10504, G__10505) : f.call(null, G__10503, G__10504, G__10505);
      }(), function() {
        var G__10506 = x;
        var G__10507 = y;
        var G__10508 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10506, G__10507, G__10508) : g.call(null, G__10506, G__10507, G__10508);
      }()], null);
    };
    var G__10540__4 = function() {
      var G__10541__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__10541 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10542__i = 0, G__10542__a = new Array(arguments.length - 3);
          while (G__10542__i < G__10542__a.length) {
            G__10542__a[G__10542__i] = arguments[G__10542__i + 3];
            ++G__10542__i;
          }
          args = new cljs.core.IndexedSeq(G__10542__a, 0);
        }
        return G__10541__delegate.call(this, x, y, z, args);
      };
      G__10541.cljs$lang$maxFixedArity = 3;
      G__10541.cljs$lang$applyTo = function(arglist__10543) {
        var x = cljs.core.first(arglist__10543);
        arglist__10543 = cljs.core.next(arglist__10543);
        var y = cljs.core.first(arglist__10543);
        arglist__10543 = cljs.core.next(arglist__10543);
        var z = cljs.core.first(arglist__10543);
        var args = cljs.core.rest(arglist__10543);
        return G__10541__delegate(x, y, z, args);
      };
      G__10541.cljs$core$IFn$_invoke$arity$variadic = G__10541__delegate;
      return G__10541;
    }();
    G__10540 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10540__0.call(this);
        case 1:
          return G__10540__1.call(this, x);
        case 2:
          return G__10540__2.call(this, x, y);
        case 3:
          return G__10540__3.call(this, x, y, z);
        default:
          var G__10544 = null;
          if (arguments.length > 3) {
            var G__10545__i = 0, G__10545__a = new Array(arguments.length - 3);
            while (G__10545__i < G__10545__a.length) {
              G__10545__a[G__10545__i] = arguments[G__10545__i + 3];
              ++G__10545__i;
            }
            G__10544 = new cljs.core.IndexedSeq(G__10545__a, 0);
          }
          return G__10540__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10544);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10540.cljs$lang$maxFixedArity = 3;
    G__10540.cljs$lang$applyTo = G__10540__4.cljs$lang$applyTo;
    G__10540.cljs$core$IFn$_invoke$arity$0 = G__10540__0;
    G__10540.cljs$core$IFn$_invoke$arity$1 = G__10540__1;
    G__10540.cljs$core$IFn$_invoke$arity$2 = G__10540__2;
    G__10540.cljs$core$IFn$_invoke$arity$3 = G__10540__3;
    G__10540.cljs$core$IFn$_invoke$arity$variadic = G__10540__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10540;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__10546 = null;
    var G__10546__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }(), function() {
        return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
      }()], null);
    };
    var G__10546__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10509 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10509) : f.call(null, G__10509);
      }(), function() {
        var G__10510 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10510) : g.call(null, G__10510);
      }(), function() {
        var G__10511 = x;
        return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__10511) : h.call(null, G__10511);
      }()], null);
    };
    var G__10546__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10512 = x;
        var G__10513 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10512, G__10513) : f.call(null, G__10512, G__10513);
      }(), function() {
        var G__10514 = x;
        var G__10515 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10514, G__10515) : g.call(null, G__10514, G__10515);
      }(), function() {
        var G__10516 = x;
        var G__10517 = y;
        return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__10516, G__10517) : h.call(null, G__10516, G__10517);
      }()], null);
    };
    var G__10546__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10518 = x;
        var G__10519 = y;
        var G__10520 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10518, G__10519, G__10520) : f.call(null, G__10518, G__10519, G__10520);
      }(), function() {
        var G__10521 = x;
        var G__10522 = y;
        var G__10523 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10521, G__10522, G__10523) : g.call(null, G__10521, G__10522, G__10523);
      }(), function() {
        var G__10524 = x;
        var G__10525 = y;
        var G__10526 = z;
        return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__10524, G__10525, G__10526) : h.call(null, G__10524, G__10525, G__10526);
      }()], null);
    };
    var G__10546__4 = function() {
      var G__10547__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__10547 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10548__i = 0, G__10548__a = new Array(arguments.length - 3);
          while (G__10548__i < G__10548__a.length) {
            G__10548__a[G__10548__i] = arguments[G__10548__i + 3];
            ++G__10548__i;
          }
          args = new cljs.core.IndexedSeq(G__10548__a, 0);
        }
        return G__10547__delegate.call(this, x, y, z, args);
      };
      G__10547.cljs$lang$maxFixedArity = 3;
      G__10547.cljs$lang$applyTo = function(arglist__10549) {
        var x = cljs.core.first(arglist__10549);
        arglist__10549 = cljs.core.next(arglist__10549);
        var y = cljs.core.first(arglist__10549);
        arglist__10549 = cljs.core.next(arglist__10549);
        var z = cljs.core.first(arglist__10549);
        var args = cljs.core.rest(arglist__10549);
        return G__10547__delegate(x, y, z, args);
      };
      G__10547.cljs$core$IFn$_invoke$arity$variadic = G__10547__delegate;
      return G__10547;
    }();
    G__10546 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10546__0.call(this);
        case 1:
          return G__10546__1.call(this, x);
        case 2:
          return G__10546__2.call(this, x, y);
        case 3:
          return G__10546__3.call(this, x, y, z);
        default:
          var G__10550 = null;
          if (arguments.length > 3) {
            var G__10551__i = 0, G__10551__a = new Array(arguments.length - 3);
            while (G__10551__i < G__10551__a.length) {
              G__10551__a[G__10551__i] = arguments[G__10551__i + 3];
              ++G__10551__i;
            }
            G__10550 = new cljs.core.IndexedSeq(G__10551__a, 0);
          }
          return G__10546__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10550);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10546.cljs$lang$maxFixedArity = 3;
    G__10546.cljs$lang$applyTo = G__10546__4.cljs$lang$applyTo;
    G__10546.cljs$core$IFn$_invoke$arity$0 = G__10546__0;
    G__10546.cljs$core$IFn$_invoke$arity$1 = G__10546__1;
    G__10546.cljs$core$IFn$_invoke$arity$2 = G__10546__2;
    G__10546.cljs$core$IFn$_invoke$arity$3 = G__10546__3;
    G__10546.cljs$core$IFn$_invoke$arity$variadic = G__10546__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10546;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__10552 = null;
      var G__10552__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__10475_SHARP_, p2__10476_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10475_SHARP_, function() {
              return p2__10476_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__10476_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__10476_SHARP_.call(null);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__10552__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__10477_SHARP_, p2__10478_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10477_SHARP_, function() {
              var G__10527 = x;
              return p2__10478_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__10478_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10527) : p2__10478_SHARP_.call(null, G__10527);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__10552__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__10479_SHARP_, p2__10480_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10479_SHARP_, function() {
              var G__10528 = x;
              var G__10529 = y;
              return p2__10480_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__10480_SHARP_.cljs$core$IFn$_invoke$arity$2(G__10528, G__10529) : p2__10480_SHARP_.call(null, G__10528, G__10529);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__10552__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__10481_SHARP_, p2__10482_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10481_SHARP_, function() {
              var G__10530 = x;
              var G__10531 = y;
              var G__10532 = z;
              return p2__10482_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__10482_SHARP_.cljs$core$IFn$_invoke$arity$3(G__10530, G__10531, G__10532) : p2__10482_SHARP_.call(null, G__10530, G__10531, G__10532);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__10552__4 = function() {
        var G__10553__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__10483_SHARP_, p2__10484_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10483_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__10484_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__10553 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__10554__i = 0, G__10554__a = new Array(arguments.length - 3);
            while (G__10554__i < G__10554__a.length) {
              G__10554__a[G__10554__i] = arguments[G__10554__i + 3];
              ++G__10554__i;
            }
            args = new cljs.core.IndexedSeq(G__10554__a, 0);
          }
          return G__10553__delegate.call(this, x, y, z, args);
        };
        G__10553.cljs$lang$maxFixedArity = 3;
        G__10553.cljs$lang$applyTo = function(arglist__10555) {
          var x = cljs.core.first(arglist__10555);
          arglist__10555 = cljs.core.next(arglist__10555);
          var y = cljs.core.first(arglist__10555);
          arglist__10555 = cljs.core.next(arglist__10555);
          var z = cljs.core.first(arglist__10555);
          var args = cljs.core.rest(arglist__10555);
          return G__10553__delegate(x, y, z, args);
        };
        G__10553.cljs$core$IFn$_invoke$arity$variadic = G__10553__delegate;
        return G__10553;
      }();
      G__10552 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10552__0.call(this);
          case 1:
            return G__10552__1.call(this, x);
          case 2:
            return G__10552__2.call(this, x, y);
          case 3:
            return G__10552__3.call(this, x, y, z);
          default:
            var G__10556 = null;
            if (arguments.length > 3) {
              var G__10557__i = 0, G__10557__a = new Array(arguments.length - 3);
              while (G__10557__i < G__10557__a.length) {
                G__10557__a[G__10557__i] = arguments[G__10557__i + 3];
                ++G__10557__i;
              }
              G__10556 = new cljs.core.IndexedSeq(G__10557__a, 0);
            }
            return G__10552__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10556);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10552.cljs$lang$maxFixedArity = 3;
      G__10552.cljs$lang$applyTo = G__10552__4.cljs$lang$applyTo;
      G__10552.cljs$core$IFn$_invoke$arity$0 = G__10552__0;
      G__10552.cljs$core$IFn$_invoke$arity$1 = G__10552__1;
      G__10552.cljs$core$IFn$_invoke$arity$2 = G__10552__2;
      G__10552.cljs$core$IFn$_invoke$arity$3 = G__10552__3;
      G__10552.cljs$core$IFn$_invoke$arity$variadic = G__10552__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__10552;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq10485) {
  var G__10486 = cljs.core.first(seq10485);
  var seq10485__$1 = cljs.core.next(seq10485);
  var G__10487 = cljs.core.first(seq10485__$1);
  var seq10485__$2 = cljs.core.next(seq10485__$1);
  var G__10488 = cljs.core.first(seq10485__$2);
  var seq10485__$3 = cljs.core.next(seq10485__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__10486, G__10487, G__10488, seq10485__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun() {
  var G__10559 = arguments.length;
  switch(G__10559) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__10561 = cljs.core.next(coll);
      coll = G__10561;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__10562 = n - 1;
      var G__10563 = cljs.core.next(coll);
      n = G__10562;
      coll = G__10563;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall() {
  var G__10565 = arguments.length;
  switch(G__10565) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__10570 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10570, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10570, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4308__auto__ = flags;
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_10578 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4308__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__10579_10585 = cljs.core.first(coll);
          var G__10580_10586 = writer;
          var G__10581_10587 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10579_10585, G__10580_10586, G__10581_10587) : print_one.call(null, G__10579_10585, G__10580_10586, G__10581_10587);
        } else {
        }
        var coll_10588__$1 = cljs.core.next(coll);
        var n_10589 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_10588__$1 && (n_10589 == null || !(n_10589 === 0))) {
            cljs.core._write(writer, sep);
            var G__10582_10590 = cljs.core.first(coll_10588__$1);
            var G__10583_10591 = writer;
            var G__10584_10592 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10582_10590, G__10583_10591, G__10584_10592) : print_one.call(null, G__10582_10590, G__10583_10591, G__10584_10592);
            var G__10593 = cljs.core.next(coll_10588__$1);
            var G__10594 = n_10589 - 1;
            coll_10588__$1 = G__10593;
            n_10589 = G__10594;
            continue;
          } else {
            if (cljs.core.seq(coll_10588__$1) && n_10589 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4308__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4308__auto__)) {
                  return or__4308__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10578;
  }
};
cljs.core.write_all = function cljs$core$write_all() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__10597 = cljs.core.seq(ss);
  var chunk__10598 = null;
  var count__10599 = 0;
  var i__10600 = 0;
  while (true) {
    if (i__10600 < count__10599) {
      var s = chunk__10598.cljs$core$IIndexed$_nth$arity$2(null, i__10600);
      cljs.core._write(writer, s);
      var G__10601 = seq__10597;
      var G__10602 = chunk__10598;
      var G__10603 = count__10599;
      var G__10604 = i__10600 + 1;
      seq__10597 = G__10601;
      chunk__10598 = G__10602;
      count__10599 = G__10603;
      i__10600 = G__10604;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__10597);
      if (temp__4422__auto__) {
        var seq__10597__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10597__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__10597__$1);
          var G__10605 = cljs.core.chunk_rest(seq__10597__$1);
          var G__10606 = c__5093__auto__;
          var G__10607 = cljs.core.count(c__5093__auto__);
          var G__10608 = 0;
          seq__10597 = G__10605;
          chunk__10598 = G__10606;
          count__10599 = G__10607;
          i__10600 = G__10608;
          continue;
        } else {
          var s = cljs.core.first(seq__10597__$1);
          cljs.core._write(writer, s);
          var G__10609 = cljs.core.next(seq__10597__$1);
          var G__10610 = null;
          var G__10611 = 0;
          var G__10612 = 0;
          seq__10597 = G__10609;
          chunk__10598 = G__10610;
          count__10599 = G__10611;
          i__10600 = G__10612;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq10595) {
  var G__10596 = cljs.core.first(seq10595);
  var seq10595__$1 = cljs.core.next(seq10595);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__10596, seq10595__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj10614 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj10614;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__10617 = '[\\\\"\b\f\n\r\t]';
    var G__10618 = "g";
    return RegExp(G__10617, G__10618);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__4296__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__10632 = obj;
            if (G__10632) {
              var bit__4982__auto__ = G__10632.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4982__auto__ || G__10632.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__10632.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__10632);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__10632);
            }
          }();
          if (and__4296__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__10633_10643 = cljs.core.meta(obj);
        var G__10634_10644 = writer;
        var G__10635_10645 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__10633_10643, G__10634_10644, G__10635_10645) : cljs.core.pr_writer.call(null, G__10633_10643, G__10634_10644, G__10635_10645);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__10636 = obj;
            if (G__10636) {
              var bit__4975__auto__ = G__10636.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4975__auto__ || G__10636.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__10637 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__10638 = cljs.core.pr_writer;
                var G__10639 = writer;
                var G__10640 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10637, G__10638, G__10639, G__10640) : cljs.core.print_map.call(null, G__10637, G__10638, G__10639, G__10640);
              } else {
                if (cljs.core.array_QMARK_(obj)) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__10641 = obj;
                    return goog.isString(G__10641);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__10646 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__10646;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.truth_(cljs.core.regexp_QMARK_(obj))) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__10642 = obj;
                            if (G__10642) {
                              var bit__4982__auto__ = G__10642.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4982__auto__ || G__10642.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__10642.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__10642);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__10642);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4420__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4420__auto__)) {
    var alt_impl = temp__4420__auto__;
    var G__10650 = obj;
    var G__10651 = writer;
    var G__10652 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__10650, G__10651, G__10652) : alt_impl.call(null, G__10650, G__10651, G__10652);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__10657 = cljs.core.seq(cljs.core.next(objs));
  var chunk__10658 = null;
  var count__10659 = 0;
  var i__10660 = 0;
  while (true) {
    if (i__10660 < count__10659) {
      var obj = chunk__10658.cljs$core$IIndexed$_nth$arity$2(null, i__10660);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__10661 = seq__10657;
      var G__10662 = chunk__10658;
      var G__10663 = count__10659;
      var G__10664 = i__10660 + 1;
      seq__10657 = G__10661;
      chunk__10658 = G__10662;
      count__10659 = G__10663;
      i__10660 = G__10664;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__10657);
      if (temp__4422__auto__) {
        var seq__10657__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10657__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__10657__$1);
          var G__10665 = cljs.core.chunk_rest(seq__10657__$1);
          var G__10666 = c__5093__auto__;
          var G__10667 = cljs.core.count(c__5093__auto__);
          var G__10668 = 0;
          seq__10657 = G__10665;
          chunk__10658 = G__10666;
          count__10659 = G__10667;
          i__10660 = G__10668;
          continue;
        } else {
          var obj = cljs.core.first(seq__10657__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__10669 = cljs.core.next(seq__10657__$1);
          var G__10670 = null;
          var G__10671 = 0;
          var G__10672 = 0;
          seq__10657 = G__10669;
          chunk__10658 = G__10670;
          count__10659 = G__10671;
          i__10660 = G__10672;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function cljs$core$pr_str() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq10673) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10673));
};
cljs.core.prn_str = function cljs$core$prn_str() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq10674) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10674));
};
cljs.core.pr = function cljs$core$pr() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq10675) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10675));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10676__i = 0, G__10676__a = new Array(arguments.length - 0);
      while (G__10676__i < G__10676__a.length) {
        G__10676__a[G__10676__i] = arguments[G__10676__i + 0];
        ++G__10676__i;
      }
      objs = new cljs.core.IndexedSeq(G__10676__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__10677) {
    var objs = cljs.core.seq(arglist__10677);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq10678) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10678));
};
cljs.core.println = function cljs$core$println() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq10679) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10679));
};
cljs.core.println_str = function cljs$core$println_str() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq10680) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10680));
};
cljs.core.prn = function cljs$core$prn() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq10681) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10681));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__10688_10694 = cljs.core.key(e);
    var G__10689_10695 = w;
    var G__10690_10696 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10688_10694, G__10689_10695, G__10690_10696) : print_one.call(null, G__10688_10694, G__10689_10695, G__10690_10696);
    cljs.core._write(w, " ");
    var G__10691 = cljs.core.val(e);
    var G__10692 = w;
    var G__10693 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10691, G__10692, G__10693) : print_one.call(null, G__10691, G__10692, G__10693);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_() {
  var argseq__5348__auto__ = 2 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5348__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq10697) {
  var G__10698 = cljs.core.first(seq10697);
  var seq10697__$1 = cljs.core.next(seq10697);
  var G__10699 = cljs.core.first(seq10697__$1);
  var seq10697__$2 = cljs.core.next(seq10697__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__10698, G__10699, seq10697__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym() {
  var G__10701 = arguments.length;
  switch(G__10701) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = function() {
      var G__10702 = 0;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10702) : cljs.core.atom.call(null, G__10702);
    }();
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "value", "value", 1946509744, null)], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__10705 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10705) : cljs.core.deref.call(null, G__10705);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__10706_SHARP_, p2__10707_SHARP_) {
    var ret = function() {
      var G__10710 = p1__10706_SHARP_;
      var G__10711 = p2__10707_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10710, G__10711) : rf.call(null, G__10710, G__10711);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__10714 = null;
      var G__10714__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__10714__1 = function(result) {
        var G__10713 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10713) : rf.call(null, G__10713);
      };
      var G__10714__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__10714 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__10714__0.call(this);
          case 1:
            return G__10714__1.call(this, result);
          case 2:
            return G__10714__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10714.cljs$core$IFn$_invoke$arity$0 = G__10714__0;
      G__10714.cljs$core$IFn$_invoke$arity$1 = G__10714__1;
      G__10714.cljs$core$IFn$_invoke$arity$2 = G__10714__2;
      return G__10714;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe() {
  var G__10716 = arguments.length;
  switch(G__10716) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__10722 = null;
        var G__10722__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10722__1 = function(result) {
          var G__10717 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10717) : rf.call(null, G__10717);
        };
        var G__10722__2 = function(result, input) {
          var prior = function() {
            var G__10718 = pa;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10718) : cljs.core.deref.call(null, G__10718);
          }();
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            var G__10719 = result;
            var G__10720 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10719, G__10720) : rf.call(null, G__10719, G__10720);
          }
        };
        G__10722 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10722__0.call(this);
            case 1:
              return G__10722__1.call(this, result);
            case 2:
              return G__10722__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10722.cljs$core$IFn$_invoke$arity$0 = G__10722__0;
        G__10722.cljs$core$IFn$_invoke$arity$1 = G__10722__1;
        G__10722.cljs$core$IFn$_invoke$arity$2 = G__10722__2;
        return G__10722;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample() {
  var G__10724 = arguments.length;
  switch(G__10724) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return function() {
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
    }() < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return function() {
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
    }() < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.eduction = function cljs$core$eduction() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq10726) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10726));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__10728_SHARP_, p2__10727_SHARP_) {
    var G__10730 = p2__10727_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__10730) : proc.call(null, G__10730);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj10732 = {};
  return obj10732;
}();
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._clj__GT_js[function() {
        var G__10736 = x__4944__auto__;
        return goog.typeOf(G__10736);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._key__GT_js[function() {
        var G__10740 = x__4944__auto__;
        return goog.typeOf(G__10740);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (function() {
    var G__10743 = k;
    if (G__10743) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__10743.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__10743.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10743);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10743);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__10744 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__10744) : cljs.core.clj__GT_js.call(null, G__10744);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__10760 = x;
      if (G__10760) {
        var bit__4982__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__4308__auto__ = bit__4982__auto__;
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return G__10760.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__10760.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10760);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10760);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj10762 = {};
              return obj10762;
            }();
            var seq__10763_10773 = cljs.core.seq(x);
            var chunk__10764_10774 = null;
            var count__10765_10775 = 0;
            var i__10766_10776 = 0;
            while (true) {
              if (i__10766_10776 < count__10765_10775) {
                var vec__10767_10777 = chunk__10764_10774.cljs$core$IIndexed$_nth$arity$2(null, i__10766_10776);
                var k_10778 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10767_10777, 0, null);
                var v_10779 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10767_10777, 1, null);
                m[cljs.core.key__GT_js(k_10778)] = cljs$core$clj__GT_js(v_10779);
                var G__10780 = seq__10763_10773;
                var G__10781 = chunk__10764_10774;
                var G__10782 = count__10765_10775;
                var G__10783 = i__10766_10776 + 1;
                seq__10763_10773 = G__10780;
                chunk__10764_10774 = G__10781;
                count__10765_10775 = G__10782;
                i__10766_10776 = G__10783;
                continue;
              } else {
                var temp__4422__auto___10784 = cljs.core.seq(seq__10763_10773);
                if (temp__4422__auto___10784) {
                  var seq__10763_10785__$1 = temp__4422__auto___10784;
                  if (cljs.core.chunked_seq_QMARK_(seq__10763_10785__$1)) {
                    var c__5093__auto___10786 = cljs.core.chunk_first(seq__10763_10785__$1);
                    var G__10787 = cljs.core.chunk_rest(seq__10763_10785__$1);
                    var G__10788 = c__5093__auto___10786;
                    var G__10789 = cljs.core.count(c__5093__auto___10786);
                    var G__10790 = 0;
                    seq__10763_10773 = G__10787;
                    chunk__10764_10774 = G__10788;
                    count__10765_10775 = G__10789;
                    i__10766_10776 = G__10790;
                    continue;
                  } else {
                    var vec__10768_10791 = cljs.core.first(seq__10763_10785__$1);
                    var k_10792 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10768_10791, 0, null);
                    var v_10793 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10768_10791, 1, null);
                    m[cljs.core.key__GT_js(k_10792)] = cljs$core$clj__GT_js(v_10793);
                    var G__10794 = cljs.core.next(seq__10763_10785__$1);
                    var G__10795 = null;
                    var G__10796 = 0;
                    var G__10797 = 0;
                    seq__10763_10773 = G__10794;
                    chunk__10764_10774 = G__10795;
                    count__10765_10775 = G__10796;
                    i__10766_10776 = G__10797;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__10769_10798 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__10770_10799 = null;
              var count__10771_10800 = 0;
              var i__10772_10801 = 0;
              while (true) {
                if (i__10772_10801 < count__10771_10800) {
                  var x_10802__$1 = chunk__10770_10799.cljs$core$IIndexed$_nth$arity$2(null, i__10772_10801);
                  arr.push(x_10802__$1);
                  var G__10803 = seq__10769_10798;
                  var G__10804 = chunk__10770_10799;
                  var G__10805 = count__10771_10800;
                  var G__10806 = i__10772_10801 + 1;
                  seq__10769_10798 = G__10803;
                  chunk__10770_10799 = G__10804;
                  count__10771_10800 = G__10805;
                  i__10772_10801 = G__10806;
                  continue;
                } else {
                  var temp__4422__auto___10807 = cljs.core.seq(seq__10769_10798);
                  if (temp__4422__auto___10807) {
                    var seq__10769_10808__$1 = temp__4422__auto___10807;
                    if (cljs.core.chunked_seq_QMARK_(seq__10769_10808__$1)) {
                      var c__5093__auto___10809 = cljs.core.chunk_first(seq__10769_10808__$1);
                      var G__10810 = cljs.core.chunk_rest(seq__10769_10808__$1);
                      var G__10811 = c__5093__auto___10809;
                      var G__10812 = cljs.core.count(c__5093__auto___10809);
                      var G__10813 = 0;
                      seq__10769_10798 = G__10810;
                      chunk__10770_10799 = G__10811;
                      count__10771_10800 = G__10812;
                      i__10772_10801 = G__10813;
                      continue;
                    } else {
                      var x_10814__$1 = cljs.core.first(seq__10769_10808__$1);
                      arr.push(x_10814__$1);
                      var G__10815 = cljs.core.next(seq__10769_10808__$1);
                      var G__10816 = null;
                      var G__10817 = 0;
                      var G__10818 = 0;
                      seq__10769_10798 = G__10815;
                      chunk__10770_10799 = G__10816;
                      count__10771_10800 = G__10817;
                      i__10772_10801 = G__10818;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj10820 = {};
  return obj10820;
}();
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._js__GT_clj[function() {
        var G__10824 = x__4944__auto__;
        return goog.typeOf(G__10824);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj() {
  var G__10828 = arguments.length;
  switch(G__10828) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__10829 = opts;
  var map__10829__$1 = cljs.core.seq_QMARK_(map__10829) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__10829) : map__10829;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10829__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__10829, map__10829__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (function() {
        var G__10845 = x__$1;
        if (G__10845) {
          var bit__4982__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__4308__auto__ = bit__4982__auto__;
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              return G__10845.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__10845.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__10845);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__10845);
        }
      }()) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__5062__auto__ = function(map__10829, map__10829__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__10846(s__10847) {
                      return new cljs.core.LazySeq(null, function(map__10829, map__10829__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__10847__$1 = s__10847;
                          while (true) {
                            var temp__4422__auto__ = cljs.core.seq(s__10847__$1);
                            if (temp__4422__auto__) {
                              var s__10847__$2 = temp__4422__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__10847__$2)) {
                                var c__5060__auto__ = cljs.core.chunk_first(s__10847__$2);
                                var size__5061__auto__ = cljs.core.count(c__5060__auto__);
                                var b__10849 = cljs.core.chunk_buffer(size__5061__auto__);
                                if (function() {
                                  var i__10848 = 0;
                                  while (true) {
                                    if (i__10848 < size__5061__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5060__auto__, i__10848);
                                      cljs.core.chunk_append(b__10849, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                        var G__10854 = k;
                                        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10854) : keyfn.call(null, G__10854);
                                      }(), cljs$core$thisfn(x__$1[k])], null));
                                      var G__10857 = i__10848 + 1;
                                      i__10848 = G__10857;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__10849), cljs$core$thisfn_$_iter__10846(cljs.core.chunk_rest(s__10847__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__10849), null);
                                }
                              } else {
                                var k = cljs.core.first(s__10847__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                  var G__10855 = k;
                                  return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10855) : keyfn.call(null, G__10855);
                                }(), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__10846(cljs.core.rest(s__10847__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__10829, map__10829__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__10829, map__10829__$1, keywordize_keys, keyfn);
                  return iter__5062__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__10829, map__10829__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq10825) {
  var G__10826 = cljs.core.first(seq10825);
  var seq10825__$1 = cljs.core.next(seq10825);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__10826, seq10825__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__10860 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10860) : cljs.core.atom.call(null, G__10860);
  }();
  return function(mem) {
    return function() {
      var G__10862__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__10861 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10861) : cljs.core.deref.call(null, G__10861);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__10862 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__10863__i = 0, G__10863__a = new Array(arguments.length - 0);
          while (G__10863__i < G__10863__a.length) {
            G__10863__a[G__10863__i] = arguments[G__10863__i + 0];
            ++G__10863__i;
          }
          args = new cljs.core.IndexedSeq(G__10863__a, 0);
        }
        return G__10862__delegate.call(this, args);
      };
      G__10862.cljs$lang$maxFixedArity = 0;
      G__10862.cljs$lang$applyTo = function(arglist__10864) {
        var args = cljs.core.seq(arglist__10864);
        return G__10862__delegate(args);
      };
      G__10862.cljs$core$IFn$_invoke$arity$variadic = G__10862__delegate;
      return G__10862;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline() {
  var G__10868 = arguments.length;
  switch(G__10868) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }();
    if (cljs.core.fn_QMARK_(ret)) {
      var G__10870 = ret;
      f = G__10870;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq10865) {
  var G__10866 = cljs.core.first(seq10865);
  var seq10865__$1 = cljs.core.next(seq10865);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__10866, seq10865__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand() {
  var G__10872 = arguments.length;
  switch(G__10872) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function() {
    return Math.random();
  }() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__10875 = function() {
    return Math.random();
  }() * n;
  return Math.floor(G__10875);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__10877 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10877) : f.call(null, G__10877);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__10879 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10879) : cljs.core.atom.call(null, G__10879);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq10880) {
  var G__10881 = cljs.core.first(seq10880);
  var seq10880__$1 = cljs.core.next(seq10880);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__10881, seq10880__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_() {
  var G__10883 = arguments.length;
  switch(G__10883) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__10884 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10884) : cljs.core.deref.call(null, G__10884);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4308__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4308__auto__) {
    return or__4308__auto__;
  } else {
    var or__4308__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4308__auto____$1) {
      return or__4308__auto____$1;
    } else {
      var and__4296__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4296__auto__) {
        var and__4296__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4296__auto____$1) {
          var and__4296__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4296__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__10910 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                  var G__10907 = i;
                  return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__10907) : child.call(null, G__10907);
                }(), function() {
                  var G__10908 = i;
                  return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__10908) : parent.call(null, G__10908);
                }());
                var G__10911 = i + 1;
                ret = G__10910;
                i = G__10911;
                continue;
              }
              break;
            }
          } else {
            return and__4296__auto____$2;
          }
        } else {
          return and__4296__auto____$1;
        }
      } else {
        return and__4296__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents() {
  var G__10913 = arguments.length;
  switch(G__10913) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10914 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10914) : cljs.core.deref.call(null, G__10914);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors() {
  var G__10917 = arguments.length;
  switch(G__10917) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10918 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10918) : cljs.core.deref.call(null, G__10918);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants() {
  var G__10921 = arguments.length;
  switch(G__10921) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10922 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10922) : cljs.core.deref.call(null, G__10922);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive() {
  var G__10925 = arguments.length;
  switch(G__10925) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
            var G__10926 = target;
            return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__10926) : targets.call(null, G__10926);
          }())));
        };
      }(tp, td, ta), m, cljs.core.cons(source, function() {
        var G__10927 = source;
        return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__10927) : sources.call(null, G__10927);
      }()));
    };
  }(tp, td, ta);
  var or__4308__auto__ = cljs.core.contains_QMARK_(function() {
    var G__10931 = tag;
    return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__10931) : tp.call(null, G__10931);
  }(), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(function() {
      var G__10932 = tag;
      return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10932) : ta.call(null, G__10932);
    }(), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(function() {
      var G__10933 = parent;
      return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10933) : ta.call(null, G__10933);
    }(), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive() {
  var G__10939 = arguments.length;
  switch(G__10939) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(function() {
    var G__10940 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10940) : parentMap.call(null, G__10940);
  }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10941 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10941) : parentMap.call(null, G__10941);
  }(), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__10935_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__10935_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__10935_SHARP_), cljs.core.second(p1__10935_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(function() {
    var G__10942 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10942) : parentMap.call(null, G__10942);
  }(), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__10936_SHARP_, p2__10937_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__10936_SHARP_, p2__10937_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__10946 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10946) : cljs.core.deref.call(null, G__10946);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__10947 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10947) : cljs.core.deref.call(null, G__10947);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__10963 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10963) : cljs.core.deref.call(null, G__10963);
  }().call(null, x);
  var or__4308__auto__ = cljs.core.truth_(function() {
    var and__4296__auto__ = xprefs;
    if (cljs.core.truth_(and__4296__auto__)) {
      var G__10965 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__10965) : xprefs.call(null, G__10965);
    } else {
      return and__4296__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    var or__4308__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__10966 = cljs.core.rest(ps);
          ps = G__10966;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4308__auto____$1)) {
      return or__4308__auto____$1;
    } else {
      var or__4308__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__10967 = cljs.core.rest(ps);
            ps = G__10967;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4308__auto____$2)) {
        return or__4308__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4308__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__10981) {
    var vec__10982 = p__10981;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10982, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10982, 1, null);
    var e = vec__10982;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__10983 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10983) : cljs.core.deref.call(null, G__10983);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4308__auto__ = be == null;
        if (or__4308__auto__) {
          return or__4308__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__10984 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10984) : cljs.core.deref.call(null, G__10984);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10985 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10985) : cljs.core.deref.call(null, G__10985);
    }(), function() {
      var G__10986 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10986) : cljs.core.deref.call(null, G__10986);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj10988 = {};
  return obj10988;
}();
cljs.core._reset = function cljs$core$_reset(mf) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._reset[function() {
        var G__10992 = x__4944__auto__;
        return goog.typeOf(G__10992);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._reset["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._add_method[function() {
        var G__10996 = x__4944__auto__;
        return goog.typeOf(G__10996);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._add_method["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._remove_method[function() {
        var G__11000 = x__4944__auto__;
        return goog.typeOf(G__11000);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._remove_method["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._prefer_method[function() {
        var G__11004 = x__4944__auto__;
        return goog.typeOf(G__11004);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._prefer_method["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._get_method[function() {
        var G__11008 = x__4944__auto__;
        return goog.typeOf(G__11008);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._get_method["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._methods[function() {
        var G__11012 = x__4944__auto__;
        return goog.typeOf(G__11012);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._methods["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._prefers[function() {
        var G__11016 = x__4944__auto__;
        return goog.typeOf(G__11016);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._prefers["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._default_dispatch_val[function() {
        var G__11020 = x__4944__auto__;
        return goog.typeOf(G__11020);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._default_dispatch_val["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._dispatch_fn[function() {
        var G__11024 = x__4944__auto__;
        return goog.typeOf(G__11024);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._dispatch_fn["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__11873 = null;
  var G__11873__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__11873__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11026 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11026) : self__.dispatch_fn.call(null, G__11026);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11027 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11027) : target_fn.call(null, G__11027);
  };
  var G__11873__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11028 = a;
      var G__11029 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11028, G__11029) : self__.dispatch_fn.call(null, G__11028, G__11029);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11030 = a;
    var G__11031 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11030, G__11031) : target_fn.call(null, G__11030, G__11031);
  };
  var G__11873__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11032 = a;
      var G__11033 = b;
      var G__11034 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11032, G__11033, G__11034) : self__.dispatch_fn.call(null, G__11032, G__11033, G__11034);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11035 = a;
    var G__11036 = b;
    var G__11037 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11035, G__11036, G__11037) : target_fn.call(null, G__11035, G__11036, G__11037);
  };
  var G__11873__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11038 = a;
      var G__11039 = b;
      var G__11040 = c;
      var G__11041 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11038, G__11039, G__11040, G__11041) : self__.dispatch_fn.call(null, G__11038, G__11039, G__11040, G__11041);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11042 = a;
    var G__11043 = b;
    var G__11044 = c;
    var G__11045 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11042, G__11043, G__11044, G__11045) : target_fn.call(null, G__11042, G__11043, G__11044, G__11045);
  };
  var G__11873__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11046 = a;
      var G__11047 = b;
      var G__11048 = c;
      var G__11049 = d;
      var G__11050 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11046, G__11047, G__11048, G__11049, G__11050) : self__.dispatch_fn.call(null, G__11046, G__11047, G__11048, G__11049, G__11050);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11051 = a;
    var G__11052 = b;
    var G__11053 = c;
    var G__11054 = d;
    var G__11055 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11051, G__11052, G__11053, G__11054, G__11055) : target_fn.call(null, G__11051, G__11052, G__11053, G__11054, G__11055);
  };
  var G__11873__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11056 = a;
      var G__11057 = b;
      var G__11058 = c;
      var G__11059 = d;
      var G__11060 = e;
      var G__11061 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11056, G__11057, G__11058, G__11059, G__11060, G__11061) : self__.dispatch_fn.call(null, G__11056, G__11057, G__11058, G__11059, G__11060, G__11061);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11062 = a;
    var G__11063 = b;
    var G__11064 = c;
    var G__11065 = d;
    var G__11066 = e;
    var G__11067 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11062, G__11063, G__11064, G__11065, G__11066, G__11067) : target_fn.call(null, G__11062, G__11063, G__11064, G__11065, G__11066, G__11067);
  };
  var G__11873__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11068 = a;
      var G__11069 = b;
      var G__11070 = c;
      var G__11071 = d;
      var G__11072 = e;
      var G__11073 = f;
      var G__11074 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11068, G__11069, G__11070, G__11071, G__11072, G__11073, G__11074) : self__.dispatch_fn.call(null, G__11068, G__11069, G__11070, G__11071, G__11072, G__11073, G__11074);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11075 = a;
    var G__11076 = b;
    var G__11077 = c;
    var G__11078 = d;
    var G__11079 = e;
    var G__11080 = f;
    var G__11081 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11075, G__11076, G__11077, G__11078, G__11079, G__11080, G__11081) : target_fn.call(null, G__11075, G__11076, G__11077, G__11078, G__11079, G__11080, G__11081);
  };
  var G__11873__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11082 = a;
      var G__11083 = b;
      var G__11084 = c;
      var G__11085 = d;
      var G__11086 = e;
      var G__11087 = f;
      var G__11088 = g;
      var G__11089 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11082, G__11083, G__11084, G__11085, G__11086, G__11087, G__11088, G__11089) : self__.dispatch_fn.call(null, G__11082, G__11083, G__11084, G__11085, G__11086, G__11087, G__11088, G__11089);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11090 = a;
    var G__11091 = b;
    var G__11092 = c;
    var G__11093 = d;
    var G__11094 = e;
    var G__11095 = f;
    var G__11096 = g;
    var G__11097 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11090, G__11091, G__11092, G__11093, G__11094, G__11095, G__11096, G__11097) : target_fn.call(null, G__11090, G__11091, G__11092, G__11093, G__11094, G__11095, G__11096, G__11097);
  };
  var G__11873__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11098 = a;
      var G__11099 = b;
      var G__11100 = c;
      var G__11101 = d;
      var G__11102 = e;
      var G__11103 = f;
      var G__11104 = g;
      var G__11105 = h;
      var G__11106 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11098, G__11099, G__11100, G__11101, G__11102, G__11103, G__11104, G__11105, G__11106) : self__.dispatch_fn.call(null, G__11098, G__11099, G__11100, G__11101, G__11102, G__11103, G__11104, G__11105, G__11106);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11107 = a;
    var G__11108 = b;
    var G__11109 = c;
    var G__11110 = d;
    var G__11111 = e;
    var G__11112 = f;
    var G__11113 = g;
    var G__11114 = h;
    var G__11115 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11107, G__11108, G__11109, G__11110, G__11111, G__11112, G__11113, G__11114, G__11115) : target_fn.call(null, G__11107, G__11108, G__11109, G__11110, G__11111, G__11112, G__11113, G__11114, G__11115);
  };
  var G__11873__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11116 = a;
      var G__11117 = b;
      var G__11118 = c;
      var G__11119 = d;
      var G__11120 = e;
      var G__11121 = f;
      var G__11122 = g;
      var G__11123 = h;
      var G__11124 = i;
      var G__11125 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11116, G__11117, G__11118, G__11119, G__11120, G__11121, G__11122, G__11123, G__11124, G__11125) : self__.dispatch_fn.call(null, G__11116, G__11117, G__11118, G__11119, G__11120, G__11121, G__11122, G__11123, G__11124, G__11125);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11126 = a;
    var G__11127 = b;
    var G__11128 = c;
    var G__11129 = d;
    var G__11130 = e;
    var G__11131 = f;
    var G__11132 = g;
    var G__11133 = h;
    var G__11134 = i;
    var G__11135 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11126, G__11127, G__11128, G__11129, G__11130, G__11131, G__11132, G__11133, G__11134, G__11135) : target_fn.call(null, G__11126, G__11127, G__11128, G__11129, G__11130, G__11131, G__11132, G__11133, G__11134, G__11135);
  };
  var G__11873__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11136 = a;
      var G__11137 = b;
      var G__11138 = c;
      var G__11139 = d;
      var G__11140 = e;
      var G__11141 = f;
      var G__11142 = g;
      var G__11143 = h;
      var G__11144 = i;
      var G__11145 = j;
      var G__11146 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11136, G__11137, G__11138, G__11139, G__11140, G__11141, G__11142, G__11143, G__11144, G__11145, G__11146) : self__.dispatch_fn.call(null, G__11136, G__11137, G__11138, G__11139, G__11140, G__11141, G__11142, G__11143, G__11144, G__11145, G__11146);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11147 = a;
    var G__11148 = b;
    var G__11149 = c;
    var G__11150 = d;
    var G__11151 = e;
    var G__11152 = f;
    var G__11153 = g;
    var G__11154 = h;
    var G__11155 = i;
    var G__11156 = j;
    var G__11157 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11147, G__11148, G__11149, G__11150, G__11151, G__11152, G__11153, G__11154, G__11155, G__11156, G__11157) : target_fn.call(null, G__11147, G__11148, G__11149, G__11150, G__11151, G__11152, G__11153, G__11154, G__11155, G__11156, G__11157);
  };
  var G__11873__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11158 = a;
      var G__11159 = b;
      var G__11160 = c;
      var G__11161 = d;
      var G__11162 = e;
      var G__11163 = f;
      var G__11164 = g;
      var G__11165 = h;
      var G__11166 = i;
      var G__11167 = j;
      var G__11168 = k;
      var G__11169 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11158, G__11159, G__11160, G__11161, G__11162, G__11163, G__11164, G__11165, G__11166, G__11167, G__11168, G__11169) : self__.dispatch_fn.call(null, G__11158, G__11159, G__11160, G__11161, G__11162, G__11163, G__11164, G__11165, G__11166, G__11167, G__11168, G__11169);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11170 = a;
    var G__11171 = b;
    var G__11172 = c;
    var G__11173 = d;
    var G__11174 = e;
    var G__11175 = f;
    var G__11176 = g;
    var G__11177 = h;
    var G__11178 = i;
    var G__11179 = j;
    var G__11180 = k;
    var G__11181 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11170, G__11171, G__11172, G__11173, G__11174, G__11175, G__11176, G__11177, G__11178, G__11179, G__11180, G__11181) : target_fn.call(null, G__11170, G__11171, G__11172, G__11173, G__11174, G__11175, G__11176, G__11177, G__11178, G__11179, G__11180, G__11181);
  };
  var G__11873__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11182 = a;
      var G__11183 = b;
      var G__11184 = c;
      var G__11185 = d;
      var G__11186 = e;
      var G__11187 = f;
      var G__11188 = g;
      var G__11189 = h;
      var G__11190 = i;
      var G__11191 = j;
      var G__11192 = k;
      var G__11193 = l;
      var G__11194 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11182, G__11183, G__11184, G__11185, G__11186, G__11187, G__11188, G__11189, G__11190, G__11191, G__11192, G__11193, G__11194) : self__.dispatch_fn.call(null, G__11182, G__11183, G__11184, G__11185, G__11186, G__11187, G__11188, G__11189, G__11190, G__11191, G__11192, G__11193, G__11194);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11195 = a;
    var G__11196 = b;
    var G__11197 = c;
    var G__11198 = d;
    var G__11199 = e;
    var G__11200 = f;
    var G__11201 = g;
    var G__11202 = h;
    var G__11203 = i;
    var G__11204 = j;
    var G__11205 = k;
    var G__11206 = l;
    var G__11207 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11195, G__11196, G__11197, G__11198, G__11199, G__11200, G__11201, G__11202, G__11203, G__11204, G__11205, G__11206, G__11207) : target_fn.call(null, G__11195, G__11196, G__11197, G__11198, G__11199, G__11200, G__11201, G__11202, G__11203, G__11204, G__11205, G__11206, G__11207);
  };
  var G__11873__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11208 = a;
      var G__11209 = b;
      var G__11210 = c;
      var G__11211 = d;
      var G__11212 = e;
      var G__11213 = f;
      var G__11214 = g;
      var G__11215 = h;
      var G__11216 = i;
      var G__11217 = j;
      var G__11218 = k;
      var G__11219 = l;
      var G__11220 = m;
      var G__11221 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11208, G__11209, G__11210, G__11211, G__11212, G__11213, G__11214, G__11215, G__11216, G__11217, G__11218, G__11219, G__11220, G__11221) : self__.dispatch_fn.call(null, G__11208, G__11209, G__11210, G__11211, G__11212, G__11213, G__11214, G__11215, G__11216, G__11217, G__11218, G__11219, G__11220, G__11221);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11222 = a;
    var G__11223 = b;
    var G__11224 = c;
    var G__11225 = d;
    var G__11226 = e;
    var G__11227 = f;
    var G__11228 = g;
    var G__11229 = h;
    var G__11230 = i;
    var G__11231 = j;
    var G__11232 = k;
    var G__11233 = l;
    var G__11234 = m;
    var G__11235 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11222, G__11223, G__11224, G__11225, G__11226, G__11227, G__11228, G__11229, G__11230, G__11231, G__11232, G__11233, G__11234, G__11235) : target_fn.call(null, G__11222, G__11223, G__11224, G__11225, G__11226, G__11227, G__11228, G__11229, G__11230, G__11231, G__11232, G__11233, G__11234, G__11235);
  };
  var G__11873__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11236 = a;
      var G__11237 = b;
      var G__11238 = c;
      var G__11239 = d;
      var G__11240 = e;
      var G__11241 = f;
      var G__11242 = g;
      var G__11243 = h;
      var G__11244 = i;
      var G__11245 = j;
      var G__11246 = k;
      var G__11247 = l;
      var G__11248 = m;
      var G__11249 = n;
      var G__11250 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11236, G__11237, G__11238, G__11239, G__11240, G__11241, G__11242, G__11243, G__11244, G__11245, G__11246, G__11247, G__11248, G__11249, G__11250) : self__.dispatch_fn.call(null, G__11236, G__11237, G__11238, G__11239, G__11240, G__11241, G__11242, G__11243, G__11244, G__11245, G__11246, G__11247, G__11248, G__11249, G__11250);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11251 = a;
    var G__11252 = b;
    var G__11253 = c;
    var G__11254 = d;
    var G__11255 = e;
    var G__11256 = f;
    var G__11257 = g;
    var G__11258 = h;
    var G__11259 = i;
    var G__11260 = j;
    var G__11261 = k;
    var G__11262 = l;
    var G__11263 = m;
    var G__11264 = n;
    var G__11265 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11251, G__11252, G__11253, G__11254, G__11255, G__11256, G__11257, G__11258, G__11259, G__11260, G__11261, G__11262, G__11263, G__11264, G__11265) : target_fn.call(null, G__11251, G__11252, G__11253, G__11254, G__11255, G__11256, G__11257, G__11258, G__11259, G__11260, G__11261, G__11262, G__11263, G__11264, G__11265);
  };
  var G__11873__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11266 = a;
      var G__11267 = b;
      var G__11268 = c;
      var G__11269 = d;
      var G__11270 = e;
      var G__11271 = f;
      var G__11272 = g;
      var G__11273 = h;
      var G__11274 = i;
      var G__11275 = j;
      var G__11276 = k;
      var G__11277 = l;
      var G__11278 = m;
      var G__11279 = n;
      var G__11280 = o;
      var G__11281 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11266, G__11267, G__11268, G__11269, G__11270, G__11271, G__11272, G__11273, G__11274, G__11275, G__11276, G__11277, G__11278, G__11279, G__11280, G__11281) : self__.dispatch_fn.call(null, G__11266, G__11267, G__11268, G__11269, G__11270, G__11271, G__11272, G__11273, G__11274, G__11275, G__11276, G__11277, G__11278, G__11279, G__11280, G__11281);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11282 = a;
    var G__11283 = b;
    var G__11284 = c;
    var G__11285 = d;
    var G__11286 = e;
    var G__11287 = f;
    var G__11288 = g;
    var G__11289 = h;
    var G__11290 = i;
    var G__11291 = j;
    var G__11292 = k;
    var G__11293 = l;
    var G__11294 = m;
    var G__11295 = n;
    var G__11296 = o;
    var G__11297 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11282, G__11283, G__11284, G__11285, G__11286, G__11287, G__11288, G__11289, G__11290, G__11291, G__11292, G__11293, G__11294, G__11295, G__11296, G__11297) : target_fn.call(null, G__11282, G__11283, G__11284, G__11285, G__11286, G__11287, G__11288, G__11289, G__11290, G__11291, G__11292, G__11293, G__11294, G__11295, G__11296, G__11297);
  };
  var G__11873__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11298 = a;
      var G__11299 = b;
      var G__11300 = c;
      var G__11301 = d;
      var G__11302 = e;
      var G__11303 = f;
      var G__11304 = g;
      var G__11305 = h;
      var G__11306 = i;
      var G__11307 = j;
      var G__11308 = k;
      var G__11309 = l;
      var G__11310 = m;
      var G__11311 = n;
      var G__11312 = o;
      var G__11313 = p;
      var G__11314 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11298, G__11299, G__11300, G__11301, G__11302, G__11303, G__11304, G__11305, G__11306, G__11307, G__11308, G__11309, G__11310, G__11311, G__11312, G__11313, G__11314) : self__.dispatch_fn.call(null, G__11298, G__11299, G__11300, G__11301, G__11302, G__11303, G__11304, G__11305, G__11306, G__11307, G__11308, G__11309, G__11310, G__11311, G__11312, G__11313, G__11314);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11315 = a;
    var G__11316 = b;
    var G__11317 = c;
    var G__11318 = d;
    var G__11319 = e;
    var G__11320 = f;
    var G__11321 = g;
    var G__11322 = h;
    var G__11323 = i;
    var G__11324 = j;
    var G__11325 = k;
    var G__11326 = l;
    var G__11327 = m;
    var G__11328 = n;
    var G__11329 = o;
    var G__11330 = p;
    var G__11331 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11315, G__11316, G__11317, G__11318, G__11319, G__11320, G__11321, G__11322, G__11323, G__11324, G__11325, G__11326, G__11327, G__11328, G__11329, G__11330, G__11331) : target_fn.call(null, G__11315, G__11316, G__11317, G__11318, G__11319, G__11320, G__11321, G__11322, G__11323, G__11324, G__11325, G__11326, G__11327, G__11328, G__11329, G__11330, G__11331);
  };
  var G__11873__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11332 = a;
      var G__11333 = b;
      var G__11334 = c;
      var G__11335 = d;
      var G__11336 = e;
      var G__11337 = f;
      var G__11338 = g;
      var G__11339 = h;
      var G__11340 = i;
      var G__11341 = j;
      var G__11342 = k;
      var G__11343 = l;
      var G__11344 = m;
      var G__11345 = n;
      var G__11346 = o;
      var G__11347 = p;
      var G__11348 = q;
      var G__11349 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11332, G__11333, G__11334, G__11335, G__11336, G__11337, G__11338, G__11339, G__11340, G__11341, G__11342, G__11343, G__11344, G__11345, G__11346, G__11347, G__11348, G__11349) : self__.dispatch_fn.call(null, G__11332, G__11333, G__11334, G__11335, G__11336, G__11337, G__11338, G__11339, G__11340, G__11341, G__11342, G__11343, G__11344, G__11345, G__11346, G__11347, G__11348, G__11349);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11350 = a;
    var G__11351 = b;
    var G__11352 = c;
    var G__11353 = d;
    var G__11354 = e;
    var G__11355 = f;
    var G__11356 = g;
    var G__11357 = h;
    var G__11358 = i;
    var G__11359 = j;
    var G__11360 = k;
    var G__11361 = l;
    var G__11362 = m;
    var G__11363 = n;
    var G__11364 = o;
    var G__11365 = p;
    var G__11366 = q;
    var G__11367 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11350, G__11351, G__11352, G__11353, G__11354, G__11355, G__11356, G__11357, G__11358, G__11359, G__11360, G__11361, G__11362, G__11363, G__11364, G__11365, G__11366, G__11367) : target_fn.call(null, G__11350, G__11351, G__11352, G__11353, G__11354, G__11355, G__11356, G__11357, G__11358, G__11359, G__11360, G__11361, G__11362, G__11363, G__11364, G__11365, G__11366, G__11367);
  };
  var G__11873__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11368 = a;
      var G__11369 = b;
      var G__11370 = c;
      var G__11371 = d;
      var G__11372 = e;
      var G__11373 = f;
      var G__11374 = g;
      var G__11375 = h;
      var G__11376 = i;
      var G__11377 = j;
      var G__11378 = k;
      var G__11379 = l;
      var G__11380 = m;
      var G__11381 = n;
      var G__11382 = o;
      var G__11383 = p;
      var G__11384 = q;
      var G__11385 = r;
      var G__11386 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11368, G__11369, G__11370, G__11371, G__11372, G__11373, G__11374, G__11375, G__11376, G__11377, G__11378, G__11379, G__11380, G__11381, G__11382, G__11383, G__11384, G__11385, G__11386) : self__.dispatch_fn.call(null, G__11368, G__11369, G__11370, G__11371, G__11372, G__11373, G__11374, G__11375, G__11376, G__11377, G__11378, G__11379, G__11380, G__11381, G__11382, G__11383, G__11384, 
      G__11385, G__11386);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11387 = a;
    var G__11388 = b;
    var G__11389 = c;
    var G__11390 = d;
    var G__11391 = e;
    var G__11392 = f;
    var G__11393 = g;
    var G__11394 = h;
    var G__11395 = i;
    var G__11396 = j;
    var G__11397 = k;
    var G__11398 = l;
    var G__11399 = m;
    var G__11400 = n;
    var G__11401 = o;
    var G__11402 = p;
    var G__11403 = q;
    var G__11404 = r;
    var G__11405 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11387, G__11388, G__11389, G__11390, G__11391, G__11392, G__11393, G__11394, G__11395, G__11396, G__11397, G__11398, G__11399, G__11400, G__11401, G__11402, G__11403, G__11404, G__11405) : target_fn.call(null, G__11387, G__11388, G__11389, G__11390, G__11391, G__11392, G__11393, G__11394, G__11395, G__11396, G__11397, G__11398, G__11399, G__11400, G__11401, G__11402, G__11403, G__11404, G__11405);
  };
  var G__11873__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11406 = a;
      var G__11407 = b;
      var G__11408 = c;
      var G__11409 = d;
      var G__11410 = e;
      var G__11411 = f;
      var G__11412 = g;
      var G__11413 = h;
      var G__11414 = i;
      var G__11415 = j;
      var G__11416 = k;
      var G__11417 = l;
      var G__11418 = m;
      var G__11419 = n;
      var G__11420 = o;
      var G__11421 = p;
      var G__11422 = q;
      var G__11423 = r;
      var G__11424 = s;
      var G__11425 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11406, G__11407, G__11408, G__11409, G__11410, G__11411, G__11412, G__11413, G__11414, G__11415, G__11416, G__11417, G__11418, G__11419, G__11420, G__11421, G__11422, G__11423, G__11424, G__11425) : self__.dispatch_fn.call(null, G__11406, G__11407, G__11408, G__11409, G__11410, G__11411, G__11412, G__11413, G__11414, G__11415, G__11416, G__11417, G__11418, G__11419, G__11420, G__11421, 
      G__11422, G__11423, G__11424, G__11425);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11426 = a;
    var G__11427 = b;
    var G__11428 = c;
    var G__11429 = d;
    var G__11430 = e;
    var G__11431 = f;
    var G__11432 = g;
    var G__11433 = h;
    var G__11434 = i;
    var G__11435 = j;
    var G__11436 = k;
    var G__11437 = l;
    var G__11438 = m;
    var G__11439 = n;
    var G__11440 = o;
    var G__11441 = p;
    var G__11442 = q;
    var G__11443 = r;
    var G__11444 = s;
    var G__11445 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11426, G__11427, G__11428, G__11429, G__11430, G__11431, G__11432, G__11433, G__11434, G__11435, G__11436, G__11437, G__11438, G__11439, G__11440, G__11441, G__11442, G__11443, G__11444, G__11445) : target_fn.call(null, G__11426, G__11427, G__11428, G__11429, G__11430, G__11431, G__11432, G__11433, G__11434, G__11435, G__11436, G__11437, G__11438, G__11439, G__11440, G__11441, G__11442, G__11443, G__11444, 
    G__11445);
  };
  var G__11873__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__11873 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11873__1.call(this, self__);
      case 2:
        return G__11873__2.call(this, self__, a);
      case 3:
        return G__11873__3.call(this, self__, a, b);
      case 4:
        return G__11873__4.call(this, self__, a, b, c);
      case 5:
        return G__11873__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11873__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11873__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11873__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11873__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11873__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11873__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11873__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11873__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11873__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11873__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11873__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11873__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11873__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11873__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11873__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11873__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11873__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11873.cljs$core$IFn$_invoke$arity$1 = G__11873__1;
  G__11873.cljs$core$IFn$_invoke$arity$2 = G__11873__2;
  G__11873.cljs$core$IFn$_invoke$arity$3 = G__11873__3;
  G__11873.cljs$core$IFn$_invoke$arity$4 = G__11873__4;
  G__11873.cljs$core$IFn$_invoke$arity$5 = G__11873__5;
  G__11873.cljs$core$IFn$_invoke$arity$6 = G__11873__6;
  G__11873.cljs$core$IFn$_invoke$arity$7 = G__11873__7;
  G__11873.cljs$core$IFn$_invoke$arity$8 = G__11873__8;
  G__11873.cljs$core$IFn$_invoke$arity$9 = G__11873__9;
  G__11873.cljs$core$IFn$_invoke$arity$10 = G__11873__10;
  G__11873.cljs$core$IFn$_invoke$arity$11 = G__11873__11;
  G__11873.cljs$core$IFn$_invoke$arity$12 = G__11873__12;
  G__11873.cljs$core$IFn$_invoke$arity$13 = G__11873__13;
  G__11873.cljs$core$IFn$_invoke$arity$14 = G__11873__14;
  G__11873.cljs$core$IFn$_invoke$arity$15 = G__11873__15;
  G__11873.cljs$core$IFn$_invoke$arity$16 = G__11873__16;
  G__11873.cljs$core$IFn$_invoke$arity$17 = G__11873__17;
  G__11873.cljs$core$IFn$_invoke$arity$18 = G__11873__18;
  G__11873.cljs$core$IFn$_invoke$arity$19 = G__11873__19;
  G__11873.cljs$core$IFn$_invoke$arity$20 = G__11873__20;
  G__11873.cljs$core$IFn$_invoke$arity$21 = G__11873__21;
  G__11873.cljs$core$IFn$_invoke$arity$22 = G__11873__22;
  return G__11873;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args11025) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11025)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11446 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11446) : self__.dispatch_fn.call(null, G__11446);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11447 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11447) : target_fn.call(null, G__11447);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11448 = a;
    var G__11449 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11448, G__11449) : self__.dispatch_fn.call(null, G__11448, G__11449);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11450 = a;
  var G__11451 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11450, G__11451) : target_fn.call(null, G__11450, G__11451);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11452 = a;
    var G__11453 = b;
    var G__11454 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11452, G__11453, G__11454) : self__.dispatch_fn.call(null, G__11452, G__11453, G__11454);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11455 = a;
  var G__11456 = b;
  var G__11457 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11455, G__11456, G__11457) : target_fn.call(null, G__11455, G__11456, G__11457);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11458 = a;
    var G__11459 = b;
    var G__11460 = c;
    var G__11461 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11458, G__11459, G__11460, G__11461) : self__.dispatch_fn.call(null, G__11458, G__11459, G__11460, G__11461);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11462 = a;
  var G__11463 = b;
  var G__11464 = c;
  var G__11465 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11462, G__11463, G__11464, G__11465) : target_fn.call(null, G__11462, G__11463, G__11464, G__11465);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11466 = a;
    var G__11467 = b;
    var G__11468 = c;
    var G__11469 = d;
    var G__11470 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11466, G__11467, G__11468, G__11469, G__11470) : self__.dispatch_fn.call(null, G__11466, G__11467, G__11468, G__11469, G__11470);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11471 = a;
  var G__11472 = b;
  var G__11473 = c;
  var G__11474 = d;
  var G__11475 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11471, G__11472, G__11473, G__11474, G__11475) : target_fn.call(null, G__11471, G__11472, G__11473, G__11474, G__11475);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11476 = a;
    var G__11477 = b;
    var G__11478 = c;
    var G__11479 = d;
    var G__11480 = e;
    var G__11481 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11476, G__11477, G__11478, G__11479, G__11480, G__11481) : self__.dispatch_fn.call(null, G__11476, G__11477, G__11478, G__11479, G__11480, G__11481);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11482 = a;
  var G__11483 = b;
  var G__11484 = c;
  var G__11485 = d;
  var G__11486 = e;
  var G__11487 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11482, G__11483, G__11484, G__11485, G__11486, G__11487) : target_fn.call(null, G__11482, G__11483, G__11484, G__11485, G__11486, G__11487);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11488 = a;
    var G__11489 = b;
    var G__11490 = c;
    var G__11491 = d;
    var G__11492 = e;
    var G__11493 = f;
    var G__11494 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11488, G__11489, G__11490, G__11491, G__11492, G__11493, G__11494) : self__.dispatch_fn.call(null, G__11488, G__11489, G__11490, G__11491, G__11492, G__11493, G__11494);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11495 = a;
  var G__11496 = b;
  var G__11497 = c;
  var G__11498 = d;
  var G__11499 = e;
  var G__11500 = f;
  var G__11501 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11495, G__11496, G__11497, G__11498, G__11499, G__11500, G__11501) : target_fn.call(null, G__11495, G__11496, G__11497, G__11498, G__11499, G__11500, G__11501);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11502 = a;
    var G__11503 = b;
    var G__11504 = c;
    var G__11505 = d;
    var G__11506 = e;
    var G__11507 = f;
    var G__11508 = g;
    var G__11509 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11502, G__11503, G__11504, G__11505, G__11506, G__11507, G__11508, G__11509) : self__.dispatch_fn.call(null, G__11502, G__11503, G__11504, G__11505, G__11506, G__11507, G__11508, G__11509);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11510 = a;
  var G__11511 = b;
  var G__11512 = c;
  var G__11513 = d;
  var G__11514 = e;
  var G__11515 = f;
  var G__11516 = g;
  var G__11517 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11510, G__11511, G__11512, G__11513, G__11514, G__11515, G__11516, G__11517) : target_fn.call(null, G__11510, G__11511, G__11512, G__11513, G__11514, G__11515, G__11516, G__11517);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11518 = a;
    var G__11519 = b;
    var G__11520 = c;
    var G__11521 = d;
    var G__11522 = e;
    var G__11523 = f;
    var G__11524 = g;
    var G__11525 = h;
    var G__11526 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11518, G__11519, G__11520, G__11521, G__11522, G__11523, G__11524, G__11525, G__11526) : self__.dispatch_fn.call(null, G__11518, G__11519, G__11520, G__11521, G__11522, G__11523, G__11524, G__11525, G__11526);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11527 = a;
  var G__11528 = b;
  var G__11529 = c;
  var G__11530 = d;
  var G__11531 = e;
  var G__11532 = f;
  var G__11533 = g;
  var G__11534 = h;
  var G__11535 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11527, G__11528, G__11529, G__11530, G__11531, G__11532, G__11533, G__11534, G__11535) : target_fn.call(null, G__11527, G__11528, G__11529, G__11530, G__11531, G__11532, G__11533, G__11534, G__11535);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11536 = a;
    var G__11537 = b;
    var G__11538 = c;
    var G__11539 = d;
    var G__11540 = e;
    var G__11541 = f;
    var G__11542 = g;
    var G__11543 = h;
    var G__11544 = i;
    var G__11545 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11536, G__11537, G__11538, G__11539, G__11540, G__11541, G__11542, G__11543, G__11544, G__11545) : self__.dispatch_fn.call(null, G__11536, G__11537, G__11538, G__11539, G__11540, G__11541, G__11542, G__11543, G__11544, G__11545);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11546 = a;
  var G__11547 = b;
  var G__11548 = c;
  var G__11549 = d;
  var G__11550 = e;
  var G__11551 = f;
  var G__11552 = g;
  var G__11553 = h;
  var G__11554 = i;
  var G__11555 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11546, G__11547, G__11548, G__11549, G__11550, G__11551, G__11552, G__11553, G__11554, G__11555) : target_fn.call(null, G__11546, G__11547, G__11548, G__11549, G__11550, G__11551, G__11552, G__11553, G__11554, G__11555);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11556 = a;
    var G__11557 = b;
    var G__11558 = c;
    var G__11559 = d;
    var G__11560 = e;
    var G__11561 = f;
    var G__11562 = g;
    var G__11563 = h;
    var G__11564 = i;
    var G__11565 = j;
    var G__11566 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11556, G__11557, G__11558, G__11559, G__11560, G__11561, G__11562, G__11563, G__11564, G__11565, G__11566) : self__.dispatch_fn.call(null, G__11556, G__11557, G__11558, G__11559, G__11560, G__11561, G__11562, G__11563, G__11564, G__11565, G__11566);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11567 = a;
  var G__11568 = b;
  var G__11569 = c;
  var G__11570 = d;
  var G__11571 = e;
  var G__11572 = f;
  var G__11573 = g;
  var G__11574 = h;
  var G__11575 = i;
  var G__11576 = j;
  var G__11577 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11567, G__11568, G__11569, G__11570, G__11571, G__11572, G__11573, G__11574, G__11575, G__11576, G__11577) : target_fn.call(null, G__11567, G__11568, G__11569, G__11570, G__11571, G__11572, G__11573, G__11574, G__11575, G__11576, G__11577);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11578 = a;
    var G__11579 = b;
    var G__11580 = c;
    var G__11581 = d;
    var G__11582 = e;
    var G__11583 = f;
    var G__11584 = g;
    var G__11585 = h;
    var G__11586 = i;
    var G__11587 = j;
    var G__11588 = k;
    var G__11589 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11578, G__11579, G__11580, G__11581, G__11582, G__11583, G__11584, G__11585, G__11586, G__11587, G__11588, G__11589) : self__.dispatch_fn.call(null, G__11578, G__11579, G__11580, G__11581, G__11582, G__11583, G__11584, G__11585, G__11586, G__11587, G__11588, G__11589);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11590 = a;
  var G__11591 = b;
  var G__11592 = c;
  var G__11593 = d;
  var G__11594 = e;
  var G__11595 = f;
  var G__11596 = g;
  var G__11597 = h;
  var G__11598 = i;
  var G__11599 = j;
  var G__11600 = k;
  var G__11601 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11590, G__11591, G__11592, G__11593, G__11594, G__11595, G__11596, G__11597, G__11598, G__11599, G__11600, G__11601) : target_fn.call(null, G__11590, G__11591, G__11592, G__11593, G__11594, G__11595, G__11596, G__11597, G__11598, G__11599, G__11600, G__11601);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11602 = a;
    var G__11603 = b;
    var G__11604 = c;
    var G__11605 = d;
    var G__11606 = e;
    var G__11607 = f;
    var G__11608 = g;
    var G__11609 = h;
    var G__11610 = i;
    var G__11611 = j;
    var G__11612 = k;
    var G__11613 = l;
    var G__11614 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11602, G__11603, G__11604, G__11605, G__11606, G__11607, G__11608, G__11609, G__11610, G__11611, G__11612, G__11613, G__11614) : self__.dispatch_fn.call(null, G__11602, G__11603, G__11604, G__11605, G__11606, G__11607, G__11608, G__11609, G__11610, G__11611, G__11612, G__11613, G__11614);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11615 = a;
  var G__11616 = b;
  var G__11617 = c;
  var G__11618 = d;
  var G__11619 = e;
  var G__11620 = f;
  var G__11621 = g;
  var G__11622 = h;
  var G__11623 = i;
  var G__11624 = j;
  var G__11625 = k;
  var G__11626 = l;
  var G__11627 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11615, G__11616, G__11617, G__11618, G__11619, G__11620, G__11621, G__11622, G__11623, G__11624, G__11625, G__11626, G__11627) : target_fn.call(null, G__11615, G__11616, G__11617, G__11618, G__11619, G__11620, G__11621, G__11622, G__11623, G__11624, G__11625, G__11626, G__11627);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11628 = a;
    var G__11629 = b;
    var G__11630 = c;
    var G__11631 = d;
    var G__11632 = e;
    var G__11633 = f;
    var G__11634 = g;
    var G__11635 = h;
    var G__11636 = i;
    var G__11637 = j;
    var G__11638 = k;
    var G__11639 = l;
    var G__11640 = m;
    var G__11641 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11628, G__11629, G__11630, G__11631, G__11632, G__11633, G__11634, G__11635, G__11636, G__11637, G__11638, G__11639, G__11640, G__11641) : self__.dispatch_fn.call(null, G__11628, G__11629, G__11630, G__11631, G__11632, G__11633, G__11634, G__11635, G__11636, G__11637, G__11638, G__11639, G__11640, G__11641);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11642 = a;
  var G__11643 = b;
  var G__11644 = c;
  var G__11645 = d;
  var G__11646 = e;
  var G__11647 = f;
  var G__11648 = g;
  var G__11649 = h;
  var G__11650 = i;
  var G__11651 = j;
  var G__11652 = k;
  var G__11653 = l;
  var G__11654 = m;
  var G__11655 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11642, G__11643, G__11644, G__11645, G__11646, G__11647, G__11648, G__11649, G__11650, G__11651, G__11652, G__11653, G__11654, G__11655) : target_fn.call(null, G__11642, G__11643, G__11644, G__11645, G__11646, G__11647, G__11648, G__11649, G__11650, G__11651, G__11652, G__11653, G__11654, G__11655);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11656 = a;
    var G__11657 = b;
    var G__11658 = c;
    var G__11659 = d;
    var G__11660 = e;
    var G__11661 = f;
    var G__11662 = g;
    var G__11663 = h;
    var G__11664 = i;
    var G__11665 = j;
    var G__11666 = k;
    var G__11667 = l;
    var G__11668 = m;
    var G__11669 = n;
    var G__11670 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11656, G__11657, G__11658, G__11659, G__11660, G__11661, G__11662, G__11663, G__11664, G__11665, G__11666, G__11667, G__11668, G__11669, G__11670) : self__.dispatch_fn.call(null, G__11656, G__11657, G__11658, G__11659, G__11660, G__11661, G__11662, G__11663, G__11664, G__11665, G__11666, G__11667, G__11668, G__11669, G__11670);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11671 = a;
  var G__11672 = b;
  var G__11673 = c;
  var G__11674 = d;
  var G__11675 = e;
  var G__11676 = f;
  var G__11677 = g;
  var G__11678 = h;
  var G__11679 = i;
  var G__11680 = j;
  var G__11681 = k;
  var G__11682 = l;
  var G__11683 = m;
  var G__11684 = n;
  var G__11685 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11671, G__11672, G__11673, G__11674, G__11675, G__11676, G__11677, G__11678, G__11679, G__11680, G__11681, G__11682, G__11683, G__11684, G__11685) : target_fn.call(null, G__11671, G__11672, G__11673, G__11674, G__11675, G__11676, G__11677, G__11678, G__11679, G__11680, G__11681, G__11682, G__11683, G__11684, G__11685);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11686 = a;
    var G__11687 = b;
    var G__11688 = c;
    var G__11689 = d;
    var G__11690 = e;
    var G__11691 = f;
    var G__11692 = g;
    var G__11693 = h;
    var G__11694 = i;
    var G__11695 = j;
    var G__11696 = k;
    var G__11697 = l;
    var G__11698 = m;
    var G__11699 = n;
    var G__11700 = o;
    var G__11701 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11686, G__11687, G__11688, G__11689, G__11690, G__11691, G__11692, G__11693, G__11694, G__11695, G__11696, G__11697, G__11698, G__11699, G__11700, G__11701) : self__.dispatch_fn.call(null, G__11686, G__11687, G__11688, G__11689, G__11690, G__11691, G__11692, G__11693, G__11694, G__11695, G__11696, G__11697, G__11698, G__11699, G__11700, G__11701);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11702 = a;
  var G__11703 = b;
  var G__11704 = c;
  var G__11705 = d;
  var G__11706 = e;
  var G__11707 = f;
  var G__11708 = g;
  var G__11709 = h;
  var G__11710 = i;
  var G__11711 = j;
  var G__11712 = k;
  var G__11713 = l;
  var G__11714 = m;
  var G__11715 = n;
  var G__11716 = o;
  var G__11717 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11702, G__11703, G__11704, G__11705, G__11706, G__11707, G__11708, G__11709, G__11710, G__11711, G__11712, G__11713, G__11714, G__11715, G__11716, G__11717) : target_fn.call(null, G__11702, G__11703, G__11704, G__11705, G__11706, G__11707, G__11708, G__11709, G__11710, G__11711, G__11712, G__11713, G__11714, G__11715, G__11716, G__11717);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11718 = a;
    var G__11719 = b;
    var G__11720 = c;
    var G__11721 = d;
    var G__11722 = e;
    var G__11723 = f;
    var G__11724 = g;
    var G__11725 = h;
    var G__11726 = i;
    var G__11727 = j;
    var G__11728 = k;
    var G__11729 = l;
    var G__11730 = m;
    var G__11731 = n;
    var G__11732 = o;
    var G__11733 = p;
    var G__11734 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11718, G__11719, G__11720, G__11721, G__11722, G__11723, G__11724, G__11725, G__11726, G__11727, G__11728, G__11729, G__11730, G__11731, G__11732, G__11733, G__11734) : self__.dispatch_fn.call(null, G__11718, G__11719, G__11720, G__11721, G__11722, G__11723, G__11724, G__11725, G__11726, G__11727, G__11728, G__11729, G__11730, G__11731, G__11732, G__11733, G__11734);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11735 = a;
  var G__11736 = b;
  var G__11737 = c;
  var G__11738 = d;
  var G__11739 = e;
  var G__11740 = f;
  var G__11741 = g;
  var G__11742 = h;
  var G__11743 = i;
  var G__11744 = j;
  var G__11745 = k;
  var G__11746 = l;
  var G__11747 = m;
  var G__11748 = n;
  var G__11749 = o;
  var G__11750 = p;
  var G__11751 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11735, G__11736, G__11737, G__11738, G__11739, G__11740, G__11741, G__11742, G__11743, G__11744, G__11745, G__11746, G__11747, G__11748, G__11749, G__11750, G__11751) : target_fn.call(null, G__11735, G__11736, G__11737, G__11738, G__11739, G__11740, G__11741, G__11742, G__11743, G__11744, G__11745, G__11746, G__11747, G__11748, G__11749, G__11750, G__11751);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11752 = a;
    var G__11753 = b;
    var G__11754 = c;
    var G__11755 = d;
    var G__11756 = e;
    var G__11757 = f;
    var G__11758 = g;
    var G__11759 = h;
    var G__11760 = i;
    var G__11761 = j;
    var G__11762 = k;
    var G__11763 = l;
    var G__11764 = m;
    var G__11765 = n;
    var G__11766 = o;
    var G__11767 = p;
    var G__11768 = q;
    var G__11769 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11752, G__11753, G__11754, G__11755, G__11756, G__11757, G__11758, G__11759, G__11760, G__11761, G__11762, G__11763, G__11764, G__11765, G__11766, G__11767, G__11768, G__11769) : self__.dispatch_fn.call(null, G__11752, G__11753, G__11754, G__11755, G__11756, G__11757, G__11758, G__11759, G__11760, G__11761, G__11762, G__11763, G__11764, G__11765, G__11766, G__11767, G__11768, G__11769);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11770 = a;
  var G__11771 = b;
  var G__11772 = c;
  var G__11773 = d;
  var G__11774 = e;
  var G__11775 = f;
  var G__11776 = g;
  var G__11777 = h;
  var G__11778 = i;
  var G__11779 = j;
  var G__11780 = k;
  var G__11781 = l;
  var G__11782 = m;
  var G__11783 = n;
  var G__11784 = o;
  var G__11785 = p;
  var G__11786 = q;
  var G__11787 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11770, G__11771, G__11772, G__11773, G__11774, G__11775, G__11776, G__11777, G__11778, G__11779, G__11780, G__11781, G__11782, G__11783, G__11784, G__11785, G__11786, G__11787) : target_fn.call(null, G__11770, G__11771, G__11772, G__11773, G__11774, G__11775, G__11776, G__11777, G__11778, G__11779, G__11780, G__11781, G__11782, G__11783, G__11784, G__11785, G__11786, G__11787);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11788 = a;
    var G__11789 = b;
    var G__11790 = c;
    var G__11791 = d;
    var G__11792 = e;
    var G__11793 = f;
    var G__11794 = g;
    var G__11795 = h;
    var G__11796 = i;
    var G__11797 = j;
    var G__11798 = k;
    var G__11799 = l;
    var G__11800 = m;
    var G__11801 = n;
    var G__11802 = o;
    var G__11803 = p;
    var G__11804 = q;
    var G__11805 = r;
    var G__11806 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11788, G__11789, G__11790, G__11791, G__11792, G__11793, G__11794, G__11795, G__11796, G__11797, G__11798, G__11799, G__11800, G__11801, G__11802, G__11803, G__11804, G__11805, G__11806) : self__.dispatch_fn.call(null, G__11788, G__11789, G__11790, G__11791, G__11792, G__11793, G__11794, G__11795, G__11796, G__11797, G__11798, G__11799, G__11800, G__11801, G__11802, G__11803, G__11804, 
    G__11805, G__11806);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11807 = a;
  var G__11808 = b;
  var G__11809 = c;
  var G__11810 = d;
  var G__11811 = e;
  var G__11812 = f;
  var G__11813 = g;
  var G__11814 = h;
  var G__11815 = i;
  var G__11816 = j;
  var G__11817 = k;
  var G__11818 = l;
  var G__11819 = m;
  var G__11820 = n;
  var G__11821 = o;
  var G__11822 = p;
  var G__11823 = q;
  var G__11824 = r;
  var G__11825 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11807, G__11808, G__11809, G__11810, G__11811, G__11812, G__11813, G__11814, G__11815, G__11816, G__11817, G__11818, G__11819, G__11820, G__11821, G__11822, G__11823, G__11824, G__11825) : target_fn.call(null, G__11807, G__11808, G__11809, G__11810, G__11811, G__11812, G__11813, G__11814, G__11815, G__11816, G__11817, G__11818, G__11819, G__11820, G__11821, G__11822, G__11823, G__11824, G__11825);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11826 = a;
    var G__11827 = b;
    var G__11828 = c;
    var G__11829 = d;
    var G__11830 = e;
    var G__11831 = f;
    var G__11832 = g;
    var G__11833 = h;
    var G__11834 = i;
    var G__11835 = j;
    var G__11836 = k;
    var G__11837 = l;
    var G__11838 = m;
    var G__11839 = n;
    var G__11840 = o;
    var G__11841 = p;
    var G__11842 = q;
    var G__11843 = r;
    var G__11844 = s;
    var G__11845 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11826, G__11827, G__11828, G__11829, G__11830, G__11831, G__11832, G__11833, G__11834, G__11835, G__11836, G__11837, G__11838, G__11839, G__11840, G__11841, G__11842, G__11843, G__11844, G__11845) : self__.dispatch_fn.call(null, G__11826, G__11827, G__11828, G__11829, G__11830, G__11831, G__11832, G__11833, G__11834, G__11835, G__11836, G__11837, G__11838, G__11839, G__11840, G__11841, 
    G__11842, G__11843, G__11844, G__11845);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11846 = a;
  var G__11847 = b;
  var G__11848 = c;
  var G__11849 = d;
  var G__11850 = e;
  var G__11851 = f;
  var G__11852 = g;
  var G__11853 = h;
  var G__11854 = i;
  var G__11855 = j;
  var G__11856 = k;
  var G__11857 = l;
  var G__11858 = m;
  var G__11859 = n;
  var G__11860 = o;
  var G__11861 = p;
  var G__11862 = q;
  var G__11863 = r;
  var G__11864 = s;
  var G__11865 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11846, G__11847, G__11848, G__11849, G__11850, G__11851, G__11852, G__11853, G__11854, G__11855, G__11856, G__11857, G__11858, G__11859, G__11860, G__11861, G__11862, G__11863, G__11864, G__11865) : target_fn.call(null, G__11846, G__11847, G__11848, G__11849, G__11850, G__11851, G__11852, G__11853, G__11854, G__11855, G__11856, G__11857, G__11858, G__11859, G__11860, G__11861, G__11862, G__11863, G__11864, 
  G__11865);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__11866 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11866) : cljs.core.deref.call(null, G__11866);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__11867 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11867) : cljs.core.deref.call(null, G__11867);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__11869 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11869) : cljs.core.deref.call(null, G__11869);
  }(), function() {
    var G__11870 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11870) : cljs.core.deref.call(null, G__11870);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4420__auto__ = function() {
    var G__11871 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11871) : cljs.core.deref.call(null, G__11871);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4420__auto__)) {
    var target_fn = temp__4420__auto__;
    return target_fn;
  } else {
    var temp__4420__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4420__auto____$1)) {
      var target_fn = temp__4420__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__11872 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11872) : cljs.core.deref.call(null, G__11872);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__11868 = this$__$1;
  return goog.getUid(G__11868);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__11874 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__11874);
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__11875 = self__.uuid;
  var G__11876 = other.uuid;
  return goog.array.defaultCompare(G__11875, G__11876);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null)], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error;
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info() {
  var G__11878 = arguments.length;
  switch(G__11878) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__11884 = x;
      var G__11885 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11884, G__11885) : pred.call(null, G__11884, G__11885);
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(function() {
        var G__11886 = y;
        var G__11887 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11886, G__11887) : pred.call(null, G__11886, G__11887);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 6291712;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__11888 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__11888) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
goog.provide("subpar.paredit");
goog.require("cljs.core");
subpar.paredit.code = "c";
subpar.paredit.cmmnt = ";";
subpar.paredit.string = '"';
subpar.paredit.openers = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["(", null, "[", null, "{", null], null), null);
subpar.paredit.closers = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [")", null, "]", null, "}", null], null), null);
subpar.paredit.opener_QMARK_ = function subpar$paredit$opener_QMARK_(a) {
  return cljs.core.contains_QMARK_.call(null, subpar.paredit.openers, a);
};
subpar.paredit.closer_QMARK_ = function subpar$paredit$closer_QMARK_(a) {
  return cljs.core.contains_QMARK_.call(null, subpar.paredit.closers, a);
};
subpar.paredit.whitespace_QMARK_ = function subpar$paredit$whitespace_QMARK_(x) {
  return cljs.core._EQ_.call(null, x, "\t") || cljs.core._EQ_.call(null, x, " ") || cljs.core._EQ_.call(null, x, "\n");
};
subpar.paredit.get_opening_delimiter_index_with_parse = function subpar$paredit$get_opening_delimiter_index_with_parse(p, i) {
  return cljs.core.nth.call(null, cljs.core.nth.call(null, (new cljs.core.Keyword(null, "chars", "chars", -1094630317)).cljs$core$IFn$_invoke$arity$1(p), i), 1);
};
subpar.paredit.get_closing_delimiter_index_with_parse = function subpar$paredit$get_closing_delimiter_index_with_parse(p, i) {
  return cljs.core.get_in.call(null, p, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "families", "families", 255079231), subpar.paredit.get_opening_delimiter_index_with_parse.call(null, p, i), new cljs.core.Keyword(null, "closer", "closer", 10992481)], null));
};
subpar.paredit.get_opening_delimiter_index = function subpar$paredit$get_opening_delimiter_index(s, i) {
  return subpar.paredit.get_opening_delimiter_index_with_parse.call(null, subpar.paredit.parse.call(null, s), i);
};
subpar.paredit.get_closing_delimiter_index = function subpar$paredit$get_closing_delimiter_index(s, i) {
  return subpar.paredit.get_closing_delimiter_index_with_parse.call(null, subpar.paredit.parse.call(null, s), i);
};
subpar.paredit.get_wrapper = function subpar$paredit$get_wrapper(p, i) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [subpar.paredit.get_opening_delimiter_index_with_parse.call(null, p, i), subpar.paredit.get_closing_delimiter_index_with_parse.call(null, p, i)], null);
};
subpar.paredit.get_mode = function subpar$paredit$get_mode(p, i) {
  return cljs.core.nth.call(null, cljs.core.nth.call(null, (new cljs.core.Keyword(null, "chars", "chars", -1094630317)).cljs$core$IFn$_invoke$arity$1(p), i), 0);
};
subpar.paredit.in_QMARK_ = function subpar$paredit$in_QMARK_(p, i, mode) {
  return 0 <= i && i <= cljs.core.count.call(null, (new cljs.core.Keyword(null, "chars", "chars", -1094630317)).cljs$core$IFn$_invoke$arity$1(p)) && cljs.core._EQ_.call(null, mode, subpar.paredit.get_mode.call(null, p, i));
};
subpar.paredit.in_comment_QMARK_ = function subpar$paredit$in_comment_QMARK_(p, i) {
  return subpar.paredit.in_QMARK_.call(null, p, i, subpar.paredit.cmmnt);
};
subpar.paredit.in_code_QMARK_ = function subpar$paredit$in_code_QMARK_(p, i) {
  return subpar.paredit.in_QMARK_.call(null, p, i, subpar.paredit.code);
};
subpar.paredit.in_string_QMARK_ = function subpar$paredit$in_string_QMARK_(p, i) {
  return subpar.paredit.in_QMARK_.call(null, p, i, subpar.paredit.string);
};
subpar.paredit.in_string = function subpar$paredit$in_string(s, i) {
  return subpar.paredit.in_string_QMARK_.call(null, subpar.paredit.parse.call(null, s), i);
};
subpar.paredit.n_str_QMARK_ = cljs.core.complement.call(null, subpar.paredit.in_string_QMARK_);
subpar.paredit.get_all_siblings = function subpar$paredit$get_all_siblings(i, p) {
  return cljs.core.get_in.call(null, p, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "families", "families", 255079231), subpar.paredit.get_opening_delimiter_index_with_parse.call(null, p, i), new cljs.core.Keyword(null, "children", "children", -940561982)], null));
};
subpar.paredit.get_siblings = function subpar$paredit$get_siblings(i, transform, predicate, p) {
  return cljs.core.sort.call(null, cljs.core.filter.call(null, predicate, transform.call(null, subpar.paredit.get_all_siblings.call(null, i, p))));
};
subpar.paredit.count_lines = function subpar$paredit$count_lines(s, i, j) {
  var and__4296__auto__ = i;
  if (cljs.core.truth_(and__4296__auto__)) {
    var and__4296__auto____$1 = j;
    if (cljs.core.truth_(and__4296__auto____$1)) {
      return cljs.core.count.call(null, cljs.core.filter.call(null, function(and__4296__auto____$1, and__4296__auto__) {
        return function(p1__6334_SHARP_) {
          return cljs.core._EQ_.call(null, "\n", p1__6334_SHARP_);
        };
      }(and__4296__auto____$1, and__4296__auto__), cljs.core.drop.call(null, i, cljs.core.drop_last.call(null, cljs.core.count.call(null, s) - j - 1, cljs.core.take.call(null, cljs.core.count.call(null, s), s))))) + 1;
    } else {
      return and__4296__auto____$1;
    }
  } else {
    return and__4296__auto__;
  }
};
subpar.paredit.escaped_QMARK_ = function subpar$paredit$escaped_QMARK_(s, i) {
  return cljs.core.odd_QMARK_.call(null, function() {
    var c = 0;
    var j = i - 1;
    while (true) {
      var a = cljs.core.nth.call(null, s, j, null);
      if (j < 0) {
        return c;
      } else {
        if (a == null) {
          return c;
        } else {
          if (cljs.core.not_EQ_.call(null, "\\", a)) {
            return c;
          } else {
            var G__6335 = c + 1;
            var G__6336 = j - 1;
            c = G__6335;
            j = G__6336;
            continue;
          }
        }
      }
      break;
    }
  }());
};
subpar.paredit.closes_list_QMARK_ = function subpar$paredit$closes_list_QMARK_(p, i) {
  return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([i], true), cljs.core.map.call(null, new cljs.core.Keyword(null, "closer", "closer", 10992481), cljs.core.vals.call(null, (new cljs.core.Keyword(null, "families", "families", 255079231)).cljs$core$IFn$_invoke$arity$1(p))));
};
subpar.paredit.opens_list_QMARK_ = function subpar$paredit$opens_list_QMARK_(p, i) {
  return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([i], true), cljs.core.keys.call(null, (new cljs.core.Keyword(null, "families", "families", 255079231)).cljs$core$IFn$_invoke$arity$1(p)));
};
subpar.paredit.backward_up_fn = function subpar$paredit$backward_up_fn(s, i) {
  var vec__6338 = subpar.paredit.get_wrapper.call(null, subpar.paredit.parse.call(null, s), i);
  var o = cljs.core.nth.call(null, vec__6338, 0, null);
  var c = cljs.core.nth.call(null, vec__6338, 1, null);
  if (cljs.core._EQ_.call(null, -1, o)) {
    return i;
  } else {
    return o;
  }
};
subpar.paredit.forward_delete_action = function subpar$paredit$forward_delete_action(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var h = i - 1;
  var j = i + 1;
  var c = cljs.core.nth.call(null, s, i, null);
  if (i >= cljs.core.count.call(null, s)) {
    return 0;
  } else {
    if (cljs.core.truth_(subpar.paredit.escaped_QMARK_.call(null, s, i))) {
      return 2;
    } else {
      if (cljs.core.truth_(subpar.paredit.escaped_QMARK_.call(null, s, j))) {
        return 3;
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, i], null), subpar.paredit.get_wrapper.call(null, p, i))) {
          return 2;
        } else {
          if (cljs.core.truth_(subpar.paredit.closes_list_QMARK_.call(null, p, i))) {
            return 0;
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, j], null), subpar.paredit.get_wrapper.call(null, p, j))) {
              return 3;
            } else {
              if (cljs.core.truth_(subpar.paredit.opens_list_QMARK_.call(null, p, i))) {
                return 4;
              } else {
                return 1;
              }
            }
          }
        }
      }
    }
  }
};
subpar.paredit.backward_delete_action = function subpar$paredit$backward_delete_action(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var g = i - 2;
  var h = i - 1;
  if (i <= 0) {
    return 0;
  } else {
    if (cljs.core.truth_(subpar.paredit.escaped_QMARK_.call(null, s, h))) {
      return 3;
    } else {
      if (cljs.core.truth_(subpar.paredit.escaped_QMARK_.call(null, s, i))) {
        return 2;
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [g, h], null), subpar.paredit.get_wrapper.call(null, p, h))) {
          return 3;
        } else {
          if (cljs.core.truth_(subpar.paredit.closes_list_QMARK_.call(null, p, h))) {
            return 4;
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, i], null), subpar.paredit.get_wrapper.call(null, p, i))) {
              return 2;
            } else {
              if (cljs.core.truth_(subpar.paredit.opens_list_QMARK_.call(null, p, h))) {
                return 0;
              } else {
                return 1;
              }
            }
          }
        }
      }
    }
  }
};
subpar.paredit.double_quote_action = function subpar$paredit$double_quote_action(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  if (i < 0) {
    return 0;
  } else {
    if (i >= cljs.core.count.call(null, s)) {
      return 0;
    } else {
      if (cljs.core.truth_(subpar.paredit.in_comment_QMARK_.call(null, p, i))) {
        return 3;
      } else {
        if (cljs.core.truth_(subpar.paredit.n_str_QMARK_.call(null, p, i))) {
          return 0;
        } else {
          if (cljs.core._EQ_.call(null, '"', cljs.core.nth.call(null, s, i))) {
            return 2;
          } else {
            return 1;
          }
        }
      }
    }
  }
};
subpar.paredit.close_expression_vals = function subpar$paredit$close_expression_vals(p, i) {
  var vec__6340 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__6340, 0, null);
  var c = cljs.core.nth.call(null, vec__6340, 1, null);
  if (cljs.core._EQ_.call(null, -1, o)) {
    return cljs.core.PersistentVector.EMPTY;
  } else {
    var start = function() {
      var or__4308__auto__ = cljs.core.last.call(null, subpar.paredit.get_siblings.call(null, i, cljs.core.vals, cljs.core.identity, p));
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return o;
      }
    }() + 1;
    var delete$ = cljs.core.not_EQ_.call(null, start, c);
    var dest = delete$ ? start + 1 : c + 1;
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [delete$, start, c, dest], null);
  }
};
subpar.paredit.get_start_of_next_list = function subpar$paredit$get_start_of_next_list(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var r = cljs.core.first.call(null, subpar.paredit.get_siblings.call(null, i, cljs.core.keys, function(p) {
    return function(p1__6341_SHARP_) {
      var and__4296__auto__ = p1__6341_SHARP_ >= i;
      if (and__4296__auto__) {
        return cljs.core.get_in.call(null, p, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "families", "families", 255079231), p1__6341_SHARP_], null));
      } else {
        return and__4296__auto__;
      }
    };
  }(p), p));
  if (r == null) {
    return false;
  } else {
    return r;
  }
};
subpar.paredit.forward_down_fn = function subpar$paredit$forward_down_fn(s, i) {
  var r = subpar.paredit.get_start_of_next_list.call(null, s, i);
  if (cljs.core.truth_(r)) {
    return r + 1;
  } else {
    return i;
  }
};
subpar.paredit.backward_fn = function subpar$paredit$backward_fn(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var b = cljs.core.last.call(null, subpar.paredit.get_siblings.call(null, i, cljs.core.keys, function(p) {
    return function(p1__6342_SHARP_) {
      return p1__6342_SHARP_ < i;
    };
  }(p), p));
  var o = subpar.paredit.get_opening_delimiter_index_with_parse.call(null, p, i);
  var or__4308__auto__ = b;
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    if (o < 0) {
      return 0;
    } else {
      return o;
    }
  }
};
subpar.paredit.backward_down_fn = function subpar$paredit$backward_down_fn(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var b = cljs.core.last.call(null, subpar.paredit.get_siblings.call(null, i, cljs.core.vals, function(p) {
    return function(p1__6343_SHARP_) {
      var and__4296__auto__ = p1__6343_SHARP_ < i;
      if (and__4296__auto__) {
        return subpar.paredit.closes_list_QMARK_.call(null, p, p1__6343_SHARP_);
      } else {
        return and__4296__auto__;
      }
    };
  }(p), p));
  var or__4308__auto__ = b;
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    return i;
  }
};
subpar.paredit.forward_up_fn = function subpar$paredit$forward_up_fn(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__6345 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__6345, 0, null);
  var c = cljs.core.nth.call(null, vec__6345, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  if (in_list) {
    return c + 1;
  } else {
    return i;
  }
};
subpar.paredit.forward_fn = function subpar$paredit$forward_fn(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var b = cljs.core.first.call(null, subpar.paredit.get_siblings.call(null, i, cljs.core.vals, function(p) {
    return function(p1__6346_SHARP_) {
      return p1__6346_SHARP_ >= i;
    };
  }(p), p));
  var c = subpar.paredit.get_closing_delimiter_index_with_parse.call(null, p, i);
  var l = cljs.core.count.call(null, s);
  if (cljs.core.truth_(b)) {
    return b + 1;
  } else {
    if (cljs.core.truth_(c)) {
      var x__4627__auto__ = c + 1;
      var y__4628__auto__ = l;
      return x__4627__auto__ < y__4628__auto__ ? x__4627__auto__ : y__4628__auto__;
    } else {
      return l;
    }
  }
};
subpar.paredit.forward_slurp_vals = function subpar$paredit$forward_slurp_vals(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__6349 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__6349, 0, null);
  var c = cljs.core.nth.call(null, vec__6349, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  var a = function() {
    var and__4296__auto__ = in_list;
    if (and__4296__auto__) {
      return cljs.core.nth.call(null, s, c, false);
    } else {
      return and__4296__auto__;
    }
  }();
  var d = function() {
    var and__4296__auto__ = in_list;
    if (and__4296__auto__) {
      return cljs.core.first.call(null, subpar.paredit.get_siblings.call(null, o, cljs.core.vals, function(and__4296__auto__, p, vec__6349, o, c, in_list, a) {
        return function(p1__6347_SHARP_) {
          return p1__6347_SHARP_ > c;
        };
      }(and__4296__auto__, p, vec__6349, o, c, in_list, a), p));
    } else {
      return and__4296__auto__;
    }
  }();
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = a;
    if (cljs.core.truth_(and__4296__auto__)) {
      var and__4296__auto____$1 = c;
      if (cljs.core.truth_(and__4296__auto____$1)) {
        return d;
      } else {
        return and__4296__auto____$1;
      }
    } else {
      return and__4296__auto__;
    }
  }())) {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, c, d + 1, subpar.paredit.count_lines.call(null, s, o, d + 1)], null);
  } else {
    return cljs.core.PersistentVector.EMPTY;
  }
};
subpar.paredit.backward_slurp_vals = function subpar$paredit$backward_slurp_vals(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__6352 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__6352, 0, null);
  var c = cljs.core.nth.call(null, vec__6352, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  var d = function() {
    var and__4296__auto__ = in_list;
    if (and__4296__auto__) {
      return cljs.core.last.call(null, subpar.paredit.get_siblings.call(null, o, cljs.core.keys, function(and__4296__auto__, p, vec__6352, o, c, in_list) {
        return function(p1__6350_SHARP_) {
          return p1__6350_SHARP_ < o;
        };
      }(and__4296__auto__, p, vec__6352, o, c, in_list), p));
    } else {
      return and__4296__auto__;
    }
  }();
  var a = function() {
    var and__4296__auto__ = in_list;
    if (and__4296__auto__) {
      return cljs.core.nth.call(null, s, o, false);
    } else {
      return and__4296__auto__;
    }
  }();
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = a;
    if (cljs.core.truth_(and__4296__auto__)) {
      return d;
    } else {
      return and__4296__auto__;
    }
  }())) {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, o, d, subpar.paredit.count_lines.call(null, s, d, c)], null);
  } else {
    return cljs.core.PersistentVector.EMPTY;
  }
};
subpar.paredit.forward_barf_vals = function subpar$paredit$forward_barf_vals(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__6354 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__6354, 0, null);
  var c = cljs.core.nth.call(null, vec__6354, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  var endings = function() {
    var and__4296__auto__ = in_list;
    if (and__4296__auto__) {
      return subpar.paredit.get_siblings.call(null, i, cljs.core.vals, cljs.core.constantly.call(null, true), p);
    } else {
      return and__4296__auto__;
    }
  }();
  var a = function() {
    var and__4296__auto__ = c;
    if (cljs.core.truth_(and__4296__auto__)) {
      var and__4296__auto____$1 = in_list;
      if (and__4296__auto____$1) {
        return cljs.core.nth.call(null, s, c, null);
      } else {
        return and__4296__auto____$1;
      }
    } else {
      return and__4296__auto__;
    }
  }();
  var r = function() {
    var or__4308__auto__ = subpar.paredit.count_lines.call(null, s, o, c);
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return 1;
    }
  }();
  var num = cljs.core.truth_(endings) ? cljs.core.count.call(null, endings) : 0;
  if (num > 1) {
    return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, c, cljs.core.nth.call(null, endings, num - 2) + 1, false, r, o], null);
  } else {
    if (cljs.core._EQ_.call(null, num, 1)) {
      return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, c, o + 1, true, r, o], null);
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }
};
subpar.paredit.backward_barf_vals = function subpar$paredit$backward_barf_vals(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__6356 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__6356, 0, null);
  var c = cljs.core.nth.call(null, vec__6356, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  var starts = function() {
    var and__4296__auto__ = in_list;
    if (and__4296__auto__) {
      return subpar.paredit.get_siblings.call(null, i, cljs.core.keys, cljs.core.constantly.call(null, true), p);
    } else {
      return and__4296__auto__;
    }
  }();
  var a = function() {
    var and__4296__auto__ = o;
    if (cljs.core.truth_(and__4296__auto__)) {
      var and__4296__auto____$1 = in_list;
      if (and__4296__auto____$1) {
        return cljs.core.nth.call(null, s, o, null);
      } else {
        return and__4296__auto____$1;
      }
    } else {
      return and__4296__auto__;
    }
  }();
  var r = function() {
    var or__4308__auto__ = subpar.paredit.count_lines.call(null, s, o, c);
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return 1;
    }
  }();
  var num = cljs.core.truth_(starts) ? cljs.core.count.call(null, starts) : 0;
  if (num > 1) {
    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, o, cljs.core.second.call(null, starts), false, r], null);
  } else {
    if (cljs.core._EQ_.call(null, num, 1)) {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, o, c, true, r], null);
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }
};
subpar.paredit.splice_vals = function subpar$paredit$splice_vals(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__6359 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__6359, 0, null);
  var c = cljs.core.nth.call(null, vec__6359, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  if (in_list) {
    var vec__6360 = subpar.paredit.get_wrapper.call(null, p, o);
    var n = cljs.core.nth.call(null, vec__6360, 0, null);
    var d = cljs.core.nth.call(null, vec__6360, 1, null);
    var r = subpar.paredit.count_lines.call(null, s, n, d);
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, c, function() {
      var x__4620__auto__ = 0;
      var y__4621__auto__ = n;
      return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
    }(), r], null);
  } else {
    return cljs.core.PersistentVector.EMPTY;
  }
};
subpar.paredit.splice_delete_backward_vals = function subpar$paredit$splice_delete_backward_vals(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__6363 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__6363, 0, null);
  var c = cljs.core.nth.call(null, vec__6363, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  if (in_list) {
    var vec__6364 = subpar.paredit.get_wrapper.call(null, p, o);
    var n = cljs.core.nth.call(null, vec__6364, 0, null);
    var d = cljs.core.nth.call(null, vec__6364, 1, null);
    var r = subpar.paredit.count_lines.call(null, s, n, d);
    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, function() {
      var x__4620__auto__ = o;
      var y__4621__auto__ = i;
      return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
    }(), c, function() {
      var x__4620__auto__ = 0;
      var y__4621__auto__ = n;
      return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
    }(), r], null);
  } else {
    return cljs.core.PersistentVector.EMPTY;
  }
};
subpar.paredit.splice_delete_forward_vals = function subpar$paredit$splice_delete_forward_vals(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__6367 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__6367, 0, null);
  var c = cljs.core.nth.call(null, vec__6367, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  if (in_list) {
    var vec__6368 = subpar.paredit.get_wrapper.call(null, p, o);
    var n = cljs.core.nth.call(null, vec__6368, 0, null);
    var d = cljs.core.nth.call(null, vec__6368, 1, null);
    var r = subpar.paredit.count_lines.call(null, s, n, d);
    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, i, c + 1, function() {
      var x__4620__auto__ = 0;
      var y__4621__auto__ = n;
      return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
    }(), r], null);
  } else {
    return cljs.core.PersistentVector.EMPTY;
  }
};
subpar.paredit.parse = function subpar$paredit$parse(ss) {
  var s = [cljs.core.str(ss), cljs.core.str(" ")].join("");
  var i = 0;
  var mode = subpar.paredit.code;
  var openings = cljs.core._conj.call(null, cljs.core.List.EMPTY, -1);
  var start = -1;
  var t = cljs.core.PersistentVector.EMPTY;
  var families = new cljs.core.PersistentArrayMap(null, 1, [-1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "children", "children", -940561982), cljs.core.PersistentArrayMap.EMPTY], null)], null);
  var escaping = false;
  var in_word = false;
  while (true) {
    var a = cljs.core.nth.call(null, s, i, null);
    var j = i + 1;
    var o = cljs.core.peek.call(null, openings);
    if (a == null && in_word) {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "chars", "chars", -1094630317), t, new cljs.core.Keyword(null, "families", "families", 255079231), cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, new cljs.core.Keyword(null, "closer", "closer", 10992481)], null), i - 1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 
      new cljs.core.Keyword(null, "children", "children", -940561982), start], null), i - 1)], null);
    } else {
      if (a == null) {
        return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "chars", "chars", -1094630317), t, new cljs.core.Keyword(null, "families", "families", 255079231), cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, new cljs.core.Keyword(null, "closer", "closer", 10992481)], null), i - 1)], null);
      } else {
        if (cljs.core.not_EQ_.call(null, subpar.paredit.cmmnt, mode) && cljs.core._EQ_.call(null, "\\", a) && !escaping && !in_word) {
          var G__6369 = j;
          var G__6370 = mode;
          var G__6371 = openings;
          var G__6372 = i;
          var G__6373 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
          var G__6374 = cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), i], null), j);
          var G__6375 = true;
          var G__6376 = true;
          i = G__6369;
          mode = G__6370;
          openings = G__6371;
          start = G__6372;
          t = G__6373;
          families = G__6374;
          escaping = G__6375;
          in_word = G__6376;
          continue;
        } else {
          if (cljs.core.not_EQ_.call(null, subpar.paredit.cmmnt, mode) && cljs.core._EQ_.call(null, "\\", a) && !escaping) {
            var G__6377 = j;
            var G__6378 = mode;
            var G__6379 = openings;
            var G__6380 = i;
            var G__6381 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
            var G__6382 = families;
            var G__6383 = true;
            var G__6384 = true;
            i = G__6377;
            mode = G__6378;
            openings = G__6379;
            start = G__6380;
            t = G__6381;
            families = G__6382;
            escaping = G__6383;
            in_word = G__6384;
            continue;
          } else {
            if (cljs.core._EQ_.call(null, subpar.paredit.code, mode) && cljs.core._EQ_.call(null, ";", a) && !escaping) {
              var G__6385 = j;
              var G__6386 = subpar.paredit.cmmnt;
              var G__6387 = openings;
              var G__6388 = start;
              var G__6389 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
              var G__6390 = families;
              var G__6391 = false;
              var G__6392 = false;
              i = G__6385;
              mode = G__6386;
              openings = G__6387;
              start = G__6388;
              t = G__6389;
              families = G__6390;
              escaping = G__6391;
              in_word = G__6392;
              continue;
            } else {
              if (cljs.core._EQ_.call(null, subpar.paredit.cmmnt, mode) && cljs.core._EQ_.call(null, "\n", a)) {
                var G__6393 = j;
                var G__6394 = subpar.paredit.code;
                var G__6395 = openings;
                var G__6396 = start;
                var G__6397 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                var G__6398 = families;
                var G__6399 = false;
                var G__6400 = false;
                i = G__6393;
                mode = G__6394;
                openings = G__6395;
                start = G__6396;
                t = G__6397;
                families = G__6398;
                escaping = G__6399;
                in_word = G__6400;
                continue;
              } else {
                if (cljs.core._EQ_.call(null, subpar.paredit.cmmnt, mode)) {
                  var G__6401 = j;
                  var G__6402 = subpar.paredit.cmmnt;
                  var G__6403 = openings;
                  var G__6404 = start;
                  var G__6405 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                  var G__6406 = families;
                  var G__6407 = false;
                  var G__6408 = false;
                  i = G__6401;
                  mode = G__6402;
                  openings = G__6403;
                  start = G__6404;
                  t = G__6405;
                  families = G__6406;
                  escaping = G__6407;
                  in_word = G__6408;
                  continue;
                } else {
                  if (cljs.core._EQ_.call(null, subpar.paredit.code, mode) && cljs.core._EQ_.call(null, '"', a) && !escaping) {
                    var G__6409 = j;
                    var G__6410 = subpar.paredit.string;
                    var G__6411 = cljs.core.conj.call(null, openings, i);
                    var G__6412 = -1;
                    var G__6413 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                    var G__6414 = cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, new cljs.core.Keyword(null, "children", "children", -940561982)], null), cljs.core.PersistentArrayMap.EMPTY), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), i], null), j);
                    var G__6415 = false;
                    var G__6416 = false;
                    i = G__6409;
                    mode = G__6410;
                    openings = G__6411;
                    start = G__6412;
                    t = G__6413;
                    families = G__6414;
                    escaping = G__6415;
                    in_word = G__6416;
                    continue;
                  } else {
                    if (cljs.core._EQ_.call(null, subpar.paredit.string, mode) && cljs.core._EQ_.call(null, '"', a) && !escaping && in_word) {
                      var G__6417 = j;
                      var G__6418 = subpar.paredit.code;
                      var G__6419 = cljs.core.pop.call(null, openings);
                      var G__6420 = -1;
                      var G__6421 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                      var G__6422 = cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "closer", "closer", 10992481)], null), i), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, openings), new cljs.core.Keyword(null, "children", "children", -940561982), o], null), i), new cljs.core.PersistentVector(null, 
                      3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), start], null), i - 1);
                      var G__6423 = false;
                      var G__6424 = false;
                      i = G__6417;
                      mode = G__6418;
                      openings = G__6419;
                      start = G__6420;
                      t = G__6421;
                      families = G__6422;
                      escaping = G__6423;
                      in_word = G__6424;
                      continue;
                    } else {
                      if (cljs.core._EQ_.call(null, subpar.paredit.string, mode) && cljs.core._EQ_.call(null, '"', a) && !escaping) {
                        var G__6425 = j;
                        var G__6426 = subpar.paredit.code;
                        var G__6427 = cljs.core.pop.call(null, openings);
                        var G__6428 = -1;
                        var G__6429 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                        var G__6430 = cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "closer", "closer", 10992481)], null), i), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, openings), new cljs.core.Keyword(null, "children", "children", -940561982), o], null), i);
                        var G__6431 = false;
                        var G__6432 = false;
                        i = G__6425;
                        mode = G__6426;
                        openings = G__6427;
                        start = G__6428;
                        t = G__6429;
                        families = G__6430;
                        escaping = G__6431;
                        in_word = G__6432;
                        continue;
                      } else {
                        if (cljs.core._EQ_.call(null, subpar.paredit.string, mode) && cljs.core.not.call(null, subpar.paredit.whitespace_QMARK_.call(null, a)) && !in_word) {
                          var G__6433 = j;
                          var G__6434 = subpar.paredit.string;
                          var G__6435 = openings;
                          var G__6436 = i;
                          var G__6437 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                          var G__6438 = cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), i], null), i);
                          var G__6439 = false;
                          var G__6440 = true;
                          i = G__6433;
                          mode = G__6434;
                          openings = G__6435;
                          start = G__6436;
                          t = G__6437;
                          families = G__6438;
                          escaping = G__6439;
                          in_word = G__6440;
                          continue;
                        } else {
                          if (cljs.core.truth_(function() {
                            var and__4296__auto__ = cljs.core._EQ_.call(null, subpar.paredit.string, mode);
                            if (and__4296__auto__) {
                              var and__4296__auto____$1 = subpar.paredit.whitespace_QMARK_.call(null, a);
                              if (cljs.core.truth_(and__4296__auto____$1)) {
                                return in_word;
                              } else {
                                return and__4296__auto____$1;
                              }
                            } else {
                              return and__4296__auto__;
                            }
                          }())) {
                            var G__6441 = j;
                            var G__6442 = subpar.paredit.string;
                            var G__6443 = openings;
                            var G__6444 = -1;
                            var G__6445 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                            var G__6446 = cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), start], null), i - 1);
                            var G__6447 = false;
                            var G__6448 = false;
                            i = G__6441;
                            mode = G__6442;
                            openings = G__6443;
                            start = G__6444;
                            t = G__6445;
                            families = G__6446;
                            escaping = G__6447;
                            in_word = G__6448;
                            continue;
                          } else {
                            if (cljs.core._EQ_.call(null, subpar.paredit.string, mode)) {
                              var G__6449 = j;
                              var G__6450 = subpar.paredit.string;
                              var G__6451 = openings;
                              var G__6452 = start;
                              var G__6453 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                              var G__6454 = families;
                              var G__6455 = false;
                              var G__6456 = in_word;
                              i = G__6449;
                              mode = G__6450;
                              openings = G__6451;
                              start = G__6452;
                              t = G__6453;
                              families = G__6454;
                              escaping = G__6455;
                              in_word = G__6456;
                              continue;
                            } else {
                              if (cljs.core.truth_(function() {
                                var and__4296__auto__ = subpar.paredit.opener_QMARK_.call(null, a);
                                if (cljs.core.truth_(and__4296__auto__)) {
                                  return in_word;
                                } else {
                                  return and__4296__auto__;
                                }
                              }())) {
                                var G__6457 = j;
                                var G__6458 = subpar.paredit.code;
                                var G__6459 = cljs.core.conj.call(null, openings, i);
                                var G__6460 = -1;
                                var G__6461 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                var G__6462 = cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), start], null), i - 1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), i], null), i), new cljs.core.PersistentVector(null, 
                                2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, new cljs.core.Keyword(null, "children", "children", -940561982)], null), cljs.core.PersistentArrayMap.EMPTY);
                                var G__6463 = false;
                                var G__6464 = false;
                                i = G__6457;
                                mode = G__6458;
                                openings = G__6459;
                                start = G__6460;
                                t = G__6461;
                                families = G__6462;
                                escaping = G__6463;
                                in_word = G__6464;
                                continue;
                              } else {
                                if (cljs.core.truth_(subpar.paredit.opener_QMARK_.call(null, a))) {
                                  var G__6465 = j;
                                  var G__6466 = subpar.paredit.code;
                                  var G__6467 = cljs.core.conj.call(null, openings, i);
                                  var G__6468 = -1;
                                  var G__6469 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                  var G__6470 = cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), i], null), i), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, new cljs.core.Keyword(null, "children", "children", -940561982)], null), cljs.core.PersistentArrayMap.EMPTY);
                                  var G__6471 = false;
                                  var G__6472 = false;
                                  i = G__6465;
                                  mode = G__6466;
                                  openings = G__6467;
                                  start = G__6468;
                                  t = G__6469;
                                  families = G__6470;
                                  escaping = G__6471;
                                  in_word = G__6472;
                                  continue;
                                } else {
                                  if (cljs.core.truth_(function() {
                                    var and__4296__auto__ = subpar.paredit.closer_QMARK_.call(null, a);
                                    if (cljs.core.truth_(and__4296__auto__)) {
                                      return in_word;
                                    } else {
                                      return and__4296__auto__;
                                    }
                                  }())) {
                                    var G__6473 = j;
                                    var G__6474 = subpar.paredit.code;
                                    var G__6475 = cljs.core.pop.call(null, openings);
                                    var G__6476 = -1;
                                    var G__6477 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                    var G__6478 = cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), start], null), i - 1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "closer", "closer", 10992481)], null), i), new cljs.core.PersistentVector(null, 
                                    3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, openings), new cljs.core.Keyword(null, "children", "children", -940561982), o], null), i);
                                    var G__6479 = false;
                                    var G__6480 = false;
                                    i = G__6473;
                                    mode = G__6474;
                                    openings = G__6475;
                                    start = G__6476;
                                    t = G__6477;
                                    families = G__6478;
                                    escaping = G__6479;
                                    in_word = G__6480;
                                    continue;
                                  } else {
                                    if (cljs.core.truth_(subpar.paredit.closer_QMARK_.call(null, a))) {
                                      var G__6481 = j;
                                      var G__6482 = subpar.paredit.code;
                                      var G__6483 = cljs.core.pop.call(null, openings);
                                      var G__6484 = -1;
                                      var G__6485 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                      var G__6486 = cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "closer", "closer", 10992481)], null), i), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, openings), new cljs.core.Keyword(null, "children", "children", -940561982), o], null), i);
                                      var G__6487 = false;
                                      var G__6488 = false;
                                      i = G__6481;
                                      mode = G__6482;
                                      openings = G__6483;
                                      start = G__6484;
                                      t = G__6485;
                                      families = G__6486;
                                      escaping = G__6487;
                                      in_word = G__6488;
                                      continue;
                                    } else {
                                      if (cljs.core.not.call(null, subpar.paredit.whitespace_QMARK_.call(null, a)) && !in_word) {
                                        var G__6489 = j;
                                        var G__6490 = subpar.paredit.code;
                                        var G__6491 = openings;
                                        var G__6492 = i;
                                        var G__6493 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                        var G__6494 = cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), i], null), i);
                                        var G__6495 = false;
                                        var G__6496 = true;
                                        i = G__6489;
                                        mode = G__6490;
                                        openings = G__6491;
                                        start = G__6492;
                                        t = G__6493;
                                        families = G__6494;
                                        escaping = G__6495;
                                        in_word = G__6496;
                                        continue;
                                      } else {
                                        if (cljs.core.truth_(function() {
                                          var and__4296__auto__ = subpar.paredit.whitespace_QMARK_.call(null, a);
                                          if (cljs.core.truth_(and__4296__auto__)) {
                                            return in_word;
                                          } else {
                                            return and__4296__auto__;
                                          }
                                        }())) {
                                          var G__6497 = j;
                                          var G__6498 = subpar.paredit.code;
                                          var G__6499 = openings;
                                          var G__6500 = -1;
                                          var G__6501 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                          var G__6502 = cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), start], null), i - 1);
                                          var G__6503 = false;
                                          var G__6504 = false;
                                          i = G__6497;
                                          mode = G__6498;
                                          openings = G__6499;
                                          start = G__6500;
                                          t = G__6501;
                                          families = G__6502;
                                          escaping = G__6503;
                                          in_word = G__6504;
                                          continue;
                                        } else {
                                          if (cljs.core.truth_(function() {
                                            var and__4296__auto__ = subpar.paredit.whitespace_QMARK_.call(null, a);
                                            if (cljs.core.truth_(and__4296__auto__)) {
                                              return !in_word;
                                            } else {
                                              return and__4296__auto__;
                                            }
                                          }())) {
                                            var G__6505 = j;
                                            var G__6506 = subpar.paredit.code;
                                            var G__6507 = openings;
                                            var G__6508 = -1;
                                            var G__6509 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                            var G__6510 = families;
                                            var G__6511 = false;
                                            var G__6512 = false;
                                            i = G__6505;
                                            mode = G__6506;
                                            openings = G__6507;
                                            start = G__6508;
                                            t = G__6509;
                                            families = G__6510;
                                            escaping = G__6511;
                                            in_word = G__6512;
                                            continue;
                                          } else {
                                            if (cljs.core.not.call(null, subpar.paredit.whitespace_QMARK_.call(null, a)) && in_word) {
                                              var G__6513 = j;
                                              var G__6514 = subpar.paredit.code;
                                              var G__6515 = openings;
                                              var G__6516 = start;
                                              var G__6517 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                              var G__6518 = families;
                                              var G__6519 = false;
                                              var G__6520 = true;
                                              i = G__6513;
                                              mode = G__6514;
                                              openings = G__6515;
                                              start = G__6516;
                                              t = G__6517;
                                              families = G__6518;
                                              escaping = G__6519;
                                              in_word = G__6520;
                                              continue;
                                            } else {
                                              var G__6521 = j;
                                              var G__6522 = subpar.paredit.code;
                                              var G__6523 = openings;
                                              var G__6524 = start;
                                              var G__6525 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["?", o], null));
                                              var G__6526 = families;
                                              var G__6527 = escaping;
                                              var G__6528 = in_word;
                                              i = G__6521;
                                              mode = G__6522;
                                              openings = G__6523;
                                              start = G__6524;
                                              t = G__6525;
                                              families = G__6526;
                                              escaping = G__6527;
                                              in_word = G__6528;
                                              continue;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("subpar.core");
goog.require("cljs.core");
goog.require("subpar.paredit");
cljs.core.enable_console_print_BANG_.call(null);
subpar.core.get_index = function subpar$core$get_index(cm) {
  return cm.indexFromPos(cm.getCursor());
};
subpar.core.go_to_index = function subpar$core$go_to_index(cm, i, j) {
  if (cljs.core.not_EQ_.call(null, i, j)) {
    return cm.setCursor(cm.posFromIndex(j));
  } else {
    return null;
  }
};
subpar.core.nothing_selected_QMARK_ = function subpar$core$nothing_selected_QMARK_(cm) {
  return cljs.core._EQ_.call(null, "", cm.getSelection());
};
subpar.core.get_info = function subpar$core$get_info(cm) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cm.getCursor(), subpar.core.get_index.call(null, cm), cm.getValue()], null);
};
subpar.core.open_expression = function subpar$core$open_expression(cm, pair) {
  var vec__6532 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__6532, 0, null);
  var i = cljs.core.nth.call(null, vec__6532, 1, null);
  var s = cljs.core.nth.call(null, vec__6532, 2, null);
  if (cljs.core.truth_(subpar.paredit.in_string.call(null, s, i))) {
    cm.replaceRange(cljs.core.nth.call(null, pair, 0), cur);
    return cm.setCursor(cur.line, cur.ch + 1);
  } else {
    return cm.operation(function(vec__6532, cur, i, s) {
      return function() {
        cm.replaceRange(pair, cur);
        cm.setCursor(cur["line"], cur["ch"] + 1);
        return cm.indentLine(cur["line"]);
      };
    }(vec__6532, cur, i, s));
  }
};
goog.exportSymbol("subpar.core.open_expression", subpar.core.open_expression);
subpar.core.forward_delete = function subpar$core$forward_delete(cm) {
  if (cljs.core.truth_(subpar.core.nothing_selected_QMARK_.call(null, cm))) {
    var vec__6537 = subpar.core.get_info.call(null, cm);
    var cur = cljs.core.nth.call(null, vec__6537, 0, null);
    var i = cljs.core.nth.call(null, vec__6537, 1, null);
    var s = cljs.core.nth.call(null, vec__6537, 2, null);
    var act = subpar.paredit.forward_delete_action.call(null, s, i);
    var s1 = cm.posFromIndex(i);
    var e1 = cm.posFromIndex(i + 1);
    var s2 = cm.posFromIndex(i - 1);
    var e2 = e1;
    var s3 = s1;
    var e3 = cm.posFromIndex(i + 2);
    var pred__6538 = cljs.core._EQ_;
    var expr__6539 = act;
    if (cljs.core.truth_(pred__6538.call(null, 1, expr__6539))) {
      return cm.replaceRange("", s1, e1);
    } else {
      if (cljs.core.truth_(pred__6538.call(null, 2, expr__6539))) {
        return cm.replaceRange("", s2, e2);
      } else {
        if (cljs.core.truth_(pred__6538.call(null, 3, expr__6539))) {
          return cm.replaceRange("", s3, e3);
        } else {
          if (cljs.core.truth_(pred__6538.call(null, 4, expr__6539))) {
            return cm.setCursor(e1);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__6539)].join(""));
          }
        }
      }
    }
  } else {
    return cm.replaceSelection("");
  }
};
goog.exportSymbol("subpar.core.forward_delete", subpar.core.forward_delete);
subpar.core.backward_delete = function subpar$core$backward_delete(cm) {
  if (cljs.core.truth_(subpar.core.nothing_selected_QMARK_.call(null, cm))) {
    var vec__6545 = subpar.core.get_info.call(null, cm);
    var cur = cljs.core.nth.call(null, vec__6545, 0, null);
    var i = cljs.core.nth.call(null, vec__6545, 1, null);
    var s = cljs.core.nth.call(null, vec__6545, 2, null);
    var act = subpar.paredit.backward_delete_action.call(null, s, i);
    var s1 = cm.posFromIndex(i - 1);
    var e1 = cm.posFromIndex(i);
    var s2 = s1;
    var e2 = cm.posFromIndex(i + 1);
    var s3 = cm.posFromIndex(i - 2);
    var e3 = e1;
    var pred__6546 = cljs.core._EQ_;
    var expr__6547 = act;
    if (cljs.core.truth_(pred__6546.call(null, 1, expr__6547))) {
      return cm.replaceRange("", s1, e1);
    } else {
      if (cljs.core.truth_(pred__6546.call(null, 2, expr__6547))) {
        return cm.replaceRange("", s2, e2);
      } else {
        if (cljs.core.truth_(pred__6546.call(null, 3, expr__6547))) {
          return cm.replaceRange("", s3, e3);
        } else {
          return cm.setCursor(s1);
        }
      }
    }
  } else {
    return cm.replaceSelection("");
  }
};
goog.exportSymbol("subpar.core.backward_delete", subpar.core.backward_delete);
subpar.core.double_quote = function subpar$core$double_quote(cm) {
  var vec__6553 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__6553, 0, null);
  var i = cljs.core.nth.call(null, vec__6553, 1, null);
  var s = cljs.core.nth.call(null, vec__6553, 2, null);
  var act = subpar.paredit.double_quote_action.call(null, s, i);
  var pred__6554 = cljs.core._EQ_;
  var expr__6555 = act;
  if (cljs.core.truth_(pred__6554.call(null, 0, expr__6555))) {
    return subpar.core.open_expression.call(null, cm, '""');
  } else {
    if (cljs.core.truth_(pred__6554.call(null, 1, expr__6555))) {
      return cm.replaceRange('\\"', cur);
    } else {
      if (cljs.core.truth_(pred__6554.call(null, 2, expr__6555))) {
        return subpar.core.go_to_index.call(null, cm, i, i + 1);
      } else {
        if (cljs.core.truth_(pred__6554.call(null, 3, expr__6555))) {
          return cm.replaceRange('"', cur);
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__6555)].join(""));
        }
      }
    }
  }
};
goog.exportSymbol("subpar.core.double_quote", subpar.core.double_quote);
subpar.core.close_expression = function subpar$core$close_expression(cm, c) {
  var vec__6559 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__6559, 0, null);
  var i = cljs.core.nth.call(null, vec__6559, 1, null);
  var s = cljs.core.nth.call(null, vec__6559, 2, null);
  var p = subpar.paredit.parse.call(null, s);
  if (cljs.core.truth_(subpar.paredit.in_string_QMARK_.call(null, p, i))) {
    cm.replaceRange(c, cur);
    return cm.setCursor(cur["line"], cur["ch"] + 1);
  } else {
    var vec__6560 = subpar.paredit.close_expression_vals.call(null, p, i);
    var del = cljs.core.nth.call(null, vec__6560, 0, null);
    var beg = cljs.core.nth.call(null, vec__6560, 1, null);
    var end = cljs.core.nth.call(null, vec__6560, 2, null);
    var dst = cljs.core.nth.call(null, vec__6560, 3, null);
    if (cljs.core.truth_(dst)) {
      if (cljs.core.truth_(del)) {
        cm.replaceRange("", cm.posFromIndex(beg), cm.posFromIndex(end));
      } else {
      }
      return subpar.core.go_to_index.call(null, cm, i, dst);
    } else {
      return null;
    }
  }
};
goog.exportSymbol("subpar.core.close_expression", subpar.core.close_expression);
subpar.core.go = function subpar$core$go(cm, f) {
  var vec__6562 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__6562, 0, null);
  var i = cljs.core.nth.call(null, vec__6562, 1, null);
  var s = cljs.core.nth.call(null, vec__6562, 2, null);
  var j = f.call(null, s, i);
  return subpar.core.go_to_index.call(null, cm, i, j);
};
subpar.core.backward_up = function subpar$core$backward_up(cm) {
  return subpar.core.go.call(null, cm, subpar.paredit.backward_up_fn);
};
goog.exportSymbol("subpar.core.backward_up", subpar.core.backward_up);
subpar.core.forward_down = function subpar$core$forward_down(cm) {
  return subpar.core.go.call(null, cm, subpar.paredit.forward_down_fn);
};
goog.exportSymbol("subpar.core.forward_down", subpar.core.forward_down);
subpar.core.backward = function subpar$core$backward(cm) {
  return subpar.core.go.call(null, cm, subpar.paredit.backward_fn);
};
goog.exportSymbol("subpar.core.backward", subpar.core.backward);
subpar.core.forward = function subpar$core$forward(cm) {
  return subpar.core.go.call(null, cm, subpar.paredit.forward_fn);
};
goog.exportSymbol("subpar.core.forward", subpar.core.forward);
subpar.core.backward_down = function subpar$core$backward_down(cm) {
  return subpar.core.go.call(null, cm, subpar.paredit.backward_down_fn);
};
goog.exportSymbol("subpar.core.backward_down", subpar.core.backward_down);
subpar.core.forward_up = function subpar$core$forward_up(cm) {
  return subpar.core.go.call(null, cm, subpar.paredit.forward_up_fn);
};
goog.exportSymbol("subpar.core.forward_up", subpar.core.forward_up);
subpar.core.forward_slurp = function subpar$core$forward_slurp(cm) {
  var vec__6566 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__6566, 0, null);
  var i = cljs.core.nth.call(null, vec__6566, 1, null);
  var s = cljs.core.nth.call(null, vec__6566, 2, null);
  var vec__6567 = subpar.paredit.forward_slurp_vals.call(null, s, i);
  var delimiter = cljs.core.nth.call(null, vec__6567, 0, null);
  var si = cljs.core.nth.call(null, vec__6567, 1, null);
  var di = cljs.core.nth.call(null, vec__6567, 2, null);
  var ri = cljs.core.nth.call(null, vec__6567, 3, null);
  if (cljs.core.truth_(ri)) {
    var start = cm.posFromIndex(si);
    var end = cm.posFromIndex(si + 1);
    var destination = cm.posFromIndex(di);
    var line = start["line"];
    var update = function(start, end, destination, line, vec__6566, cur, i, s, vec__6567, delimiter, si, di, ri) {
      return function() {
        cm.replaceRange(delimiter, destination);
        cm.replaceRange("", start, end);
        return cljs.core.map.call(null, function(start, end, destination, line, vec__6566, cur, i, s, vec__6567, delimiter, si, di, ri) {
          return function(p1__6563_SHARP_) {
            return cm.indentLine(p1__6563_SHARP_);
          };
        }(start, end, destination, line, vec__6566, cur, i, s, vec__6567, delimiter, si, di, ri), cljs.core.range.call(null, line, line + ri));
      };
    }(start, end, destination, line, vec__6566, cur, i, s, vec__6567, delimiter, si, di, ri);
    return cm.operation(update);
  } else {
    return null;
  }
};
goog.exportSymbol("subpar.core.forward_slurp", subpar.core.forward_slurp);
subpar.core.backward_slurp = function subpar$core$backward_slurp(cm) {
  var vec__6571 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__6571, 0, null);
  var i = cljs.core.nth.call(null, vec__6571, 1, null);
  var s = cljs.core.nth.call(null, vec__6571, 2, null);
  var vec__6572 = subpar.paredit.backward_slurp_vals.call(null, s, i);
  var delimiter = cljs.core.nth.call(null, vec__6572, 0, null);
  var si = cljs.core.nth.call(null, vec__6572, 1, null);
  var di = cljs.core.nth.call(null, vec__6572, 2, null);
  var ri = cljs.core.nth.call(null, vec__6572, 3, null);
  if (cljs.core.truth_(ri)) {
    var start = cm.posFromIndex(si);
    var end = cm.posFromIndex(si + 1);
    var destination = cm.posFromIndex(di);
    var line = start["line"];
    var update = function(start, end, destination, line, vec__6571, cur, i, s, vec__6572, delimiter, si, di, ri) {
      return function() {
        cm.replaceRange("", start, end);
        cm.replaceRange(delimiter, destination);
        return cljs.core.map.call(null, function(start, end, destination, line, vec__6571, cur, i, s, vec__6572, delimiter, si, di, ri) {
          return function(p1__6568_SHARP_) {
            return cm.indentLine(p1__6568_SHARP_);
          };
        }(start, end, destination, line, vec__6571, cur, i, s, vec__6572, delimiter, si, di, ri), cljs.core.range.call(null, line, line + ri));
      };
    }(start, end, destination, line, vec__6571, cur, i, s, vec__6572, delimiter, si, di, ri);
    return cm.operation(update);
  } else {
    return null;
  }
};
goog.exportSymbol("subpar.core.backward_slurp", subpar.core.backward_slurp);
subpar.core.backward_barf = function subpar$core$backward_barf(cm) {
  var vec__6576 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__6576, 0, null);
  var i = cljs.core.nth.call(null, vec__6576, 1, null);
  var s = cljs.core.nth.call(null, vec__6576, 2, null);
  var vec__6577 = subpar.paredit.backward_barf_vals.call(null, s, i);
  var delimiter = cljs.core.nth.call(null, vec__6577, 0, null);
  var si = cljs.core.nth.call(null, vec__6577, 1, null);
  var di = cljs.core.nth.call(null, vec__6577, 2, null);
  var pad = cljs.core.nth.call(null, vec__6577, 3, null);
  var ri = cljs.core.nth.call(null, vec__6577, 4, null);
  if (cljs.core.truth_(ri)) {
    var delimiter__$1 = cljs.core.truth_(pad) ? [cljs.core.str(" "), cljs.core.str(delimiter)].join("") : delimiter;
    var destination = cm.posFromIndex(di);
    var start = cm.posFromIndex(si);
    var end = cm.posFromIndex(si + 1);
    var line = start["line"];
    var update = function(delimiter__$1, destination, start, end, line, vec__6576, cur, i, s, vec__6577, delimiter, si, di, pad, ri) {
      return function() {
        cm.replaceRange(delimiter__$1, destination);
        cm.replaceRange("", start, end);
        return cljs.core.map.call(null, function(delimiter__$1, destination, start, end, line, vec__6576, cur, i, s, vec__6577, delimiter, si, di, pad, ri) {
          return function(p1__6573_SHARP_) {
            return cm.indentLine(p1__6573_SHARP_);
          };
        }(delimiter__$1, destination, start, end, line, vec__6576, cur, i, s, vec__6577, delimiter, si, di, pad, ri), cljs.core.range.call(null, line, line + ri));
      };
    }(delimiter__$1, destination, start, end, line, vec__6576, cur, i, s, vec__6577, delimiter, si, di, pad, ri);
    return cm.operation(update);
  } else {
    return null;
  }
};
goog.exportSymbol("subpar.core.backward_barf", subpar.core.backward_barf);
subpar.core.forward_barf = function subpar$core$forward_barf(cm) {
  var vec__6581 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__6581, 0, null);
  var i = cljs.core.nth.call(null, vec__6581, 1, null);
  var s = cljs.core.nth.call(null, vec__6581, 2, null);
  var vec__6582 = subpar.paredit.forward_barf_vals.call(null, s, i);
  var delimiter = cljs.core.nth.call(null, vec__6582, 0, null);
  var si = cljs.core.nth.call(null, vec__6582, 1, null);
  var di = cljs.core.nth.call(null, vec__6582, 2, null);
  var pad = cljs.core.nth.call(null, vec__6582, 3, null);
  var ri = cljs.core.nth.call(null, vec__6582, 4, null);
  var i0 = cljs.core.nth.call(null, vec__6582, 5, null);
  if (cljs.core.truth_(ri)) {
    var delimiter__$1 = cljs.core.truth_(pad) ? [cljs.core.str(" "), cljs.core.str(delimiter)].join("") : delimiter;
    var destination = cm.posFromIndex(di);
    var start = cm.posFromIndex(si);
    var end = cm.posFromIndex(si + 1);
    var line = cm.posFromIndex(i0)["line"];
    var update = function(delimiter__$1, destination, start, end, line, vec__6581, cur, i, s, vec__6582, delimiter, si, di, pad, ri, i0) {
      return function() {
        cm.replaceRange("", start, end);
        cm.replaceRange(delimiter__$1, destination);
        return cljs.core.map.call(null, function(delimiter__$1, destination, start, end, line, vec__6581, cur, i, s, vec__6582, delimiter, si, di, pad, ri, i0) {
          return function(p1__6578_SHARP_) {
            return cm.indentLine(p1__6578_SHARP_);
          };
        }(delimiter__$1, destination, start, end, line, vec__6581, cur, i, s, vec__6582, delimiter, si, di, pad, ri, i0), cljs.core.range.call(null, line, line + ri));
      };
    }(delimiter__$1, destination, start, end, line, vec__6581, cur, i, s, vec__6582, delimiter, si, di, pad, ri, i0);
    return cm.operation(update);
  } else {
    return null;
  }
};
goog.exportSymbol("subpar.core.forward_barf", subpar.core.forward_barf);
subpar.core.splice_delete_backward = function subpar$core$splice_delete_backward(cm) {
  var vec__6586 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__6586, 0, null);
  var i = cljs.core.nth.call(null, vec__6586, 1, null);
  var s = cljs.core.nth.call(null, vec__6586, 2, null);
  var vec__6587 = subpar.paredit.splice_delete_backward_vals.call(null, s, i);
  var start = cljs.core.nth.call(null, vec__6587, 0, null);
  var end = cljs.core.nth.call(null, vec__6587, 1, null);
  var closer = cljs.core.nth.call(null, vec__6587, 2, null);
  var reindent = cljs.core.nth.call(null, vec__6587, 3, null);
  var num = cljs.core.nth.call(null, vec__6587, 4, null);
  if (cljs.core.truth_(reindent)) {
    var line = cm.posFromIndex(reindent)["line"];
    var c0 = cm.posFromIndex(closer);
    var c1 = cm.posFromIndex(closer + 1);
    var s0 = cm.posFromIndex(start);
    var s1 = cm.posFromIndex(end);
    var update = function(line, c0, c1, s0, s1, vec__6586, cur, i, s, vec__6587, start, end, closer, reindent, num) {
      return function() {
        cm.replaceRange("", c0, c1);
        cm.replaceRange("", s0, s1);
        return cljs.core.map.call(null, function(line, c0, c1, s0, s1, vec__6586, cur, i, s, vec__6587, start, end, closer, reindent, num) {
          return function(p1__6583_SHARP_) {
            return cm.indentLine(p1__6583_SHARP_);
          };
        }(line, c0, c1, s0, s1, vec__6586, cur, i, s, vec__6587, start, end, closer, reindent, num), cljs.core.range.call(null, line, line + num));
      };
    }(line, c0, c1, s0, s1, vec__6586, cur, i, s, vec__6587, start, end, closer, reindent, num);
    return cm.operation(update);
  } else {
    return null;
  }
};
goog.exportSymbol("subpar.core.splice_delete_backward", subpar.core.splice_delete_backward);
subpar.core.splice_delete_forward = function subpar$core$splice_delete_forward(cm) {
  var vec__6591 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__6591, 0, null);
  var i = cljs.core.nth.call(null, vec__6591, 1, null);
  var s = cljs.core.nth.call(null, vec__6591, 2, null);
  var vec__6592 = subpar.paredit.splice_delete_forward_vals.call(null, s, i);
  var opener = cljs.core.nth.call(null, vec__6592, 0, null);
  var start = cljs.core.nth.call(null, vec__6592, 1, null);
  var end = cljs.core.nth.call(null, vec__6592, 2, null);
  var reindent = cljs.core.nth.call(null, vec__6592, 3, null);
  var num = cljs.core.nth.call(null, vec__6592, 4, null);
  if (cljs.core.truth_(reindent)) {
    var line = cm.posFromIndex(reindent)["line"];
    var o0 = cm.posFromIndex(opener);
    var o1 = cm.posFromIndex(opener + 1);
    var s0 = cm.posFromIndex(start);
    var s1 = cm.posFromIndex(end);
    var update = function(line, o0, o1, s0, s1, vec__6591, cur, i, s, vec__6592, opener, start, end, reindent, num) {
      return function() {
        cm.replaceRange("", s0, s1);
        cm.replaceRange("", o0, o1);
        return cljs.core.map.call(null, function(line, o0, o1, s0, s1, vec__6591, cur, i, s, vec__6592, opener, start, end, reindent, num) {
          return function(p1__6588_SHARP_) {
            return cm.indentLine(p1__6588_SHARP_);
          };
        }(line, o0, o1, s0, s1, vec__6591, cur, i, s, vec__6592, opener, start, end, reindent, num), cljs.core.range.call(null, line, line + num));
      };
    }(line, o0, o1, s0, s1, vec__6591, cur, i, s, vec__6592, opener, start, end, reindent, num);
    return cm.operation(update);
  } else {
    return null;
  }
};
goog.exportSymbol("subpar.core.splice_delete_forward", subpar.core.splice_delete_forward);
subpar.core.splice = function subpar$core$splice(cm) {
  var vec__6596 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__6596, 0, null);
  var i = cljs.core.nth.call(null, vec__6596, 1, null);
  var s = cljs.core.nth.call(null, vec__6596, 2, null);
  var vec__6597 = subpar.paredit.splice_vals.call(null, s, i);
  var opener = cljs.core.nth.call(null, vec__6597, 0, null);
  var closer = cljs.core.nth.call(null, vec__6597, 1, null);
  var reindent = cljs.core.nth.call(null, vec__6597, 2, null);
  var num = cljs.core.nth.call(null, vec__6597, 3, null);
  if (cljs.core.truth_(reindent)) {
    var line = cm.posFromIndex(reindent)["line"];
    var o0 = cm.posFromIndex(opener);
    var o1 = cm.posFromIndex(opener + 1);
    var c0 = cm.posFromIndex(closer);
    var c1 = cm.posFromIndex(closer + 1);
    var update = function(line, o0, o1, c0, c1, vec__6596, cur, i, s, vec__6597, opener, closer, reindent, num) {
      return function() {
        cm.replaceRange("", c0, c1);
        cm.replaceRange("", o0, o1);
        return cljs.core.map.call(null, function(line, o0, o1, c0, c1, vec__6596, cur, i, s, vec__6597, opener, closer, reindent, num) {
          return function(p1__6593_SHARP_) {
            return cm.indentLine(p1__6593_SHARP_);
          };
        }(line, o0, o1, c0, c1, vec__6596, cur, i, s, vec__6597, opener, closer, reindent, num), cljs.core.range.call(null, line, line + num));
      };
    }(line, o0, o1, c0, c1, vec__6596, cur, i, s, vec__6597, opener, closer, reindent, num);
    return cm.operation(update);
  } else {
    return null;
  }
};
goog.exportSymbol("subpar.core.splice", subpar.core.splice);
subpar.core.indent_selection = function subpar$core$indent_selection(cm) {
  if (cljs.core.truth_(cm.somethingSelected())) {
    var start = cm.getCursor(true)["line"];
    var end = cm.getCursor(false)["line"];
    var f = function(start, end) {
      return function() {
        return cljs.core.map.call(null, function(start, end) {
          return function(p1__6598_SHARP_) {
            return cm.indentLine(p1__6598_SHARP_);
          };
        }(start, end), cljs.core.range.call(null, start, end + 1));
      };
    }(start, end);
    return cm.operation(f);
  } else {
    return cm.indentLine(cm.getCursor()["line"]);
  }
};
goog.exportSymbol("subpar.core.indent_selection", subpar.core.indent_selection);
