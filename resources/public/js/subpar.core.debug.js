if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareTestMethods = function() {
  if (!goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareTestMethods must be called from " + "within a goog.module");
  }
  goog.moduleLoaderState_.declareTestMethods = true;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !goog.global.atob && goog.global.document && goog.global.document.all;
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareTestMethods:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
      if (goog.moduleLoaderState_.declareTestMethods) {
        for (var entry in exports) {
          if (entry.indexOf("test", 0) === 0 || entry == "tearDown" || entry == "setUp" || entry == "setUpPage" || entry == "tearDownPage") {
            goog.global[entry] = exports[entry];
          }
        }
      }
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function(source) {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    var loadingModule = false;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          loadingModule = true;
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3269";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__16682__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__16681 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__16681) : cljs.core.into_array.call(null, G__16681);
      }());
    };
    var G__16682 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__16683__i = 0, G__16683__a = new Array(arguments.length - 0);
        while (G__16683__i < G__16683__a.length) {
          G__16683__a[G__16683__i] = arguments[G__16683__i + 0];
          ++G__16683__i;
        }
        args = new cljs.core.IndexedSeq(G__16683__a, 0);
      }
      return G__16682__delegate.call(this, args);
    };
    G__16682.cljs$lang$maxFixedArity = 0;
    G__16682.cljs$lang$applyTo = function(arglist__16684) {
      var args = cljs.core.seq(arglist__16684);
      return G__16682__delegate(args);
    };
    G__16682.cljs$core$IFn$_invoke$arity$variadic = G__16682__delegate;
    return G__16682;
  }();
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  var G__16686 = x;
  return goog.isString(G__16686);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__16688 = x__$1;
    return goog.typeOf(G__16688);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4296__auto__ = ty;
    if (cljs.core.truth_(and__4296__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4296__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__16690 = obj;
    return goog.typeOf(G__16690);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4420__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4420__auto__)) {
    var s = temp__4420__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__16692 = Symbol;
  return goog.typeOf(G__16692);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function cljs$core$make_array() {
  var G__16694 = arguments.length;
  switch(G__16694) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5193__auto___16696 = len;
  var i_16697 = 0;
  while (true) {
    if (i_16697 < n__5193__auto___16696) {
      new_arr[i_16697] = arr[i_16697];
      var G__16698 = i_16697 + 1;
      i_16697 = G__16698;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__16699 = i + 1;
      i = G__16699;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget() {
  var G__16704 = arguments.length;
  switch(G__16704) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__16705 = cljs.core.aget;
  var G__16706 = array[i];
  var G__16707 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__16705, G__16706, G__16707) : cljs.core.apply.call(null, G__16705, G__16706, G__16707);
};
cljs.core.aget.cljs$lang$applyTo = function(seq16700) {
  var G__16701 = cljs.core.first(seq16700);
  var seq16700__$1 = cljs.core.next(seq16700);
  var G__16702 = cljs.core.first(seq16700__$1);
  var seq16700__$2 = cljs.core.next(seq16700__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__16701, G__16702, seq16700__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset() {
  var G__16714 = arguments.length;
  switch(G__16714) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__16715 = cljs.core.aset;
  var G__16716 = array[idx];
  var G__16717 = idx2;
  var G__16718 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__16715, G__16716, G__16717, G__16718) : cljs.core.apply.call(null, G__16715, G__16716, G__16717, G__16718);
};
cljs.core.aset.cljs$lang$applyTo = function(seq16709) {
  var G__16710 = cljs.core.first(seq16709);
  var seq16709__$1 = cljs.core.next(seq16709);
  var G__16711 = cljs.core.first(seq16709__$1);
  var seq16709__$2 = cljs.core.next(seq16709__$1);
  var G__16712 = cljs.core.first(seq16709__$2);
  var seq16709__$3 = cljs.core.next(seq16709__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__16710, G__16711, G__16712, seq16709__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array() {
  var G__16721 = arguments.length;
  switch(G__16721) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__16722 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__16723 = [];
  var G__16724 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__16722, G__16723, G__16724) : cljs.core.reduce.call(null, G__16722, G__16723, G__16724);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke() {
  var argseq__5348__auto__ = 2 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5348__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq16726) {
  var G__16727 = cljs.core.first(seq16726);
  var seq16726__$1 = cljs.core.next(seq16726);
  var G__16728 = cljs.core.first(seq16726__$1);
  var seq16726__$2 = cljs.core.next(seq16726__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__16727, G__16728, seq16726__$2);
};
cljs.core.Fn = function() {
  var obj16730 = {};
  return obj16730;
}();
cljs.core.IFn = function() {
  var obj16732 = {};
  return obj16732;
}();
cljs.core._invoke = function cljs$core$_invoke() {
  var G__16734 = arguments.length;
  switch(G__16734) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16736 = x__4944__auto__;
        return goog.typeOf(G__16736);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16738 = x__4944__auto__;
        return goog.typeOf(G__16738);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16740 = x__4944__auto__;
        return goog.typeOf(G__16740);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$4;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16742 = x__4944__auto__;
        return goog.typeOf(G__16742);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$5;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16744 = x__4944__auto__;
        return goog.typeOf(G__16744);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$6;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16746 = x__4944__auto__;
        return goog.typeOf(G__16746);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$7;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16748 = x__4944__auto__;
        return goog.typeOf(G__16748);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$8;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16750 = x__4944__auto__;
        return goog.typeOf(G__16750);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$9;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16752 = x__4944__auto__;
        return goog.typeOf(G__16752);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$10;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16754 = x__4944__auto__;
        return goog.typeOf(G__16754);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$11;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16756 = x__4944__auto__;
        return goog.typeOf(G__16756);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$12;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16758 = x__4944__auto__;
        return goog.typeOf(G__16758);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$13;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16760 = x__4944__auto__;
        return goog.typeOf(G__16760);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$14;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16762 = x__4944__auto__;
        return goog.typeOf(G__16762);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$15;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16764 = x__4944__auto__;
        return goog.typeOf(G__16764);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$16;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16766 = x__4944__auto__;
        return goog.typeOf(G__16766);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$17;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16768 = x__4944__auto__;
        return goog.typeOf(G__16768);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$18;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16770 = x__4944__auto__;
        return goog.typeOf(G__16770);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$19;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16772 = x__4944__auto__;
        return goog.typeOf(G__16772);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$20;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16774 = x__4944__auto__;
        return goog.typeOf(G__16774);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$21;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16776 = x__4944__auto__;
        return goog.typeOf(G__16776);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$22;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__16778 = x__4944__auto__;
        return goog.typeOf(G__16778);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
  var obj16781 = {};
  return obj16781;
}();
cljs.core._clone = function cljs$core$_clone(value) {
  if (function() {
    var and__4296__auto__ = value;
    if (and__4296__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4944__auto__ = value == null ? null : value;
    return function() {
      var or__4308__auto__ = cljs.core._clone[function() {
        var G__16785 = x__4944__auto__;
        return goog.typeOf(G__16785);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._clone["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj16787 = {};
  return obj16787;
}();
cljs.core._count = function cljs$core$_count(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._count[function() {
        var G__16791 = x__4944__auto__;
        return goog.typeOf(G__16791);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._count["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj16793 = {};
  return obj16793;
}();
cljs.core._empty = function cljs$core$_empty(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._empty[function() {
        var G__16797 = x__4944__auto__;
        return goog.typeOf(G__16797);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._empty["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj16799 = {};
  return obj16799;
}();
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._conj[function() {
        var G__16803 = x__4944__auto__;
        return goog.typeOf(G__16803);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._conj["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj16805 = {};
  return obj16805;
}();
cljs.core._nth = function cljs$core$_nth() {
  var G__16807 = arguments.length;
  switch(G__16807) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IIndexed$_nth$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._nth[function() {
        var G__16809 = x__4944__auto__;
        return goog.typeOf(G__16809);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._nth["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIndexed.-nth", coll);
        }
      }
    }().call(null, coll, n);
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IIndexed$_nth$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._nth[function() {
        var G__16811 = x__4944__auto__;
        return goog.typeOf(G__16811);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._nth["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIndexed.-nth", coll);
        }
      }
    }().call(null, coll, n, not_found);
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
  var obj16814 = {};
  return obj16814;
}();
cljs.core.ISeq = function() {
  var obj16816 = {};
  return obj16816;
}();
cljs.core._first = function cljs$core$_first(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._first[function() {
        var G__16820 = x__4944__auto__;
        return goog.typeOf(G__16820);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._first["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._rest[function() {
        var G__16824 = x__4944__auto__;
        return goog.typeOf(G__16824);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._rest["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj16826 = {};
  return obj16826;
}();
cljs.core._next = function cljs$core$_next(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._next[function() {
        var G__16830 = x__4944__auto__;
        return goog.typeOf(G__16830);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._next["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj16832 = {};
  return obj16832;
}();
cljs.core._lookup = function cljs$core$_lookup() {
  var G__16834 = arguments.length;
  switch(G__16834) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ILookup$_lookup$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._lookup[function() {
        var G__16836 = x__4944__auto__;
        return goog.typeOf(G__16836);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._lookup["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ILookup.-lookup", o);
        }
      }
    }().call(null, o, k);
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ILookup$_lookup$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._lookup[function() {
        var G__16838 = x__4944__auto__;
        return goog.typeOf(G__16838);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._lookup["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ILookup.-lookup", o);
        }
      }
    }().call(null, o, k, not_found);
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
  var obj16841 = {};
  return obj16841;
}();
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__16845 = x__4944__auto__;
        return goog.typeOf(G__16845);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._assoc[function() {
        var G__16849 = x__4944__auto__;
        return goog.typeOf(G__16849);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._assoc["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj16851 = {};
  return obj16851;
}();
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._dissoc[function() {
        var G__16855 = x__4944__auto__;
        return goog.typeOf(G__16855);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._dissoc["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj16857 = {};
  return obj16857;
}();
cljs.core._key = function cljs$core$_key(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._key[function() {
        var G__16861 = x__4944__auto__;
        return goog.typeOf(G__16861);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._key["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._val[function() {
        var G__16865 = x__4944__auto__;
        return goog.typeOf(G__16865);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._val["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj16867 = {};
  return obj16867;
}();
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._disjoin[function() {
        var G__16871 = x__4944__auto__;
        return goog.typeOf(G__16871);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._disjoin["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj16873 = {};
  return obj16873;
}();
cljs.core._peek = function cljs$core$_peek(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._peek[function() {
        var G__16877 = x__4944__auto__;
        return goog.typeOf(G__16877);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._peek["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._pop[function() {
        var G__16881 = x__4944__auto__;
        return goog.typeOf(G__16881);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._pop["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj16883 = {};
  return obj16883;
}();
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._assoc_n[function() {
        var G__16887 = x__4944__auto__;
        return goog.typeOf(G__16887);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._assoc_n["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj16889 = {};
  return obj16889;
}();
cljs.core._deref = function cljs$core$_deref(o) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._deref[function() {
        var G__16893 = x__4944__auto__;
        return goog.typeOf(G__16893);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._deref["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj16895 = {};
  return obj16895;
}();
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._deref_with_timeout[function() {
        var G__16899 = x__4944__auto__;
        return goog.typeOf(G__16899);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj16901 = {};
  return obj16901;
}();
cljs.core._meta = function cljs$core$_meta(o) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._meta[function() {
        var G__16905 = x__4944__auto__;
        return goog.typeOf(G__16905);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._meta["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj16907 = {};
  return obj16907;
}();
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._with_meta[function() {
        var G__16911 = x__4944__auto__;
        return goog.typeOf(G__16911);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._with_meta["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj16913 = {};
  return obj16913;
}();
cljs.core._reduce = function cljs$core$_reduce() {
  var G__16915 = arguments.length;
  switch(G__16915) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IReduce$_reduce$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._reduce[function() {
        var G__16917 = x__4944__auto__;
        return goog.typeOf(G__16917);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._reduce["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReduce.-reduce", coll);
        }
      }
    }().call(null, coll, f);
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IReduce$_reduce$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._reduce[function() {
        var G__16919 = x__4944__auto__;
        return goog.typeOf(G__16919);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._reduce["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReduce.-reduce", coll);
        }
      }
    }().call(null, coll, f, start);
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
  var obj16922 = {};
  return obj16922;
}();
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._kv_reduce[function() {
        var G__16926 = x__4944__auto__;
        return goog.typeOf(G__16926);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj16928 = {};
  return obj16928;
}();
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._equiv[function() {
        var G__16932 = x__4944__auto__;
        return goog.typeOf(G__16932);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._equiv["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj16934 = {};
  return obj16934;
}();
cljs.core._hash = function cljs$core$_hash(o) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._hash[function() {
        var G__16938 = x__4944__auto__;
        return goog.typeOf(G__16938);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._hash["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj16940 = {};
  return obj16940;
}();
cljs.core._seq = function cljs$core$_seq(o) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._seq[function() {
        var G__16944 = x__4944__auto__;
        return goog.typeOf(G__16944);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._seq["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj16946 = {};
  return obj16946;
}();
cljs.core.IList = function() {
  var obj16948 = {};
  return obj16948;
}();
cljs.core.IRecord = function() {
  var obj16950 = {};
  return obj16950;
}();
cljs.core.IReversible = function() {
  var obj16952 = {};
  return obj16952;
}();
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._rseq[function() {
        var G__16956 = x__4944__auto__;
        return goog.typeOf(G__16956);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._rseq["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj16958 = {};
  return obj16958;
}();
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._sorted_seq[function() {
        var G__16962 = x__4944__auto__;
        return goog.typeOf(G__16962);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._sorted_seq_from[function() {
        var G__16966 = x__4944__auto__;
        return goog.typeOf(G__16966);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._entry_key[function() {
        var G__16970 = x__4944__auto__;
        return goog.typeOf(G__16970);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._entry_key["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._comparator[function() {
        var G__16974 = x__4944__auto__;
        return goog.typeOf(G__16974);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._comparator["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj16976 = {};
  return obj16976;
}();
cljs.core._write = function cljs$core$_write(writer, s) {
  if (function() {
    var and__4296__auto__ = writer;
    if (and__4296__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4944__auto__ = writer == null ? null : writer;
    return function() {
      var or__4308__auto__ = cljs.core._write[function() {
        var G__16980 = x__4944__auto__;
        return goog.typeOf(G__16980);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._write["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (function() {
    var and__4296__auto__ = writer;
    if (and__4296__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4944__auto__ = writer == null ? null : writer;
    return function() {
      var or__4308__auto__ = cljs.core._flush[function() {
        var G__16984 = x__4944__auto__;
        return goog.typeOf(G__16984);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._flush["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj16986 = {};
  return obj16986;
}();
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._pr_writer[function() {
        var G__16990 = x__4944__auto__;
        return goog.typeOf(G__16990);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._pr_writer["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj16992 = {};
  return obj16992;
}();
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (function() {
    var and__4296__auto__ = d;
    if (and__4296__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4944__auto__ = d == null ? null : d;
    return function() {
      var or__4308__auto__ = cljs.core._realized_QMARK_[function() {
        var G__16996 = x__4944__auto__;
        return goog.typeOf(G__16996);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj16998 = {};
  return obj16998;
}();
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._notify_watches[function() {
        var G__17002 = x__4944__auto__;
        return goog.typeOf(G__17002);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._notify_watches["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._add_watch[function() {
        var G__17006 = x__4944__auto__;
        return goog.typeOf(G__17006);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._add_watch["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._remove_watch[function() {
        var G__17010 = x__4944__auto__;
        return goog.typeOf(G__17010);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._remove_watch["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj17012 = {};
  return obj17012;
}();
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._as_transient[function() {
        var G__17016 = x__4944__auto__;
        return goog.typeOf(G__17016);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._as_transient["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj17018 = {};
  return obj17018;
}();
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._conj_BANG_[function() {
        var G__17022 = x__4944__auto__;
        return goog.typeOf(G__17022);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._persistent_BANG_[function() {
        var G__17026 = x__4944__auto__;
        return goog.typeOf(G__17026);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj17028 = {};
  return obj17028;
}();
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._assoc_BANG_[function() {
        var G__17032 = x__4944__auto__;
        return goog.typeOf(G__17032);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj17034 = {};
  return obj17034;
}();
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__17038 = x__4944__auto__;
        return goog.typeOf(G__17038);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj17040 = {};
  return obj17040;
}();
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__17044 = x__4944__auto__;
        return goog.typeOf(G__17044);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._pop_BANG_[function() {
        var G__17048 = x__4944__auto__;
        return goog.typeOf(G__17048);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj17050 = {};
  return obj17050;
}();
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__17054 = x__4944__auto__;
        return goog.typeOf(G__17054);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj17056 = {};
  return obj17056;
}();
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._compare[function() {
        var G__17060 = x__4944__auto__;
        return goog.typeOf(G__17060);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._compare["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj17062 = {};
  return obj17062;
}();
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._drop_first[function() {
        var G__17066 = x__4944__auto__;
        return goog.typeOf(G__17066);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._drop_first["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj17068 = {};
  return obj17068;
}();
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._chunked_first[function() {
        var G__17072 = x__4944__auto__;
        return goog.typeOf(G__17072);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._chunked_first["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._chunked_rest[function() {
        var G__17076 = x__4944__auto__;
        return goog.typeOf(G__17076);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj17078 = {};
  return obj17078;
}();
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._chunked_next[function() {
        var G__17082 = x__4944__auto__;
        return goog.typeOf(G__17082);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._chunked_next["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj17084 = {};
  return obj17084;
}();
cljs.core._name = function cljs$core$_name(x) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._name[function() {
        var G__17088 = x__4944__auto__;
        return goog.typeOf(G__17088);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._name["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._namespace[function() {
        var G__17092 = x__4944__auto__;
        return goog.typeOf(G__17092);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._namespace["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj17094 = {};
  return obj17094;
}();
cljs.core.IReset = function() {
  var obj17096 = {};
  return obj17096;
}();
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._reset_BANG_[function() {
        var G__17100 = x__4944__auto__;
        return goog.typeOf(G__17100);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj17102 = {};
  return obj17102;
}();
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_() {
  var G__17104 = arguments.length;
  switch(G__17104) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._swap_BANG_[function() {
        var G__17106 = x__4944__auto__;
        return goog.typeOf(G__17106);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._swap_BANG_[function() {
        var G__17108 = x__4944__auto__;
        return goog.typeOf(G__17108);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._swap_BANG_[function() {
        var G__17110 = x__4944__auto__;
        return goog.typeOf(G__17110);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a, b);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._swap_BANG_[function() {
        var G__17112 = x__4944__auto__;
        return goog.typeOf(G__17112);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a, b, xs);
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
  var obj17115 = {};
  return obj17115;
}();
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._vreset_BANG_[function() {
        var G__17119 = x__4944__auto__;
        return goog.typeOf(G__17119);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj17121 = {};
  return obj17121;
}();
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._iterator[function() {
        var G__17125 = x__4944__auto__;
        return goog.typeOf(G__17125);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._iterator["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__17128 = 4294967295;
  var G__17129 = 5;
  return Math.imul(G__17128, G__17129);
}() === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var G__17132 = a;
    var G__17133 = b;
    return Math.imul(G__17132, G__17133);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__17134 = i + 2;
        var G__17135 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__17134;
        h1 = G__17135;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj17137 = {};
  return obj17137;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__17138 = i + 1;
          var G__17139 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__17138;
          hash = G__17139;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj17143 = {};
      return obj17143;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (function() {
    var G__17146 = o;
    if (G__17146) {
      var bit__4975__auto__ = G__17146.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4975__auto__ || G__17146.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__17147 = o;
        return Math.floor(G__17147);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4296__auto__ = cljs.core.not(a.ns);
      if (and__4296__auto__) {
        return b.ns;
      } else {
        return and__4296__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__17154 = a.ns;
            var G__17155 = b.ns;
            return goog.array.defaultCompare(G__17154, G__17155);
          }();
          if (0 === nsc) {
            var G__17156 = a.name;
            var G__17157 = b.name;
            return goog.array.defaultCompare(G__17156, G__17157);
          } else {
            return nsc;
          }
        }
      } else {
        var G__17158 = a.name;
        var G__17159 = b.name;
        return goog.array.defaultCompare(G__17158, G__17159);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__17161 = null;
  var G__17161__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__17161__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__17161 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17161__2.call(this, self__, coll);
      case 3:
        return G__17161__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17161.cljs$core$IFn$_invoke$arity$2 = G__17161__2;
  G__17161.cljs$core$IFn$_invoke$arity$3 = G__17161__3;
  return G__17161;
}();
cljs.core.Symbol.prototype.apply = function(self__, args17160) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args17160)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4724__auto__ = self__._hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol() {
  var G__17163 = arguments.length;
  switch(G__17163) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__17210 = null;
  var G__17210__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__17210__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__17210__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__17210__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__17210__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__17210__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__17210__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__17210__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__17210__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__17210__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__17210__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__17210__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__17210__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__17210__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__17210__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__17210__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__17210__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__17210__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__17210__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__17210__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__17210__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__17210__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17166 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__17167 = a;
    var G__17168 = b;
    var G__17169 = c;
    var G__17170 = d;
    var G__17171 = e;
    var G__17172 = f;
    var G__17173 = g;
    var G__17174 = h;
    var G__17175 = i;
    var G__17176 = j;
    var G__17177 = k;
    var G__17178 = l;
    var G__17179 = m;
    var G__17180 = n;
    var G__17181 = o;
    var G__17182 = p;
    var G__17183 = q;
    var G__17184 = r;
    var G__17185 = s;
    var G__17186 = t;
    var G__17187 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__17166, G__17167, G__17168, G__17169, G__17170, G__17171, G__17172, G__17173, G__17174, G__17175, G__17176, G__17177, G__17178, G__17179, G__17180, G__17181, G__17182, G__17183, G__17184, G__17185, G__17186, G__17187) : cljs.core.apply.call(null, G__17166, G__17167, G__17168, G__17169, G__17170, G__17171, G__17172, G__17173, G__17174, G__17175, G__17176, G__17177, G__17178, G__17179, G__17180, 
    G__17181, G__17182, G__17183, G__17184, G__17185, G__17186, G__17187);
  };
  G__17210 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__17210__1.call(this, self__);
      case 2:
        return G__17210__2.call(this, self__, a);
      case 3:
        return G__17210__3.call(this, self__, a, b);
      case 4:
        return G__17210__4.call(this, self__, a, b, c);
      case 5:
        return G__17210__5.call(this, self__, a, b, c, d);
      case 6:
        return G__17210__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__17210__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__17210__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__17210__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__17210__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__17210__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__17210__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__17210__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__17210__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__17210__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__17210__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__17210__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__17210__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__17210__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__17210__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__17210__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__17210__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17210.cljs$core$IFn$_invoke$arity$1 = G__17210__1;
  G__17210.cljs$core$IFn$_invoke$arity$2 = G__17210__2;
  G__17210.cljs$core$IFn$_invoke$arity$3 = G__17210__3;
  G__17210.cljs$core$IFn$_invoke$arity$4 = G__17210__4;
  G__17210.cljs$core$IFn$_invoke$arity$5 = G__17210__5;
  G__17210.cljs$core$IFn$_invoke$arity$6 = G__17210__6;
  G__17210.cljs$core$IFn$_invoke$arity$7 = G__17210__7;
  G__17210.cljs$core$IFn$_invoke$arity$8 = G__17210__8;
  G__17210.cljs$core$IFn$_invoke$arity$9 = G__17210__9;
  G__17210.cljs$core$IFn$_invoke$arity$10 = G__17210__10;
  G__17210.cljs$core$IFn$_invoke$arity$11 = G__17210__11;
  G__17210.cljs$core$IFn$_invoke$arity$12 = G__17210__12;
  G__17210.cljs$core$IFn$_invoke$arity$13 = G__17210__13;
  G__17210.cljs$core$IFn$_invoke$arity$14 = G__17210__14;
  G__17210.cljs$core$IFn$_invoke$arity$15 = G__17210__15;
  G__17210.cljs$core$IFn$_invoke$arity$16 = G__17210__16;
  G__17210.cljs$core$IFn$_invoke$arity$17 = G__17210__17;
  G__17210.cljs$core$IFn$_invoke$arity$18 = G__17210__18;
  G__17210.cljs$core$IFn$_invoke$arity$19 = G__17210__19;
  G__17210.cljs$core$IFn$_invoke$arity$20 = G__17210__20;
  G__17210.cljs$core$IFn$_invoke$arity$21 = G__17210__21;
  G__17210.cljs$core$IFn$_invoke$arity$22 = G__17210__22;
  return G__17210;
}();
cljs.core.Var.prototype.apply = function(self__, args17165) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args17165)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__17188 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__17189 = a;
  var G__17190 = b;
  var G__17191 = c;
  var G__17192 = d;
  var G__17193 = e;
  var G__17194 = f;
  var G__17195 = g;
  var G__17196 = h;
  var G__17197 = i;
  var G__17198 = j;
  var G__17199 = k;
  var G__17200 = l;
  var G__17201 = m;
  var G__17202 = n;
  var G__17203 = o;
  var G__17204 = p;
  var G__17205 = q;
  var G__17206 = r;
  var G__17207 = s;
  var G__17208 = t;
  var G__17209 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__17188, G__17189, G__17190, G__17191, G__17192, G__17193, G__17194, G__17195, G__17196, G__17197, G__17198, G__17199, G__17200, G__17201, G__17202, G__17203, G__17204, G__17205, G__17206, G__17207, G__17208, G__17209) : cljs.core.apply.call(null, G__17188, G__17189, G__17190, G__17191, G__17192, G__17193, G__17194, G__17195, G__17196, G__17197, G__17198, G__17199, G__17200, G__17201, G__17202, 
  G__17203, G__17204, G__17205, G__17206, G__17207, G__17208, G__17209);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  var G__17212 = x;
  if (G__17212) {
    var bit__4982__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__4308__auto__ = bit__4982__auto__;
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return G__17212.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__17212.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__17212);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__17212);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  var G__17214 = value;
  if (G__17214) {
    var bit__4982__auto__ = G__17214.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4982__auto__ || G__17214.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__17214.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__17214);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__17214);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__17216 = coll;
      if (G__17216) {
        var bit__4975__auto__ = G__17216.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4975__auto__ || G__17216.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__17218 = coll;
      if (G__17218) {
        var bit__4975__auto__ = G__17218.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4975__auto__ || G__17218.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__17220 = coll;
      if (G__17220) {
        var bit__4975__auto__ = G__17220.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4975__auto__ || G__17220.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__17222 = coll;
      if (G__17222) {
        var bit__4975__auto__ = G__17222.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4975__auto__ || G__17222.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_() {
  var G__17227 = arguments.length;
  switch(G__17227) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__17229 = y;
        var G__17230 = cljs.core.first(more);
        var G__17231 = cljs.core.next(more);
        x = G__17229;
        y = G__17230;
        more = G__17231;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq17223) {
  var G__17224 = cljs.core.first(seq17223);
  var seq17223__$1 = cljs.core.next(seq17223);
  var G__17225 = cljs.core.first(seq17223__$1);
  var seq17223__$2 = cljs.core.next(seq17223__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__17224, G__17225, seq17223__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__17232 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__17232) : cljs.core.es6_iterator_seq.call(null, G__17232);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null)], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__17233 = n + 1;
      var G__17234 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__17235 = cljs.core.next(coll__$1);
      n = G__17233;
      hash_code = G__17234;
      coll__$1 = G__17235;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__17236 = n + 1;
      var G__17237 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__17238 = cljs.core.next(coll__$1);
      n = G__17236;
      hash_code = G__17237;
      coll__$1 = G__17238;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  var G__17239 = this$__$1.valueOf();
  var G__17240 = other.valueOf();
  return goog.array.defaultCompare(G__17239, G__17240);
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__17241 = o;
  return goog.getUid(G__17241);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__17243 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17243) : cljs.core.deref.call(null, G__17243);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce() {
  var G__17245 = arguments.length;
  switch(G__17245) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__17246 = val;
          var G__17247 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17246, G__17247) : f.call(null, G__17246, G__17247);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__17253 = nval;
          var G__17254 = n + 1;
          val = G__17253;
          n = G__17254;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__17248 = val__$1;
        var G__17249 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17248, G__17249) : f.call(null, G__17248, G__17249);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__17255 = nval;
        var G__17256 = n + 1;
        val__$1 = G__17255;
        n = G__17256;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__17250 = val__$1;
        var G__17251 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17250, G__17251) : f.call(null, G__17250, G__17251);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__17257 = nval;
        var G__17258 = n + 1;
        val__$1 = G__17257;
        n = G__17258;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce() {
  var G__17260 = arguments.length;
  switch(G__17260) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__17261 = val;
          var G__17262 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17261, G__17262) : f.call(null, G__17261, G__17262);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__17268 = nval;
          var G__17269 = n + 1;
          val = G__17268;
          n = G__17269;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__17263 = val__$1;
        var G__17264 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17263, G__17264) : f.call(null, G__17263, G__17264);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__17270 = nval;
        var G__17271 = n + 1;
        val__$1 = G__17270;
        n = G__17271;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__17265 = val__$1;
        var G__17266 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17265, G__17266) : f.call(null, G__17265, G__17266);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__17272 = nval;
        var G__17273 = n + 1;
        val__$1 = G__17272;
        n = G__17273;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  var G__17275 = x;
  if (G__17275) {
    var bit__4982__auto__ = G__17275.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4982__auto__ || G__17275.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__17275.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__17275);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__17275);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  var G__17277 = x;
  if (G__17277) {
    var bit__4982__auto__ = G__17277.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4982__auto__ || G__17277.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__17277.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__17277);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__17277);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__17278 = coll__$1;
  var G__17279 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__17278, G__17279) : cljs.core.equiv_sequential.call(null, G__17278, G__17279);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__17280 = o;
  var G__17281 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__17280, G__17281) : cljs.core.cons.call(null, G__17280, G__17281);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq() {
  var G__17283 = arguments.length;
  switch(G__17283) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq() {
  var G__17286 = arguments.length;
  switch(G__17286) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__17288 = coll__$1;
  var G__17289 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__17288, G__17289) : cljs.core.equiv_sequential.call(null, G__17288, G__17289);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__17290 = cljs.core.List.EMPTY;
  var G__17291 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__17290, G__17291) : cljs.core.with_meta.call(null, G__17290, G__17291);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__17292 = f;
  var G__17293 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__17292, G__17293) : cljs.core.seq_reduce.call(null, G__17292, G__17293);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__17294 = f;
  var G__17295 = start;
  var G__17296 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__17294, G__17295, G__17296) : cljs.core.seq_reduce.call(null, G__17294, G__17295, G__17296);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__17297 = o;
  var G__17298 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__17297, G__17298) : cljs.core.cons.call(null, G__17297, G__17298);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__17299 = sn;
      s = G__17299;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj() {
  var G__17304 = arguments.length;
  switch(G__17304) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__17306 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__17307 = cljs.core.first(xs);
      var G__17308 = cljs.core.next(xs);
      coll = G__17306;
      x = G__17307;
      xs = G__17308;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq17300) {
  var G__17301 = cljs.core.first(seq17300);
  var seq17300__$1 = cljs.core.next(seq17300);
  var G__17302 = cljs.core.first(seq17300__$1);
  var seq17300__$2 = cljs.core.next(seq17300__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__17301, G__17302, seq17300__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__17309 = cljs.core.next(s);
      var G__17310 = acc + 1;
      s = G__17309;
      acc = G__17310;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__17312 = coll;
      if (G__17312) {
        var bit__4975__auto__ = G__17312.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4975__auto__ || G__17312.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth() {
  var G__17314 = arguments.length;
  switch(G__17314) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__17316 = cljs.core.next(coll);
            var G__17317 = n - 1;
            coll = G__17316;
            n = G__17317;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__17318 = cljs.core.next(coll);
            var G__17319 = n - 1;
            var G__17320 = not_found;
            coll = G__17318;
            n = G__17319;
            not_found = G__17320;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth() {
  var G__17322 = arguments.length;
  switch(G__17322) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (function() {
        var G__17323 = coll;
        if (G__17323) {
          var bit__4975__auto__ = G__17323.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4975__auto__ || G__17323.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (function() {
                var G__17324 = coll;
                if (G__17324) {
                  var bit__4982__auto__ = G__17324.cljs$lang$protocol_mask$partition0$ & 64;
                  if (bit__4982__auto__ || G__17324.cljs$core$ISeq$) {
                    return true;
                  } else {
                    if (!G__17324.cljs$lang$protocol_mask$partition0$) {
                      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17324);
                    } else {
                      return false;
                    }
                  }
                } else {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17324);
                }
              }()) {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (function() {
        var G__17325 = coll;
        if (G__17325) {
          var bit__4975__auto__ = G__17325.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4975__auto__ || G__17325.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (function() {
                var G__17326 = coll;
                if (G__17326) {
                  var bit__4982__auto__ = G__17326.cljs$lang$protocol_mask$partition0$ & 64;
                  if (bit__4982__auto__ || G__17326.cljs$core$ISeq$) {
                    return true;
                  } else {
                    if (!G__17326.cljs$lang$protocol_mask$partition0$) {
                      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17326);
                    } else {
                      return false;
                    }
                  }
                } else {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17326);
                }
              }()) {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__17328 = n__$1 - 1;
      var G__17329 = cljs.core.rest(xs);
      n__$1 = G__17328;
      xs = G__17329;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get() {
  var G__17331 = arguments.length;
  switch(G__17331) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (function() {
      var G__17332 = o;
      if (G__17332) {
        var bit__4975__auto__ = G__17332.cljs$lang$protocol_mask$partition0$ & 256;
        if (bit__4975__auto__ || G__17332.cljs$core$ILookup$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (function() {
      var G__17333 = o;
      if (G__17333) {
        var bit__4975__auto__ = G__17333.cljs$lang$protocol_mask$partition0$ & 256;
        if (bit__4975__auto__ || G__17333.cljs$core$ILookup$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc() {
  var G__17340 = arguments.length;
  switch(G__17340) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__17342 = ret;
      var G__17343 = cljs.core.first(kvs);
      var G__17344 = cljs.core.second(kvs);
      var G__17345 = cljs.core.nnext(kvs);
      coll = G__17342;
      k = G__17343;
      v = G__17344;
      kvs = G__17345;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq17335) {
  var G__17336 = cljs.core.first(seq17335);
  var seq17335__$1 = cljs.core.next(seq17335);
  var G__17337 = cljs.core.first(seq17335__$1);
  var seq17335__$2 = cljs.core.next(seq17335__$1);
  var G__17338 = cljs.core.first(seq17335__$2);
  var seq17335__$3 = cljs.core.next(seq17335__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__17336, G__17337, G__17338, seq17335__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc() {
  var G__17350 = arguments.length;
  switch(G__17350) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__17352 = ret;
        var G__17353 = cljs.core.first(ks);
        var G__17354 = cljs.core.next(ks);
        coll = G__17352;
        k = G__17353;
        ks = G__17354;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq17346) {
  var G__17347 = cljs.core.first(seq17346);
  var seq17346__$1 = cljs.core.next(seq17346);
  var G__17348 = cljs.core.first(seq17346__$1);
  var seq17346__$2 = cljs.core.next(seq17346__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__17347, G__17348, seq17346__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4308__auto__ = function() {
    var G__17359 = f;
    return goog.isFunction(G__17359);
  }();
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    var G__17360 = f;
    if (G__17360) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto____$1 = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          return G__17360.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__17360.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__17360);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__17360);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__17826 = null;
  var G__17826__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__17826__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17362 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__17362) : self__.afn.call(null, G__17362);
  };
  var G__17826__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17363 = a;
    var G__17364 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__17363, G__17364) : self__.afn.call(null, G__17363, G__17364);
  };
  var G__17826__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17365 = a;
    var G__17366 = b;
    var G__17367 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__17365, G__17366, G__17367) : self__.afn.call(null, G__17365, G__17366, G__17367);
  };
  var G__17826__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17368 = a;
    var G__17369 = b;
    var G__17370 = c;
    var G__17371 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__17368, G__17369, G__17370, G__17371) : self__.afn.call(null, G__17368, G__17369, G__17370, G__17371);
  };
  var G__17826__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17372 = a;
    var G__17373 = b;
    var G__17374 = c;
    var G__17375 = d;
    var G__17376 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__17372, G__17373, G__17374, G__17375, G__17376) : self__.afn.call(null, G__17372, G__17373, G__17374, G__17375, G__17376);
  };
  var G__17826__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17377 = a;
    var G__17378 = b;
    var G__17379 = c;
    var G__17380 = d;
    var G__17381 = e;
    var G__17382 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__17377, G__17378, G__17379, G__17380, G__17381, G__17382) : self__.afn.call(null, G__17377, G__17378, G__17379, G__17380, G__17381, G__17382);
  };
  var G__17826__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17383 = a;
    var G__17384 = b;
    var G__17385 = c;
    var G__17386 = d;
    var G__17387 = e;
    var G__17388 = f;
    var G__17389 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__17383, G__17384, G__17385, G__17386, G__17387, G__17388, G__17389) : self__.afn.call(null, G__17383, G__17384, G__17385, G__17386, G__17387, G__17388, G__17389);
  };
  var G__17826__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17390 = a;
    var G__17391 = b;
    var G__17392 = c;
    var G__17393 = d;
    var G__17394 = e;
    var G__17395 = f;
    var G__17396 = g;
    var G__17397 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__17390, G__17391, G__17392, G__17393, G__17394, G__17395, G__17396, G__17397) : self__.afn.call(null, G__17390, G__17391, G__17392, G__17393, G__17394, G__17395, G__17396, G__17397);
  };
  var G__17826__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17398 = a;
    var G__17399 = b;
    var G__17400 = c;
    var G__17401 = d;
    var G__17402 = e;
    var G__17403 = f;
    var G__17404 = g;
    var G__17405 = h;
    var G__17406 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__17398, G__17399, G__17400, G__17401, G__17402, G__17403, G__17404, G__17405, G__17406) : self__.afn.call(null, G__17398, G__17399, G__17400, G__17401, G__17402, G__17403, G__17404, G__17405, G__17406);
  };
  var G__17826__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17407 = a;
    var G__17408 = b;
    var G__17409 = c;
    var G__17410 = d;
    var G__17411 = e;
    var G__17412 = f;
    var G__17413 = g;
    var G__17414 = h;
    var G__17415 = i;
    var G__17416 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__17407, G__17408, G__17409, G__17410, G__17411, G__17412, G__17413, G__17414, G__17415, G__17416) : self__.afn.call(null, G__17407, G__17408, G__17409, G__17410, G__17411, G__17412, G__17413, G__17414, G__17415, G__17416);
  };
  var G__17826__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17417 = a;
    var G__17418 = b;
    var G__17419 = c;
    var G__17420 = d;
    var G__17421 = e;
    var G__17422 = f;
    var G__17423 = g;
    var G__17424 = h;
    var G__17425 = i;
    var G__17426 = j;
    var G__17427 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__17417, G__17418, G__17419, G__17420, G__17421, G__17422, G__17423, G__17424, G__17425, G__17426, G__17427) : self__.afn.call(null, G__17417, G__17418, G__17419, G__17420, G__17421, G__17422, G__17423, G__17424, G__17425, G__17426, G__17427);
  };
  var G__17826__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17428 = a;
    var G__17429 = b;
    var G__17430 = c;
    var G__17431 = d;
    var G__17432 = e;
    var G__17433 = f;
    var G__17434 = g;
    var G__17435 = h;
    var G__17436 = i;
    var G__17437 = j;
    var G__17438 = k;
    var G__17439 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__17428, G__17429, G__17430, G__17431, G__17432, G__17433, G__17434, G__17435, G__17436, G__17437, G__17438, G__17439) : self__.afn.call(null, G__17428, G__17429, G__17430, G__17431, G__17432, G__17433, G__17434, G__17435, G__17436, G__17437, G__17438, G__17439);
  };
  var G__17826__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17440 = a;
    var G__17441 = b;
    var G__17442 = c;
    var G__17443 = d;
    var G__17444 = e;
    var G__17445 = f;
    var G__17446 = g;
    var G__17447 = h;
    var G__17448 = i;
    var G__17449 = j;
    var G__17450 = k;
    var G__17451 = l;
    var G__17452 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__17440, G__17441, G__17442, G__17443, G__17444, G__17445, G__17446, G__17447, G__17448, G__17449, G__17450, G__17451, G__17452) : self__.afn.call(null, G__17440, G__17441, G__17442, G__17443, G__17444, G__17445, G__17446, G__17447, G__17448, G__17449, G__17450, G__17451, G__17452);
  };
  var G__17826__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17453 = a;
    var G__17454 = b;
    var G__17455 = c;
    var G__17456 = d;
    var G__17457 = e;
    var G__17458 = f;
    var G__17459 = g;
    var G__17460 = h;
    var G__17461 = i;
    var G__17462 = j;
    var G__17463 = k;
    var G__17464 = l;
    var G__17465 = m;
    var G__17466 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__17453, G__17454, G__17455, G__17456, G__17457, G__17458, G__17459, G__17460, G__17461, G__17462, G__17463, G__17464, G__17465, G__17466) : self__.afn.call(null, G__17453, G__17454, G__17455, G__17456, G__17457, G__17458, G__17459, G__17460, G__17461, G__17462, G__17463, G__17464, G__17465, G__17466);
  };
  var G__17826__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17467 = a;
    var G__17468 = b;
    var G__17469 = c;
    var G__17470 = d;
    var G__17471 = e;
    var G__17472 = f;
    var G__17473 = g;
    var G__17474 = h;
    var G__17475 = i;
    var G__17476 = j;
    var G__17477 = k;
    var G__17478 = l;
    var G__17479 = m;
    var G__17480 = n;
    var G__17481 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__17467, G__17468, G__17469, G__17470, G__17471, G__17472, G__17473, G__17474, G__17475, G__17476, G__17477, G__17478, G__17479, G__17480, G__17481) : self__.afn.call(null, G__17467, G__17468, G__17469, G__17470, G__17471, G__17472, G__17473, G__17474, G__17475, G__17476, G__17477, G__17478, G__17479, G__17480, G__17481);
  };
  var G__17826__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17482 = a;
    var G__17483 = b;
    var G__17484 = c;
    var G__17485 = d;
    var G__17486 = e;
    var G__17487 = f;
    var G__17488 = g;
    var G__17489 = h;
    var G__17490 = i;
    var G__17491 = j;
    var G__17492 = k;
    var G__17493 = l;
    var G__17494 = m;
    var G__17495 = n;
    var G__17496 = o;
    var G__17497 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__17482, G__17483, G__17484, G__17485, G__17486, G__17487, G__17488, G__17489, G__17490, G__17491, G__17492, G__17493, G__17494, G__17495, G__17496, G__17497) : self__.afn.call(null, G__17482, G__17483, G__17484, G__17485, G__17486, G__17487, G__17488, G__17489, G__17490, G__17491, G__17492, G__17493, G__17494, G__17495, G__17496, G__17497);
  };
  var G__17826__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17498 = a;
    var G__17499 = b;
    var G__17500 = c;
    var G__17501 = d;
    var G__17502 = e;
    var G__17503 = f;
    var G__17504 = g;
    var G__17505 = h;
    var G__17506 = i;
    var G__17507 = j;
    var G__17508 = k;
    var G__17509 = l;
    var G__17510 = m;
    var G__17511 = n;
    var G__17512 = o;
    var G__17513 = p;
    var G__17514 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__17498, G__17499, G__17500, G__17501, G__17502, G__17503, G__17504, G__17505, G__17506, G__17507, G__17508, G__17509, G__17510, G__17511, G__17512, G__17513, G__17514) : self__.afn.call(null, G__17498, G__17499, G__17500, G__17501, G__17502, G__17503, G__17504, G__17505, G__17506, G__17507, G__17508, G__17509, G__17510, G__17511, G__17512, G__17513, G__17514);
  };
  var G__17826__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17515 = a;
    var G__17516 = b;
    var G__17517 = c;
    var G__17518 = d;
    var G__17519 = e;
    var G__17520 = f;
    var G__17521 = g;
    var G__17522 = h;
    var G__17523 = i;
    var G__17524 = j;
    var G__17525 = k;
    var G__17526 = l;
    var G__17527 = m;
    var G__17528 = n;
    var G__17529 = o;
    var G__17530 = p;
    var G__17531 = q;
    var G__17532 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__17515, G__17516, G__17517, G__17518, G__17519, G__17520, G__17521, G__17522, G__17523, G__17524, G__17525, G__17526, G__17527, G__17528, G__17529, G__17530, G__17531, G__17532) : self__.afn.call(null, G__17515, G__17516, G__17517, G__17518, G__17519, G__17520, G__17521, G__17522, G__17523, G__17524, G__17525, G__17526, G__17527, G__17528, G__17529, G__17530, G__17531, G__17532);
  };
  var G__17826__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17533 = a;
    var G__17534 = b;
    var G__17535 = c;
    var G__17536 = d;
    var G__17537 = e;
    var G__17538 = f;
    var G__17539 = g;
    var G__17540 = h;
    var G__17541 = i;
    var G__17542 = j;
    var G__17543 = k;
    var G__17544 = l;
    var G__17545 = m;
    var G__17546 = n;
    var G__17547 = o;
    var G__17548 = p;
    var G__17549 = q;
    var G__17550 = r;
    var G__17551 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__17533, G__17534, G__17535, G__17536, G__17537, G__17538, G__17539, G__17540, G__17541, G__17542, G__17543, G__17544, G__17545, G__17546, G__17547, G__17548, G__17549, G__17550, G__17551) : self__.afn.call(null, G__17533, G__17534, G__17535, G__17536, G__17537, G__17538, G__17539, G__17540, G__17541, G__17542, G__17543, G__17544, G__17545, G__17546, G__17547, G__17548, G__17549, G__17550, G__17551);
  };
  var G__17826__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17552 = a;
    var G__17553 = b;
    var G__17554 = c;
    var G__17555 = d;
    var G__17556 = e;
    var G__17557 = f;
    var G__17558 = g;
    var G__17559 = h;
    var G__17560 = i;
    var G__17561 = j;
    var G__17562 = k;
    var G__17563 = l;
    var G__17564 = m;
    var G__17565 = n;
    var G__17566 = o;
    var G__17567 = p;
    var G__17568 = q;
    var G__17569 = r;
    var G__17570 = s;
    var G__17571 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__17552, G__17553, G__17554, G__17555, G__17556, G__17557, G__17558, G__17559, G__17560, G__17561, G__17562, G__17563, G__17564, G__17565, G__17566, G__17567, G__17568, G__17569, G__17570, G__17571) : self__.afn.call(null, G__17552, G__17553, G__17554, G__17555, G__17556, G__17557, G__17558, G__17559, G__17560, G__17561, G__17562, G__17563, G__17564, G__17565, G__17566, G__17567, G__17568, G__17569, 
    G__17570, G__17571);
  };
  var G__17826__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17572 = self__.afn;
    var G__17573 = a;
    var G__17574 = b;
    var G__17575 = c;
    var G__17576 = d;
    var G__17577 = e;
    var G__17578 = f;
    var G__17579 = g;
    var G__17580 = h;
    var G__17581 = i;
    var G__17582 = j;
    var G__17583 = k;
    var G__17584 = l;
    var G__17585 = m;
    var G__17586 = n;
    var G__17587 = o;
    var G__17588 = p;
    var G__17589 = q;
    var G__17590 = r;
    var G__17591 = s;
    var G__17592 = t;
    var G__17593 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__17572, G__17573, G__17574, G__17575, G__17576, G__17577, G__17578, G__17579, G__17580, G__17581, G__17582, G__17583, G__17584, G__17585, G__17586, G__17587, G__17588, G__17589, G__17590, G__17591, G__17592, G__17593) : cljs.core.apply.call(null, G__17572, G__17573, G__17574, G__17575, G__17576, G__17577, G__17578, G__17579, G__17580, G__17581, G__17582, G__17583, G__17584, G__17585, G__17586, 
    G__17587, G__17588, G__17589, G__17590, G__17591, G__17592, G__17593);
  };
  G__17826 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__17826__1.call(this, self__);
      case 2:
        return G__17826__2.call(this, self__, a);
      case 3:
        return G__17826__3.call(this, self__, a, b);
      case 4:
        return G__17826__4.call(this, self__, a, b, c);
      case 5:
        return G__17826__5.call(this, self__, a, b, c, d);
      case 6:
        return G__17826__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__17826__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__17826__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__17826__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__17826__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__17826__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__17826__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__17826__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__17826__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__17826__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__17826__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__17826__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__17826__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__17826__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__17826__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__17826__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__17826__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17826.cljs$core$IFn$_invoke$arity$1 = G__17826__1;
  G__17826.cljs$core$IFn$_invoke$arity$2 = G__17826__2;
  G__17826.cljs$core$IFn$_invoke$arity$3 = G__17826__3;
  G__17826.cljs$core$IFn$_invoke$arity$4 = G__17826__4;
  G__17826.cljs$core$IFn$_invoke$arity$5 = G__17826__5;
  G__17826.cljs$core$IFn$_invoke$arity$6 = G__17826__6;
  G__17826.cljs$core$IFn$_invoke$arity$7 = G__17826__7;
  G__17826.cljs$core$IFn$_invoke$arity$8 = G__17826__8;
  G__17826.cljs$core$IFn$_invoke$arity$9 = G__17826__9;
  G__17826.cljs$core$IFn$_invoke$arity$10 = G__17826__10;
  G__17826.cljs$core$IFn$_invoke$arity$11 = G__17826__11;
  G__17826.cljs$core$IFn$_invoke$arity$12 = G__17826__12;
  G__17826.cljs$core$IFn$_invoke$arity$13 = G__17826__13;
  G__17826.cljs$core$IFn$_invoke$arity$14 = G__17826__14;
  G__17826.cljs$core$IFn$_invoke$arity$15 = G__17826__15;
  G__17826.cljs$core$IFn$_invoke$arity$16 = G__17826__16;
  G__17826.cljs$core$IFn$_invoke$arity$17 = G__17826__17;
  G__17826.cljs$core$IFn$_invoke$arity$18 = G__17826__18;
  G__17826.cljs$core$IFn$_invoke$arity$19 = G__17826__19;
  G__17826.cljs$core$IFn$_invoke$arity$20 = G__17826__20;
  G__17826.cljs$core$IFn$_invoke$arity$21 = G__17826__21;
  G__17826.cljs$core$IFn$_invoke$arity$22 = G__17826__22;
  return G__17826;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args17361) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args17361)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__17594 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__17594) : self__.afn.call(null, G__17594);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__17595 = a;
  var G__17596 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__17595, G__17596) : self__.afn.call(null, G__17595, G__17596);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__17597 = a;
  var G__17598 = b;
  var G__17599 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__17597, G__17598, G__17599) : self__.afn.call(null, G__17597, G__17598, G__17599);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__17600 = a;
  var G__17601 = b;
  var G__17602 = c;
  var G__17603 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__17600, G__17601, G__17602, G__17603) : self__.afn.call(null, G__17600, G__17601, G__17602, G__17603);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__17604 = a;
  var G__17605 = b;
  var G__17606 = c;
  var G__17607 = d;
  var G__17608 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__17604, G__17605, G__17606, G__17607, G__17608) : self__.afn.call(null, G__17604, G__17605, G__17606, G__17607, G__17608);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__17609 = a;
  var G__17610 = b;
  var G__17611 = c;
  var G__17612 = d;
  var G__17613 = e;
  var G__17614 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__17609, G__17610, G__17611, G__17612, G__17613, G__17614) : self__.afn.call(null, G__17609, G__17610, G__17611, G__17612, G__17613, G__17614);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__17615 = a;
  var G__17616 = b;
  var G__17617 = c;
  var G__17618 = d;
  var G__17619 = e;
  var G__17620 = f;
  var G__17621 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__17615, G__17616, G__17617, G__17618, G__17619, G__17620, G__17621) : self__.afn.call(null, G__17615, G__17616, G__17617, G__17618, G__17619, G__17620, G__17621);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__17622 = a;
  var G__17623 = b;
  var G__17624 = c;
  var G__17625 = d;
  var G__17626 = e;
  var G__17627 = f;
  var G__17628 = g;
  var G__17629 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__17622, G__17623, G__17624, G__17625, G__17626, G__17627, G__17628, G__17629) : self__.afn.call(null, G__17622, G__17623, G__17624, G__17625, G__17626, G__17627, G__17628, G__17629);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__17630 = a;
  var G__17631 = b;
  var G__17632 = c;
  var G__17633 = d;
  var G__17634 = e;
  var G__17635 = f;
  var G__17636 = g;
  var G__17637 = h;
  var G__17638 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__17630, G__17631, G__17632, G__17633, G__17634, G__17635, G__17636, G__17637, G__17638) : self__.afn.call(null, G__17630, G__17631, G__17632, G__17633, G__17634, G__17635, G__17636, G__17637, G__17638);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__17639 = a;
  var G__17640 = b;
  var G__17641 = c;
  var G__17642 = d;
  var G__17643 = e;
  var G__17644 = f;
  var G__17645 = g;
  var G__17646 = h;
  var G__17647 = i;
  var G__17648 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__17639, G__17640, G__17641, G__17642, G__17643, G__17644, G__17645, G__17646, G__17647, G__17648) : self__.afn.call(null, G__17639, G__17640, G__17641, G__17642, G__17643, G__17644, G__17645, G__17646, G__17647, G__17648);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__17649 = a;
  var G__17650 = b;
  var G__17651 = c;
  var G__17652 = d;
  var G__17653 = e;
  var G__17654 = f;
  var G__17655 = g;
  var G__17656 = h;
  var G__17657 = i;
  var G__17658 = j;
  var G__17659 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__17649, G__17650, G__17651, G__17652, G__17653, G__17654, G__17655, G__17656, G__17657, G__17658, G__17659) : self__.afn.call(null, G__17649, G__17650, G__17651, G__17652, G__17653, G__17654, G__17655, G__17656, G__17657, G__17658, G__17659);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__17660 = a;
  var G__17661 = b;
  var G__17662 = c;
  var G__17663 = d;
  var G__17664 = e;
  var G__17665 = f;
  var G__17666 = g;
  var G__17667 = h;
  var G__17668 = i;
  var G__17669 = j;
  var G__17670 = k;
  var G__17671 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__17660, G__17661, G__17662, G__17663, G__17664, G__17665, G__17666, G__17667, G__17668, G__17669, G__17670, G__17671) : self__.afn.call(null, G__17660, G__17661, G__17662, G__17663, G__17664, G__17665, G__17666, G__17667, G__17668, G__17669, G__17670, G__17671);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__17672 = a;
  var G__17673 = b;
  var G__17674 = c;
  var G__17675 = d;
  var G__17676 = e;
  var G__17677 = f;
  var G__17678 = g;
  var G__17679 = h;
  var G__17680 = i;
  var G__17681 = j;
  var G__17682 = k;
  var G__17683 = l;
  var G__17684 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__17672, G__17673, G__17674, G__17675, G__17676, G__17677, G__17678, G__17679, G__17680, G__17681, G__17682, G__17683, G__17684) : self__.afn.call(null, G__17672, G__17673, G__17674, G__17675, G__17676, G__17677, G__17678, G__17679, G__17680, G__17681, G__17682, G__17683, G__17684);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__17685 = a;
  var G__17686 = b;
  var G__17687 = c;
  var G__17688 = d;
  var G__17689 = e;
  var G__17690 = f;
  var G__17691 = g;
  var G__17692 = h;
  var G__17693 = i;
  var G__17694 = j;
  var G__17695 = k;
  var G__17696 = l;
  var G__17697 = m;
  var G__17698 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__17685, G__17686, G__17687, G__17688, G__17689, G__17690, G__17691, G__17692, G__17693, G__17694, G__17695, G__17696, G__17697, G__17698) : self__.afn.call(null, G__17685, G__17686, G__17687, G__17688, G__17689, G__17690, G__17691, G__17692, G__17693, G__17694, G__17695, G__17696, G__17697, G__17698);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__17699 = a;
  var G__17700 = b;
  var G__17701 = c;
  var G__17702 = d;
  var G__17703 = e;
  var G__17704 = f;
  var G__17705 = g;
  var G__17706 = h;
  var G__17707 = i;
  var G__17708 = j;
  var G__17709 = k;
  var G__17710 = l;
  var G__17711 = m;
  var G__17712 = n;
  var G__17713 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__17699, G__17700, G__17701, G__17702, G__17703, G__17704, G__17705, G__17706, G__17707, G__17708, G__17709, G__17710, G__17711, G__17712, G__17713) : self__.afn.call(null, G__17699, G__17700, G__17701, G__17702, G__17703, G__17704, G__17705, G__17706, G__17707, G__17708, G__17709, G__17710, G__17711, G__17712, G__17713);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__17714 = a;
  var G__17715 = b;
  var G__17716 = c;
  var G__17717 = d;
  var G__17718 = e;
  var G__17719 = f;
  var G__17720 = g;
  var G__17721 = h;
  var G__17722 = i;
  var G__17723 = j;
  var G__17724 = k;
  var G__17725 = l;
  var G__17726 = m;
  var G__17727 = n;
  var G__17728 = o;
  var G__17729 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__17714, G__17715, G__17716, G__17717, G__17718, G__17719, G__17720, G__17721, G__17722, G__17723, G__17724, G__17725, G__17726, G__17727, G__17728, G__17729) : self__.afn.call(null, G__17714, G__17715, G__17716, G__17717, G__17718, G__17719, G__17720, G__17721, G__17722, G__17723, G__17724, G__17725, G__17726, G__17727, G__17728, G__17729);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__17730 = a;
  var G__17731 = b;
  var G__17732 = c;
  var G__17733 = d;
  var G__17734 = e;
  var G__17735 = f;
  var G__17736 = g;
  var G__17737 = h;
  var G__17738 = i;
  var G__17739 = j;
  var G__17740 = k;
  var G__17741 = l;
  var G__17742 = m;
  var G__17743 = n;
  var G__17744 = o;
  var G__17745 = p;
  var G__17746 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__17730, G__17731, G__17732, G__17733, G__17734, G__17735, G__17736, G__17737, G__17738, G__17739, G__17740, G__17741, G__17742, G__17743, G__17744, G__17745, G__17746) : self__.afn.call(null, G__17730, G__17731, G__17732, G__17733, G__17734, G__17735, G__17736, G__17737, G__17738, G__17739, G__17740, G__17741, G__17742, G__17743, G__17744, G__17745, G__17746);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__17747 = a;
  var G__17748 = b;
  var G__17749 = c;
  var G__17750 = d;
  var G__17751 = e;
  var G__17752 = f;
  var G__17753 = g;
  var G__17754 = h;
  var G__17755 = i;
  var G__17756 = j;
  var G__17757 = k;
  var G__17758 = l;
  var G__17759 = m;
  var G__17760 = n;
  var G__17761 = o;
  var G__17762 = p;
  var G__17763 = q;
  var G__17764 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__17747, G__17748, G__17749, G__17750, G__17751, G__17752, G__17753, G__17754, G__17755, G__17756, G__17757, G__17758, G__17759, G__17760, G__17761, G__17762, G__17763, G__17764) : self__.afn.call(null, G__17747, G__17748, G__17749, G__17750, G__17751, G__17752, G__17753, G__17754, G__17755, G__17756, G__17757, G__17758, G__17759, G__17760, G__17761, G__17762, G__17763, G__17764);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__17765 = a;
  var G__17766 = b;
  var G__17767 = c;
  var G__17768 = d;
  var G__17769 = e;
  var G__17770 = f;
  var G__17771 = g;
  var G__17772 = h;
  var G__17773 = i;
  var G__17774 = j;
  var G__17775 = k;
  var G__17776 = l;
  var G__17777 = m;
  var G__17778 = n;
  var G__17779 = o;
  var G__17780 = p;
  var G__17781 = q;
  var G__17782 = r;
  var G__17783 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__17765, G__17766, G__17767, G__17768, G__17769, G__17770, G__17771, G__17772, G__17773, G__17774, G__17775, G__17776, G__17777, G__17778, G__17779, G__17780, G__17781, G__17782, G__17783) : self__.afn.call(null, G__17765, G__17766, G__17767, G__17768, G__17769, G__17770, G__17771, G__17772, G__17773, G__17774, G__17775, G__17776, G__17777, G__17778, G__17779, G__17780, G__17781, G__17782, G__17783);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__17784 = a;
  var G__17785 = b;
  var G__17786 = c;
  var G__17787 = d;
  var G__17788 = e;
  var G__17789 = f;
  var G__17790 = g;
  var G__17791 = h;
  var G__17792 = i;
  var G__17793 = j;
  var G__17794 = k;
  var G__17795 = l;
  var G__17796 = m;
  var G__17797 = n;
  var G__17798 = o;
  var G__17799 = p;
  var G__17800 = q;
  var G__17801 = r;
  var G__17802 = s;
  var G__17803 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__17784, G__17785, G__17786, G__17787, G__17788, G__17789, G__17790, G__17791, G__17792, G__17793, G__17794, G__17795, G__17796, G__17797, G__17798, G__17799, G__17800, G__17801, G__17802, G__17803) : self__.afn.call(null, G__17784, G__17785, G__17786, G__17787, G__17788, G__17789, G__17790, G__17791, G__17792, G__17793, G__17794, G__17795, G__17796, G__17797, G__17798, G__17799, G__17800, G__17801, G__17802, 
  G__17803);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__17804 = self__.afn;
  var G__17805 = a;
  var G__17806 = b;
  var G__17807 = c;
  var G__17808 = d;
  var G__17809 = e;
  var G__17810 = f;
  var G__17811 = g;
  var G__17812 = h;
  var G__17813 = i;
  var G__17814 = j;
  var G__17815 = k;
  var G__17816 = l;
  var G__17817 = m;
  var G__17818 = n;
  var G__17819 = o;
  var G__17820 = p;
  var G__17821 = q;
  var G__17822 = r;
  var G__17823 = s;
  var G__17824 = t;
  var G__17825 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__17804, G__17805, G__17806, G__17807, G__17808, G__17809, G__17810, G__17811, G__17812, G__17813, G__17814, G__17815, G__17816, G__17817, G__17818, G__17819, G__17820, G__17821, G__17822, G__17823, G__17824, G__17825) : cljs.core.apply.call(null, G__17804, G__17805, G__17806, G__17807, G__17808, G__17809, G__17810, G__17811, G__17812, G__17813, G__17814, G__17815, G__17816, G__17817, G__17818, 
  G__17819, G__17820, G__17821, G__17822, G__17823, G__17824, G__17825);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__17830 = o;
    if (G__17830) {
      var bit__4982__auto__ = G__17830.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4982__auto__ || G__17830.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__17830.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__17830);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__17830);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4296__auto__ = !(o == null);
    if (and__4296__auto__) {
      var G__17834 = o;
      if (G__17834) {
        var bit__4982__auto__ = G__17834.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4982__auto__ || G__17834.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__17834.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__17834);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__17834);
      }
    } else {
      return and__4296__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj() {
  var G__17839 = arguments.length;
  switch(G__17839) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__17841 = ret;
        var G__17842 = cljs.core.first(ks);
        var G__17843 = cljs.core.next(ks);
        coll = G__17841;
        k = G__17842;
        ks = G__17843;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq17835) {
  var G__17836 = cljs.core.first(seq17835);
  var seq17835__$1 = cljs.core.next(seq17835);
  var G__17837 = cljs.core.first(seq17835__$1);
  var seq17835__$2 = cljs.core.next(seq17835__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__17836, G__17837, seq17835__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__17845 = x;
    if (G__17845) {
      var bit__4982__auto__ = G__17845.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4982__auto__ || G__17845.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__17845.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__17845);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__17845);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__17847 = x;
    if (G__17847) {
      var bit__4982__auto__ = G__17847.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4982__auto__ || G__17847.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__17847.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__17847);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__17847);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  var G__17849 = x;
  if (G__17849) {
    var bit__4982__auto__ = G__17849.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4982__auto__ || G__17849.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__17849.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__17849);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__17849);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  var G__17851 = x;
  if (G__17851) {
    var bit__4982__auto__ = G__17851.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4982__auto__ || G__17851.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__17851.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__17851);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__17851);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  var G__17853 = x;
  if (G__17853) {
    var bit__4982__auto__ = G__17853.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4982__auto__ || G__17853.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__17853.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__17853);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__17853);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  var G__17855 = x;
  if (G__17855) {
    var bit__4982__auto__ = G__17855.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4982__auto__ || G__17855.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__17855.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__17855);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__17855);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__17857 = x;
    if (G__17857) {
      var bit__4982__auto__ = G__17857.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4982__auto__ || G__17857.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__17857.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__17857);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__17857);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  var G__17859 = x;
  if (G__17859) {
    var bit__4982__auto__ = G__17859.cljs$lang$protocol_mask$partition0$ & 67108864;
    if (bit__4982__auto__ || G__17859.cljs$core$IRecord$) {
      return true;
    } else {
      if (!G__17859.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, G__17859);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, G__17859);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  var G__17861 = x;
  if (G__17861) {
    var bit__4982__auto__ = G__17861.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4982__auto__ || G__17861.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__17861.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__17861);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__17861);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  var G__17863 = x;
  if (G__17863) {
    var bit__4975__auto__ = G__17863.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4975__auto__ || G__17863.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj() {
  var G__17866 = arguments.length;
  switch(G__17866) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5359__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  var obj17868 = {};
  return obj17868;
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var G__17869 = goog.object.create;
  var G__17870 = keyvals;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__17869, G__17870) : cljs.core.apply.call(null, G__17869, G__17870);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq17864) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17864));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__17874_17876 = obj;
  var G__17875_17877 = function(G__17874_17876, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__17874_17876, keys);
  goog.object.forEach(G__17874_17876, G__17875_17877);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__17878 = i__$1 + 1;
      var G__17879 = j__$1 + 1;
      var G__17880 = len__$1 - 1;
      i__$1 = G__17878;
      j__$1 = G__17879;
      len__$1 = G__17880;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__17881 = i__$1 - 1;
      var G__17882 = j__$1 - 1;
      var G__17883 = len__$1 - 1;
      i__$1 = G__17881;
      j__$1 = G__17882;
      len__$1 = G__17883;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj17885 = {};
  return obj17885;
}();
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__17887 = s;
    if (G__17887) {
      var bit__4982__auto__ = G__17887.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4982__auto__ || G__17887.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__17887.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17887);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17887);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var G__17889 = s;
  if (G__17889) {
    var bit__4982__auto__ = G__17889.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4982__auto__ || G__17889.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__17889.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__17889);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__17889);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4308__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4308__auto__) {
    return or__4308__auto__;
  } else {
    var G__17893 = f;
    if (G__17893) {
      var bit__4982__auto__ = G__17893.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4982__auto__ || G__17893.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__17893.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__17893);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__17893);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__17906 = n;
    return isNaN(G__17906);
  }()) && !(n === Infinity) && function() {
    var G__17907 = n;
    return parseFloat(G__17907);
  }() === function() {
    var G__17908 = n;
    var G__17909 = 10;
    return parseInt(G__17908, G__17909);
  }();
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_() {
  var G__17914 = arguments.length;
  switch(G__17914) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__17916 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__17917 = etc;
          s = G__17916;
          xs = G__17917;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq17910) {
  var G__17911 = cljs.core.first(seq17910);
  var seq17910__$1 = cljs.core.next(seq17910);
  var G__17912 = cljs.core.first(seq17910__$1);
  var seq17910__$2 = cljs.core.next(seq17910__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__17911, G__17912, seq17910__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__17921 = x;
            if (G__17921) {
              var bit__4975__auto__ = G__17921.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4975__auto__ || G__17921.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__17922 = x;
            var G__17923 = y;
            return goog.array.defaultCompare(G__17922, G__17923);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed() {
  var G__17925 = arguments.length;
  switch(G__17925) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__17927 = xs;
      var G__17928 = ys;
      var G__17929 = len;
      var G__17930 = n + 1;
      xs = G__17927;
      ys = G__17928;
      len = G__17929;
      n = G__17930;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__17935 = x;
        var G__17936 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17935, G__17936) : f.call(null, G__17935, G__17936);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(function() {
            var G__17937 = y;
            var G__17938 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17937, G__17938) : f.call(null, G__17937, G__17938);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort() {
  var G__17940 = arguments.length;
  switch(G__17940) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = function() {
      var G__17941 = coll;
      return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__17941) : cljs.core.to_array.call(null, G__17941);
    }();
    var G__17942_17945 = a;
    var G__17943_17946 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__17942_17945, G__17943_17946);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by() {
  var G__17948 = arguments.length;
  switch(G__17948) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, function() {
      var G__17949 = x;
      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17949) : keyfn.call(null, G__17949);
    }(), function() {
      var G__17950 = y;
      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17950) : keyfn.call(null, G__17950);
    }());
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce() {
  var G__17953 = arguments.length;
  switch(G__17953) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4420__auto__ = cljs.core.seq(coll);
  if (temp__4420__auto__) {
    var s = temp__4420__auto__;
    var G__17954 = f;
    var G__17955 = cljs.core.first(s);
    var G__17956 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__17954, G__17955, G__17956) : cljs.core.reduce.call(null, G__17954, G__17955, G__17956);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__17957 = val__$1;
        var G__17958 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17957, G__17958) : f.call(null, G__17957, G__17958);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__17960 = nval;
        var G__17961 = cljs.core.next(coll__$1);
        val__$1 = G__17960;
        coll__$1 = G__17961;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = function() {
    var G__17965 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__17965) : cljs.core.to_array.call(null, G__17965);
  }();
  var G__17966_17968 = a;
  goog.array.shuffle(G__17966_17968);
  var G__17967 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__17967) : cljs.core.vec.call(null, G__17967);
};
cljs.core.reduce = function cljs$core$reduce() {
  var G__17970 = arguments.length;
  switch(G__17970) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (function() {
    var G__17971 = coll;
    if (G__17971) {
      var bit__4975__auto__ = G__17971.cljs$lang$protocol_mask$partition0$ & 524288;
      if (bit__4975__auto__ || G__17971.cljs$core$IReduce$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (function() {
    var G__17972 = coll;
    if (G__17972) {
      var bit__4975__auto__ = G__17972.cljs$lang$protocol_mask$partition0$ & 524288;
      if (bit__4975__auto__ || G__17972.cljs$core$IReduce$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing() {
  var G__17975 = arguments.length;
  switch(G__17975) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__17980 = null;
    var G__17980__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__17980__1 = function(x) {
      var G__17976 = x;
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__17976) : cf.call(null, G__17976);
    };
    var G__17980__2 = function(x, y) {
      var G__17977 = x;
      var G__17978 = y;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17977, G__17978) : f.call(null, G__17977, G__17978);
    };
    G__17980 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__17980__0.call(this);
        case 1:
          return G__17980__1.call(this, x);
        case 2:
          return G__17980__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__17980.cljs$core$IFn$_invoke$arity$0 = G__17980__0;
    G__17980.cljs$core$IFn$_invoke$arity$1 = G__17980__1;
    G__17980.cljs$core$IFn$_invoke$arity$2 = G__17980__2;
    return G__17980;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce() {
  var G__17982 = arguments.length;
  switch(G__17982) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }(), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = function() {
    var G__17983 = f;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__17983) : xform.call(null, G__17983);
  }();
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  var G__17984 = ret;
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__17984) : f__$1.call(null, G__17984);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_() {
  var G__17990 = arguments.length;
  switch(G__17990) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq17986) {
  var G__17987 = cljs.core.first(seq17986);
  var seq17986__$1 = cljs.core.next(seq17986);
  var G__17988 = cljs.core.first(seq17986__$1);
  var seq17986__$2 = cljs.core.next(seq17986__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__17987, G__17988, seq17986__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_() {
  var G__17996 = arguments.length;
  switch(G__17996) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq17992) {
  var G__17993 = cljs.core.first(seq17992);
  var seq17992__$1 = cljs.core.next(seq17992);
  var G__17994 = cljs.core.first(seq17992__$1);
  var seq17992__$2 = cljs.core.next(seq17992__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__17993, G__17994, seq17992__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_() {
  var G__18002 = arguments.length;
  switch(G__18002) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq17998) {
  var G__17999 = cljs.core.first(seq17998);
  var seq17998__$1 = cljs.core.next(seq17998);
  var G__18000 = cljs.core.first(seq17998__$1);
  var seq17998__$2 = cljs.core.next(seq17998__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__17999, G__18000, seq17998__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_() {
  var G__18008 = arguments.length;
  switch(G__18008) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq18004) {
  var G__18005 = cljs.core.first(seq18004);
  var seq18004__$1 = cljs.core.next(seq18004);
  var G__18006 = cljs.core.first(seq18004__$1);
  var seq18004__$2 = cljs.core.next(seq18004__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__18005, G__18006, seq18004__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_() {
  var G__18014 = arguments.length;
  switch(G__18014) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__18016 = y;
        var G__18017 = cljs.core.first(more);
        var G__18018 = cljs.core.next(more);
        x = G__18016;
        y = G__18017;
        more = G__18018;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq18010) {
  var G__18011 = cljs.core.first(seq18010);
  var seq18010__$1 = cljs.core.next(seq18010);
  var G__18012 = cljs.core.first(seq18010__$1);
  var seq18010__$2 = cljs.core.next(seq18010__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__18011, G__18012, seq18010__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_() {
  var G__18023 = arguments.length;
  switch(G__18023) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__18025 = y;
        var G__18026 = cljs.core.first(more);
        var G__18027 = cljs.core.next(more);
        x = G__18025;
        y = G__18026;
        more = G__18027;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq18019) {
  var G__18020 = cljs.core.first(seq18019);
  var seq18019__$1 = cljs.core.next(seq18019);
  var G__18021 = cljs.core.first(seq18019__$1);
  var seq18019__$2 = cljs.core.next(seq18019__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__18020, G__18021, seq18019__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_() {
  var G__18032 = arguments.length;
  switch(G__18032) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__18034 = y;
        var G__18035 = cljs.core.first(more);
        var G__18036 = cljs.core.next(more);
        x = G__18034;
        y = G__18035;
        more = G__18036;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq18028) {
  var G__18029 = cljs.core.first(seq18028);
  var seq18028__$1 = cljs.core.next(seq18028);
  var G__18030 = cljs.core.first(seq18028__$1);
  var seq18028__$2 = cljs.core.next(seq18028__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__18029, G__18030, seq18028__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_() {
  var G__18041 = arguments.length;
  switch(G__18041) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__18043 = y;
        var G__18044 = cljs.core.first(more);
        var G__18045 = cljs.core.next(more);
        x = G__18043;
        y = G__18044;
        more = G__18045;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq18037) {
  var G__18038 = cljs.core.first(seq18037);
  var seq18037__$1 = cljs.core.next(seq18037);
  var G__18039 = cljs.core.first(seq18037__$1);
  var seq18037__$2 = cljs.core.next(seq18037__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__18038, G__18039, seq18037__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max() {
  var G__18050 = arguments.length;
  switch(G__18050) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4620__auto__ = x;
  var y__4621__auto__ = y;
  return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4620__auto__ = x;
    var y__4621__auto__ = y;
    return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq18046) {
  var G__18047 = cljs.core.first(seq18046);
  var seq18046__$1 = cljs.core.next(seq18046);
  var G__18048 = cljs.core.first(seq18046__$1);
  var seq18046__$2 = cljs.core.next(seq18046__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__18047, G__18048, seq18046__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min() {
  var G__18056 = arguments.length;
  switch(G__18056) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4627__auto__ = x;
  var y__4628__auto__ = y;
  return x__4627__auto__ < y__4628__auto__ ? x__4627__auto__ : y__4628__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4627__auto__ = x;
    var y__4628__auto__ = y;
    return x__4627__auto__ < y__4628__auto__ ? x__4627__auto__ : y__4628__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq18052) {
  var G__18053 = cljs.core.first(seq18052);
  var seq18052__$1 = cljs.core.next(seq18052);
  var G__18054 = cljs.core.first(seq18052__$1);
  var seq18052__$2 = cljs.core.next(seq18052__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__18053, G__18054, seq18052__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add() {
  var G__18062 = arguments.length;
  switch(G__18062) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq18058) {
  var G__18059 = cljs.core.first(seq18058);
  var seq18058__$1 = cljs.core.next(seq18058);
  var G__18060 = cljs.core.first(seq18058__$1);
  var seq18058__$2 = cljs.core.next(seq18058__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__18059, G__18060, seq18058__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int() {
  var G__18068 = arguments.length;
  switch(G__18068) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq18064) {
  var G__18065 = cljs.core.first(seq18064);
  var seq18064__$1 = cljs.core.next(seq18064);
  var G__18066 = cljs.core.first(seq18064__$1);
  var seq18064__$2 = cljs.core.next(seq18064__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__18065, G__18066, seq18064__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int() {
  var G__18074 = arguments.length;
  switch(G__18074) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq18070) {
  var G__18071 = cljs.core.first(seq18070);
  var seq18070__$1 = cljs.core.next(seq18070);
  var G__18072 = cljs.core.first(seq18070__$1);
  var seq18070__$2 = cljs.core.next(seq18070__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__18071, G__18072, seq18070__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply() {
  var G__18080 = arguments.length;
  switch(G__18080) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq18076) {
  var G__18077 = cljs.core.first(seq18076);
  var seq18076__$1 = cljs.core.next(seq18076);
  var G__18078 = cljs.core.first(seq18076__$1);
  var seq18076__$2 = cljs.core.next(seq18076__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__18077, G__18078, seq18076__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int() {
  var G__18086 = arguments.length;
  switch(G__18086) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq18082) {
  var G__18083 = cljs.core.first(seq18082);
  var seq18082__$1 = cljs.core.next(seq18082);
  var G__18084 = cljs.core.first(seq18082__$1);
  var seq18082__$2 = cljs.core.next(seq18082__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__18083, G__18084, seq18082__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  var G__18090 = x;
  var G__18091 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__18090, G__18091) : cljs.core.mod.call(null, G__18090, G__18091);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract() {
  var G__18096 = arguments.length;
  switch(G__18096) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq18092) {
  var G__18093 = cljs.core.first(seq18092);
  var seq18092__$1 = cljs.core.next(seq18092);
  var G__18094 = cljs.core.first(seq18092__$1);
  var seq18092__$2 = cljs.core.next(seq18092__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__18093, G__18094, seq18092__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int() {
  var G__18102 = arguments.length;
  switch(G__18102) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq18098) {
  var G__18099 = cljs.core.first(seq18098);
  var seq18098__$1 = cljs.core.next(seq18098);
  var G__18100 = cljs.core.first(seq18098__$1);
  var seq18098__$2 = cljs.core.next(seq18098__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__18099, G__18100, seq18098__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    var G__18106 = q;
    return Math.floor(G__18106);
  } else {
    var G__18107 = q;
    return Math.ceil(G__18107);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor() {
  var G__18112 = arguments.length;
  switch(G__18112) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq18108) {
  var G__18109 = cljs.core.first(seq18108);
  var seq18108__$1 = cljs.core.next(seq18108);
  var G__18110 = cljs.core.first(seq18108__$1);
  var seq18108__$2 = cljs.core.next(seq18108__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__18109, G__18110, seq18108__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and() {
  var G__18118 = arguments.length;
  switch(G__18118) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq18114) {
  var G__18115 = cljs.core.first(seq18114);
  var seq18114__$1 = cljs.core.next(seq18114);
  var G__18116 = cljs.core.first(seq18114__$1);
  var seq18114__$2 = cljs.core.next(seq18114__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__18115, G__18116, seq18114__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or() {
  var G__18124 = arguments.length;
  switch(G__18124) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq18120) {
  var G__18121 = cljs.core.first(seq18120);
  var seq18120__$1 = cljs.core.next(seq18120);
  var G__18122 = cljs.core.first(seq18120__$1);
  var seq18120__$2 = cljs.core.next(seq18120__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__18121, G__18122, seq18120__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not() {
  var G__18130 = arguments.length;
  switch(G__18130) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq18126) {
  var G__18127 = cljs.core.first(seq18126);
  var seq18126__$1 = cljs.core.next(seq18126);
  var G__18128 = cljs.core.first(seq18126__$1);
  var seq18126__$2 = cljs.core.next(seq18126__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__18127, G__18128, seq18126__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_() {
  var G__18136 = arguments.length;
  switch(G__18136) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__18138 = y;
        var G__18139 = cljs.core.first(more);
        var G__18140 = cljs.core.next(more);
        x = G__18138;
        y = G__18139;
        more = G__18140;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq18132) {
  var G__18133 = cljs.core.first(seq18132);
  var seq18132__$1 = cljs.core.next(seq18132);
  var G__18134 = cljs.core.first(seq18132__$1);
  var seq18132__$2 = cljs.core.next(seq18132__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__18133, G__18134, seq18132__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__18141 = n__$1 - 1;
      var G__18142 = cljs.core.next(xs);
      n__$1 = G__18141;
      xs = G__18142;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str() {
  var G__18146 = arguments.length;
  switch(G__18146) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    var G__18147 = x;
    return goog.string.buildString(G__18147);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__18149 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__18150 = cljs.core.next(more);
      sb = G__18149;
      more = G__18150;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq18143) {
  var G__18144 = cljs.core.first(seq18143);
  var seq18143__$1 = cljs.core.next(seq18143);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__18144, seq18143__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs() {
  var G__18152 = arguments.length;
  switch(G__18152) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__18154 = cljs.core.next(xs);
            var G__18155 = cljs.core.next(ys);
            xs = G__18154;
            ys = G__18155;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__18156 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__18157 = cljs.core.next(s);
        res = G__18156;
        s = G__18157;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__18162 = (h + (cljs.core.hash(function() {
        var G__18160 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__18160) : cljs.core.key.call(null, G__18160);
      }()) ^ cljs.core.hash(function() {
        var G__18161 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__18161) : cljs.core.val.call(null, G__18161);
      }()))) % 4503599627370496;
      var G__18163 = cljs.core.next(s);
      h = G__18162;
      s = G__18163;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__18164 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__18165 = cljs.core.next(s__$1);
      h = G__18164;
      s__$1 = G__18165;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__18176_18186 = cljs.core.seq(fn_map);
  var chunk__18177_18187 = null;
  var count__18178_18188 = 0;
  var i__18179_18189 = 0;
  while (true) {
    if (i__18179_18189 < count__18178_18188) {
      var vec__18180_18190 = chunk__18177_18187.cljs$core$IIndexed$_nth$arity$2(null, i__18179_18189);
      var key_name_18191 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18180_18190, 0, null);
      var f_18192 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18180_18190, 1, null);
      var str_name_18193 = function() {
        var G__18181 = key_name_18191;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__18181) : cljs.core.name.call(null, G__18181);
      }();
      obj[str_name_18193] = f_18192;
      var G__18194 = seq__18176_18186;
      var G__18195 = chunk__18177_18187;
      var G__18196 = count__18178_18188;
      var G__18197 = i__18179_18189 + 1;
      seq__18176_18186 = G__18194;
      chunk__18177_18187 = G__18195;
      count__18178_18188 = G__18196;
      i__18179_18189 = G__18197;
      continue;
    } else {
      var temp__4422__auto___18198 = cljs.core.seq(seq__18176_18186);
      if (temp__4422__auto___18198) {
        var seq__18176_18199__$1 = temp__4422__auto___18198;
        if (cljs.core.chunked_seq_QMARK_(seq__18176_18199__$1)) {
          var c__5093__auto___18200 = function() {
            var G__18182 = seq__18176_18199__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__18182) : cljs.core.chunk_first.call(null, G__18182);
          }();
          var G__18201 = function() {
            var G__18183 = seq__18176_18199__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__18183) : cljs.core.chunk_rest.call(null, G__18183);
          }();
          var G__18202 = c__5093__auto___18200;
          var G__18203 = cljs.core.count(c__5093__auto___18200);
          var G__18204 = 0;
          seq__18176_18186 = G__18201;
          chunk__18177_18187 = G__18202;
          count__18178_18188 = G__18203;
          i__18179_18189 = G__18204;
          continue;
        } else {
          var vec__18184_18205 = cljs.core.first(seq__18176_18199__$1);
          var key_name_18206 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18184_18205, 0, null);
          var f_18207 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18184_18205, 1, null);
          var str_name_18208 = function() {
            var G__18185 = key_name_18206;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__18185) : cljs.core.name.call(null, G__18185);
          }();
          obj[str_name_18208] = f_18207;
          var G__18209 = cljs.core.next(seq__18176_18199__$1);
          var G__18210 = null;
          var G__18211 = 0;
          var G__18212 = 0;
          seq__18176_18186 = G__18209;
          chunk__18177_18187 = G__18210;
          count__18178_18188 = G__18211;
          i__18179_18189 = G__18212;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  var G__18214 = coll;
  if (G__18214) {
    var bit__4982__auto__ = G__18214.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4982__auto__ || G__18214.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__18214.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__18214);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__18214);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__18216 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__18216;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__18217 = i - 1;
      var G__18218 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__18217;
      r = G__18218;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq18215) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq18215));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4308__auto__ = coll == null;
    if (or__4308__auto__) {
      return or__4308__auto__;
    } else {
      var G__18222 = coll;
      if (G__18222) {
        var bit__4975__auto__ = G__18222.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4975__auto__ || G__18222.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  var G__18224 = x;
  if (G__18224) {
    var bit__4982__auto__ = G__18224.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4982__auto__ || G__18224.cljs$core$IList$) {
      return true;
    } else {
      if (!G__18224.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__18224);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__18224);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4296__auto__ = cljs.core.not(a.ns);
      if (and__4296__auto__) {
        return b.ns;
      } else {
        return and__4296__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__18231 = a.ns;
            var G__18232 = b.ns;
            return goog.array.defaultCompare(G__18231, G__18232);
          }();
          if (0 === nsc) {
            var G__18233 = a.name;
            var G__18234 = b.name;
            return goog.array.defaultCompare(G__18233, G__18234);
          } else {
            return nsc;
          }
        }
      } else {
        var G__18235 = a.name;
        var G__18236 = b.name;
        return goog.array.defaultCompare(G__18235, G__18236);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__18238 = null;
  var G__18238__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__18238__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__18238 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18238__2.call(this, self__, coll);
      case 3:
        return G__18238__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18238.cljs$core$IFn$_invoke$arity$2 = G__18238__2;
  G__18238.cljs$core$IFn$_invoke$arity$3 = G__18238__3;
  return G__18238;
}();
cljs.core.Keyword.prototype.apply = function(self__, args18237) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args18237)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4724__auto__ = self__._hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null)], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (function() {
    var G__18240 = x;
    if (G__18240) {
      var bit__4975__auto__ = G__18240.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4975__auto__ || G__18240.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword() {
  var G__18242 = arguments.length;
  switch(G__18242) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), function() {
        var G__18243 = name;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__18243) : cljs.core.name.call(null, G__18243);
      }(), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__18245 = ls.sval();
        ls = G__18245;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk() {
  var G__18247 = arguments.length;
  switch(G__18247) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (function() {
    var G__18250 = s;
    if (G__18250) {
      var bit__4975__auto__ = G__18250.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4975__auto__ || G__18250.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__18251 = cljs.core.next(s__$1);
      s__$1 = G__18251;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_18252 = 0;
  var xs_18253 = cljs.core.seq(coll);
  while (true) {
    if (xs_18253) {
      ret[i_18252] = cljs.core.to_array(cljs.core.first(xs_18253));
      var G__18254 = i_18252 + 1;
      var G__18255 = cljs.core.next(xs_18253);
      i_18252 = G__18254;
      xs_18253 = G__18255;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array() {
  var G__18257 = arguments.length;
  switch(G__18257) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__18259 = i + 1;
        var G__18260 = cljs.core.next(s__$1);
        i = G__18259;
        s__$1 = G__18260;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5193__auto___18261 = size;
    var i_18262 = 0;
    while (true) {
      if (i_18262 < n__5193__auto___18261) {
        a[i_18262] = init_val_or_seq;
        var G__18263 = i_18262 + 1;
        i_18262 = G__18263;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array() {
  var G__18265 = arguments.length;
  switch(G__18265) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__18267 = i + 1;
        var G__18268 = cljs.core.next(s__$1);
        i = G__18267;
        s__$1 = G__18268;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5193__auto___18269 = size;
    var i_18270 = 0;
    while (true) {
      if (i_18270 < n__5193__auto___18269) {
        a[i_18270] = init_val_or_seq;
        var G__18271 = i_18270 + 1;
        i_18270 = G__18271;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array() {
  var G__18273 = arguments.length;
  switch(G__18273) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__18275 = i + 1;
        var G__18276 = cljs.core.next(s__$1);
        i = G__18275;
        s__$1 = G__18276;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5193__auto___18277 = size;
    var i_18278 = 0;
    while (true) {
      if (i_18278 < n__5193__auto___18277) {
        a[i_18278] = init_val_or_seq;
        var G__18279 = i_18278 + 1;
        i_18278 = G__18279;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array() {
  var G__18281 = arguments.length;
  switch(G__18281) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__18283 = i + 1;
        var G__18284 = cljs.core.next(s__$1);
        i = G__18283;
        s__$1 = G__18284;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5193__auto___18285 = size;
    var i_18286 = 0;
    while (true) {
      if (i_18286 < n__5193__auto___18285) {
        a[i_18286] = init_val_or_seq;
        var G__18287 = i_18286 + 1;
        i_18286 = G__18287;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__18288 = cljs.core.next(s__$1);
        var G__18289 = i - 1;
        var G__18290 = sum + 1;
        s__$1 = G__18288;
        i = G__18289;
        sum = G__18290;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat() {
  var G__18296 = arguments.length;
  switch(G__18296) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq18292) {
  var G__18293 = cljs.core.first(seq18292);
  var seq18292__$1 = cljs.core.next(seq18292);
  var G__18294 = cljs.core.first(seq18292__$1);
  var seq18292__$2 = cljs.core.next(seq18292__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__18293, G__18294, seq18292__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_() {
  var G__18310 = arguments.length;
  switch(G__18310) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5359__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq18304) {
  var G__18305 = cljs.core.first(seq18304);
  var seq18304__$1 = cljs.core.next(seq18304);
  var G__18306 = cljs.core.first(seq18304__$1);
  var seq18304__$2 = cljs.core.next(seq18304__$1);
  var G__18307 = cljs.core.first(seq18304__$2);
  var seq18304__$3 = cljs.core.next(seq18304__$2);
  var G__18308 = cljs.core.first(seq18304__$3);
  var seq18304__$4 = cljs.core.next(seq18304__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__18305, G__18306, G__18307, G__18308, seq18304__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_() {
  var G__18316 = arguments.length;
  switch(G__18316) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__18318 = ntcoll;
      var G__18319 = cljs.core.first(vals);
      var G__18320 = cljs.core.next(vals);
      tcoll = G__18318;
      val = G__18319;
      vals = G__18320;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq18312) {
  var G__18313 = cljs.core.first(seq18312);
  var seq18312__$1 = cljs.core.next(seq18312);
  var G__18314 = cljs.core.first(seq18312__$1);
  var seq18312__$2 = cljs.core.next(seq18312__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__18313, G__18314, seq18312__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_() {
  var G__18326 = arguments.length;
  switch(G__18326) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__18328 = ntcoll;
      var G__18329 = cljs.core.first(kvs);
      var G__18330 = cljs.core.second(kvs);
      var G__18331 = cljs.core.nnext(kvs);
      tcoll = G__18328;
      key = G__18329;
      val = G__18330;
      kvs = G__18331;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq18321) {
  var G__18322 = cljs.core.first(seq18321);
  var seq18321__$1 = cljs.core.next(seq18321);
  var G__18323 = cljs.core.first(seq18321__$1);
  var seq18321__$2 = cljs.core.next(seq18321__$1);
  var G__18324 = cljs.core.first(seq18321__$2);
  var seq18321__$3 = cljs.core.next(seq18321__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__18322, G__18323, G__18324, seq18321__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_() {
  var G__18336 = arguments.length;
  switch(G__18336) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__18338 = ntcoll;
      var G__18339 = cljs.core.first(ks);
      var G__18340 = cljs.core.next(ks);
      tcoll = G__18338;
      key = G__18339;
      ks = G__18340;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq18332) {
  var G__18333 = cljs.core.first(seq18332);
  var seq18332__$1 = cljs.core.next(seq18332);
  var G__18334 = cljs.core.first(seq18332__$1);
  var seq18332__$2 = cljs.core.next(seq18332__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__18333, G__18334, seq18332__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_() {
  var G__18345 = arguments.length;
  switch(G__18345) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__18347 = ntcoll;
      var G__18348 = cljs.core.first(vals);
      var G__18349 = cljs.core.next(vals);
      tcoll = G__18347;
      val = G__18348;
      vals = G__18349;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq18341) {
  var G__18342 = cljs.core.first(seq18341);
  var seq18341__$1 = cljs.core.next(seq18341);
  var G__18343 = cljs.core.first(seq18341__$1);
  var seq18341__$2 = cljs.core.next(seq18341__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__18342, G__18343, seq18341__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5237 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5237);
      } else {
        var G__18560 = a5237;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18560) : f.call(null, G__18560);
      }
    } else {
      var b5238 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5237, b5238);
        } else {
          var G__18561 = a5237;
          var G__18562 = b5238;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18561, G__18562) : f.call(null, G__18561, G__18562);
        }
      } else {
        var c5239 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5237, b5238, c5239);
          } else {
            var G__18563 = a5237;
            var G__18564 = b5238;
            var G__18565 = c5239;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18563, G__18564, G__18565) : f.call(null, G__18563, G__18564, G__18565);
          }
        } else {
          var d5240 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5237, b5238, c5239, d5240);
            } else {
              var G__18566 = a5237;
              var G__18567 = b5238;
              var G__18568 = c5239;
              var G__18569 = d5240;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18566, G__18567, G__18568, G__18569) : f.call(null, G__18566, G__18567, G__18568, G__18569);
            }
          } else {
            var e5241 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5237, b5238, c5239, d5240, e5241);
              } else {
                var G__18570 = a5237;
                var G__18571 = b5238;
                var G__18572 = c5239;
                var G__18573 = d5240;
                var G__18574 = e5241;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__18570, G__18571, G__18572, G__18573, G__18574) : f.call(null, G__18570, G__18571, G__18572, G__18573, G__18574);
              }
            } else {
              var f5242 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5237, b5238, c5239, d5240, e5241, f5242);
                } else {
                  var G__18575 = a5237;
                  var G__18576 = b5238;
                  var G__18577 = c5239;
                  var G__18578 = d5240;
                  var G__18579 = e5241;
                  var G__18580 = f5242;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__18575, G__18576, G__18577, G__18578, G__18579, G__18580) : f.call(null, G__18575, G__18576, G__18577, G__18578, G__18579, G__18580);
                }
              } else {
                var g5243 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5237, b5238, c5239, d5240, e5241, f5242, g5243);
                  } else {
                    var G__18581 = a5237;
                    var G__18582 = b5238;
                    var G__18583 = c5239;
                    var G__18584 = d5240;
                    var G__18585 = e5241;
                    var G__18586 = f5242;
                    var G__18587 = g5243;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__18581, G__18582, G__18583, G__18584, G__18585, G__18586, G__18587) : f.call(null, G__18581, G__18582, G__18583, G__18584, G__18585, G__18586, G__18587);
                  }
                } else {
                  var h5244 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244);
                    } else {
                      var G__18588 = a5237;
                      var G__18589 = b5238;
                      var G__18590 = c5239;
                      var G__18591 = d5240;
                      var G__18592 = e5241;
                      var G__18593 = f5242;
                      var G__18594 = g5243;
                      var G__18595 = h5244;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__18588, G__18589, G__18590, G__18591, G__18592, G__18593, G__18594, G__18595) : f.call(null, G__18588, G__18589, G__18590, G__18591, G__18592, G__18593, G__18594, G__18595);
                    }
                  } else {
                    var i5245 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245);
                      } else {
                        var G__18596 = a5237;
                        var G__18597 = b5238;
                        var G__18598 = c5239;
                        var G__18599 = d5240;
                        var G__18600 = e5241;
                        var G__18601 = f5242;
                        var G__18602 = g5243;
                        var G__18603 = h5244;
                        var G__18604 = i5245;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__18596, G__18597, G__18598, G__18599, G__18600, G__18601, G__18602, G__18603, G__18604) : f.call(null, G__18596, G__18597, G__18598, G__18599, G__18600, G__18601, G__18602, G__18603, G__18604);
                      }
                    } else {
                      var j5246 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246);
                        } else {
                          var G__18605 = a5237;
                          var G__18606 = b5238;
                          var G__18607 = c5239;
                          var G__18608 = d5240;
                          var G__18609 = e5241;
                          var G__18610 = f5242;
                          var G__18611 = g5243;
                          var G__18612 = h5244;
                          var G__18613 = i5245;
                          var G__18614 = j5246;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__18605, G__18606, G__18607, G__18608, G__18609, G__18610, G__18611, G__18612, G__18613, G__18614) : f.call(null, G__18605, G__18606, G__18607, G__18608, G__18609, G__18610, G__18611, G__18612, G__18613, G__18614);
                        }
                      } else {
                        var k5247 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247);
                          } else {
                            var G__18615 = a5237;
                            var G__18616 = b5238;
                            var G__18617 = c5239;
                            var G__18618 = d5240;
                            var G__18619 = e5241;
                            var G__18620 = f5242;
                            var G__18621 = g5243;
                            var G__18622 = h5244;
                            var G__18623 = i5245;
                            var G__18624 = j5246;
                            var G__18625 = k5247;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__18615, G__18616, G__18617, G__18618, G__18619, G__18620, G__18621, G__18622, G__18623, G__18624, G__18625) : f.call(null, G__18615, G__18616, G__18617, G__18618, G__18619, G__18620, G__18621, G__18622, G__18623, G__18624, G__18625);
                          }
                        } else {
                          var l5248 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248);
                            } else {
                              var G__18626 = a5237;
                              var G__18627 = b5238;
                              var G__18628 = c5239;
                              var G__18629 = d5240;
                              var G__18630 = e5241;
                              var G__18631 = f5242;
                              var G__18632 = g5243;
                              var G__18633 = h5244;
                              var G__18634 = i5245;
                              var G__18635 = j5246;
                              var G__18636 = k5247;
                              var G__18637 = l5248;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__18626, G__18627, G__18628, G__18629, G__18630, G__18631, G__18632, G__18633, G__18634, G__18635, G__18636, G__18637) : f.call(null, G__18626, G__18627, G__18628, G__18629, G__18630, G__18631, G__18632, G__18633, G__18634, G__18635, G__18636, G__18637);
                            }
                          } else {
                            var m5249 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249);
                              } else {
                                var G__18638 = a5237;
                                var G__18639 = b5238;
                                var G__18640 = c5239;
                                var G__18641 = d5240;
                                var G__18642 = e5241;
                                var G__18643 = f5242;
                                var G__18644 = g5243;
                                var G__18645 = h5244;
                                var G__18646 = i5245;
                                var G__18647 = j5246;
                                var G__18648 = k5247;
                                var G__18649 = l5248;
                                var G__18650 = m5249;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__18638, G__18639, G__18640, G__18641, G__18642, G__18643, G__18644, G__18645, G__18646, G__18647, G__18648, G__18649, G__18650) : f.call(null, G__18638, G__18639, G__18640, G__18641, G__18642, G__18643, G__18644, G__18645, G__18646, G__18647, G__18648, G__18649, G__18650);
                              }
                            } else {
                              var n5250 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250);
                                } else {
                                  var G__18651 = a5237;
                                  var G__18652 = b5238;
                                  var G__18653 = c5239;
                                  var G__18654 = d5240;
                                  var G__18655 = e5241;
                                  var G__18656 = f5242;
                                  var G__18657 = g5243;
                                  var G__18658 = h5244;
                                  var G__18659 = i5245;
                                  var G__18660 = j5246;
                                  var G__18661 = k5247;
                                  var G__18662 = l5248;
                                  var G__18663 = m5249;
                                  var G__18664 = n5250;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__18651, G__18652, G__18653, G__18654, G__18655, G__18656, G__18657, G__18658, G__18659, G__18660, G__18661, G__18662, G__18663, G__18664) : f.call(null, G__18651, G__18652, G__18653, G__18654, G__18655, G__18656, G__18657, G__18658, G__18659, G__18660, G__18661, G__18662, G__18663, G__18664);
                                }
                              } else {
                                var o5251 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251);
                                  } else {
                                    var G__18665 = a5237;
                                    var G__18666 = b5238;
                                    var G__18667 = c5239;
                                    var G__18668 = d5240;
                                    var G__18669 = e5241;
                                    var G__18670 = f5242;
                                    var G__18671 = g5243;
                                    var G__18672 = h5244;
                                    var G__18673 = i5245;
                                    var G__18674 = j5246;
                                    var G__18675 = k5247;
                                    var G__18676 = l5248;
                                    var G__18677 = m5249;
                                    var G__18678 = n5250;
                                    var G__18679 = o5251;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__18665, G__18666, G__18667, G__18668, G__18669, G__18670, G__18671, G__18672, G__18673, G__18674, G__18675, G__18676, G__18677, G__18678, G__18679) : f.call(null, G__18665, G__18666, G__18667, G__18668, G__18669, G__18670, G__18671, G__18672, G__18673, G__18674, G__18675, G__18676, G__18677, G__18678, G__18679);
                                  }
                                } else {
                                  var p5252 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251, p5252);
                                    } else {
                                      var G__18680 = a5237;
                                      var G__18681 = b5238;
                                      var G__18682 = c5239;
                                      var G__18683 = d5240;
                                      var G__18684 = e5241;
                                      var G__18685 = f5242;
                                      var G__18686 = g5243;
                                      var G__18687 = h5244;
                                      var G__18688 = i5245;
                                      var G__18689 = j5246;
                                      var G__18690 = k5247;
                                      var G__18691 = l5248;
                                      var G__18692 = m5249;
                                      var G__18693 = n5250;
                                      var G__18694 = o5251;
                                      var G__18695 = p5252;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__18680, G__18681, G__18682, G__18683, G__18684, G__18685, G__18686, G__18687, G__18688, G__18689, G__18690, G__18691, G__18692, G__18693, G__18694, G__18695) : f.call(null, G__18680, G__18681, G__18682, G__18683, G__18684, G__18685, G__18686, G__18687, G__18688, G__18689, G__18690, G__18691, G__18692, G__18693, G__18694, G__18695);
                                    }
                                  } else {
                                    var q5253 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251, p5252, q5253);
                                      } else {
                                        var G__18696 = a5237;
                                        var G__18697 = b5238;
                                        var G__18698 = c5239;
                                        var G__18699 = d5240;
                                        var G__18700 = e5241;
                                        var G__18701 = f5242;
                                        var G__18702 = g5243;
                                        var G__18703 = h5244;
                                        var G__18704 = i5245;
                                        var G__18705 = j5246;
                                        var G__18706 = k5247;
                                        var G__18707 = l5248;
                                        var G__18708 = m5249;
                                        var G__18709 = n5250;
                                        var G__18710 = o5251;
                                        var G__18711 = p5252;
                                        var G__18712 = q5253;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__18696, G__18697, G__18698, G__18699, G__18700, G__18701, G__18702, G__18703, G__18704, G__18705, G__18706, G__18707, G__18708, G__18709, G__18710, G__18711, G__18712) : f.call(null, G__18696, G__18697, G__18698, G__18699, G__18700, G__18701, G__18702, G__18703, G__18704, G__18705, G__18706, G__18707, G__18708, G__18709, G__18710, G__18711, G__18712);
                                      }
                                    } else {
                                      var r5254 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251, p5252, q5253, r5254);
                                        } else {
                                          var G__18713 = a5237;
                                          var G__18714 = b5238;
                                          var G__18715 = c5239;
                                          var G__18716 = d5240;
                                          var G__18717 = e5241;
                                          var G__18718 = f5242;
                                          var G__18719 = g5243;
                                          var G__18720 = h5244;
                                          var G__18721 = i5245;
                                          var G__18722 = j5246;
                                          var G__18723 = k5247;
                                          var G__18724 = l5248;
                                          var G__18725 = m5249;
                                          var G__18726 = n5250;
                                          var G__18727 = o5251;
                                          var G__18728 = p5252;
                                          var G__18729 = q5253;
                                          var G__18730 = r5254;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__18713, G__18714, G__18715, G__18716, G__18717, G__18718, G__18719, G__18720, G__18721, G__18722, G__18723, G__18724, G__18725, G__18726, G__18727, G__18728, G__18729, G__18730) : f.call(null, G__18713, G__18714, G__18715, G__18716, G__18717, G__18718, G__18719, G__18720, G__18721, G__18722, G__18723, G__18724, G__18725, G__18726, G__18727, G__18728, G__18729, G__18730);
                                        }
                                      } else {
                                        var s5255 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251, p5252, q5253, r5254, s5255);
                                          } else {
                                            var G__18731 = a5237;
                                            var G__18732 = b5238;
                                            var G__18733 = c5239;
                                            var G__18734 = d5240;
                                            var G__18735 = e5241;
                                            var G__18736 = f5242;
                                            var G__18737 = g5243;
                                            var G__18738 = h5244;
                                            var G__18739 = i5245;
                                            var G__18740 = j5246;
                                            var G__18741 = k5247;
                                            var G__18742 = l5248;
                                            var G__18743 = m5249;
                                            var G__18744 = n5250;
                                            var G__18745 = o5251;
                                            var G__18746 = p5252;
                                            var G__18747 = q5253;
                                            var G__18748 = r5254;
                                            var G__18749 = s5255;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__18731, G__18732, G__18733, G__18734, G__18735, G__18736, G__18737, G__18738, G__18739, G__18740, G__18741, G__18742, G__18743, G__18744, G__18745, G__18746, G__18747, G__18748, G__18749) : f.call(null, G__18731, G__18732, G__18733, G__18734, G__18735, G__18736, G__18737, G__18738, G__18739, G__18740, G__18741, G__18742, G__18743, G__18744, G__18745, G__18746, G__18747, G__18748, 
                                            G__18749);
                                          }
                                        } else {
                                          var t5256 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251, p5252, q5253, r5254, s5255, t5256);
                                            } else {
                                              var G__18750 = a5237;
                                              var G__18751 = b5238;
                                              var G__18752 = c5239;
                                              var G__18753 = d5240;
                                              var G__18754 = e5241;
                                              var G__18755 = f5242;
                                              var G__18756 = g5243;
                                              var G__18757 = h5244;
                                              var G__18758 = i5245;
                                              var G__18759 = j5246;
                                              var G__18760 = k5247;
                                              var G__18761 = l5248;
                                              var G__18762 = m5249;
                                              var G__18763 = n5250;
                                              var G__18764 = o5251;
                                              var G__18765 = p5252;
                                              var G__18766 = q5253;
                                              var G__18767 = r5254;
                                              var G__18768 = s5255;
                                              var G__18769 = t5256;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__18750, G__18751, G__18752, G__18753, G__18754, G__18755, G__18756, G__18757, G__18758, G__18759, G__18760, G__18761, G__18762, G__18763, G__18764, G__18765, G__18766, G__18767, G__18768, G__18769) : f.call(null, G__18750, G__18751, G__18752, G__18753, G__18754, G__18755, G__18756, G__18757, G__18758, G__18759, G__18760, G__18761, G__18762, G__18763, G__18764, G__18765, G__18766, 
                                              G__18767, G__18768, G__18769);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply() {
  var G__18777 = arguments.length;
  switch(G__18777) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5359__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq18770) {
  var G__18771 = cljs.core.first(seq18770);
  var seq18770__$1 = cljs.core.next(seq18770);
  var G__18772 = cljs.core.first(seq18770__$1);
  var seq18770__$2 = cljs.core.next(seq18770__$1);
  var G__18773 = cljs.core.first(seq18770__$2);
  var seq18770__$3 = cljs.core.next(seq18770__$2);
  var G__18774 = cljs.core.first(seq18770__$3);
  var seq18770__$4 = cljs.core.next(seq18770__$3);
  var G__18775 = cljs.core.first(seq18770__$4);
  var seq18770__$5 = cljs.core.next(seq18770__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__18771, G__18772, G__18773, G__18774, G__18775, seq18770__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta() {
  var G__18787 = arguments.length;
  switch(G__18787) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5359__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__18788 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18788) : f.call(null, G__18788);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__18789 = cljs.core.meta(obj);
    var G__18790 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18789, G__18790) : f.call(null, G__18789, G__18790);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__18791 = cljs.core.meta(obj);
    var G__18792 = a;
    var G__18793 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18791, G__18792, G__18793) : f.call(null, G__18791, G__18792, G__18793);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__18794 = cljs.core.meta(obj);
    var G__18795 = a;
    var G__18796 = b;
    var G__18797 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18794, G__18795, G__18796, G__18797) : f.call(null, G__18794, G__18795, G__18796, G__18797);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__18798 = cljs.core.meta(obj);
    var G__18799 = a;
    var G__18800 = b;
    var G__18801 = c;
    var G__18802 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__18798, G__18799, G__18800, G__18801, G__18802) : f.call(null, G__18798, G__18799, G__18800, G__18801, G__18802);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq18779) {
  var G__18780 = cljs.core.first(seq18779);
  var seq18779__$1 = cljs.core.next(seq18779);
  var G__18781 = cljs.core.first(seq18779__$1);
  var seq18779__$2 = cljs.core.next(seq18779__$1);
  var G__18782 = cljs.core.first(seq18779__$2);
  var seq18779__$3 = cljs.core.next(seq18779__$2);
  var G__18783 = cljs.core.first(seq18779__$3);
  var seq18779__$4 = cljs.core.next(seq18779__$3);
  var G__18784 = cljs.core.first(seq18779__$4);
  var seq18779__$5 = cljs.core.next(seq18779__$4);
  var G__18785 = cljs.core.first(seq18779__$5);
  var seq18779__$6 = cljs.core.next(seq18779__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__18780, G__18781, G__18782, G__18783, G__18784, G__18785, seq18779__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_() {
  var G__18808 = arguments.length;
  switch(G__18808) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq18804) {
  var G__18805 = cljs.core.first(seq18804);
  var seq18804__$1 = cljs.core.next(seq18804);
  var G__18806 = cljs.core.first(seq18804__$1);
  var seq18804__$2 = cljs.core.next(seq18804__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__18805, G__18806, seq18804__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t18813 !== "undefined") {
  } else {
    cljs.core.t18813 = function(nil_iter, meta18814) {
      this.nil_iter = nil_iter;
      this.meta18814 = meta18814;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t18813.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18815, meta18814__$1) {
      var self__ = this;
      var _18815__$1 = this;
      return new cljs.core.t18813(self__.nil_iter, meta18814__$1);
    };
    cljs.core.t18813.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18815) {
      var self__ = this;
      var _18815__$1 = this;
      return self__.meta18814;
    };
    cljs.core.t18813.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t18813.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t18813.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t18813.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.Symbol(null, "meta18814", "meta18814", 1193615765, null)], null);
    };
    cljs.core.t18813.cljs$lang$type = true;
    cljs.core.t18813.cljs$lang$ctorStr = "cljs.core/t18813";
    cljs.core.t18813.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
      return cljs.core._write(writer__4888__auto__, "cljs.core/t18813");
    };
    cljs.core.__GT_t18813 = function cljs$core$nil_iter_$___GT_t18813(nil_iter__$1, meta18814) {
      return new cljs.core.t18813(nil_iter__$1, meta18814);
    };
  }
  return new cljs.core.t18813(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.Symbol(null, "_next", "_next", 101877036, null)], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4296__auto__ = !(lt.stepper == null);
      if (and__4296__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4296__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__18816 = lt;
        var G__18817 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__18816, G__18817) : self__.xform.call(null, G__18816, G__18817);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__18818 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__18818) : self__.xform.call(null, G__18818);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__18820 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__18820) : xform.call(null, G__18820);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__18822 = cljs.core.next(iters__$1);
        iters__$1 = G__18822;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5193__auto___18823 = self__.iters.length;
  var i_18824 = 0;
  while (true) {
    if (i_18824 < n__5193__auto___18823) {
      self__.nexts[i_18824] = self__.iters[i_18824].next();
      var G__18825 = i_18824 + 1;
      i_18824 = G__18825;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4296__auto__ = !(lt.stepper == null);
      if (and__4296__auto__) {
        return this$.hasNext();
      } else {
        return and__4296__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__18821 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__18821) : self__.xform.call(null, G__18821);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper() {
  var G__18827 = arguments.length;
  switch(G__18827) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(function() {
    var G__18828 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__18828) : xform.call(null, G__18828);
  }(), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__18830_18834 = cljs.core.seq(colls);
  var chunk__18831_18835 = null;
  var count__18832_18836 = 0;
  var i__18833_18837 = 0;
  while (true) {
    if (i__18833_18837 < count__18832_18836) {
      var coll_18838 = chunk__18831_18835.cljs$core$IIndexed$_nth$arity$2(null, i__18833_18837);
      iters.push(cljs.core.iter(coll_18838));
      var G__18839 = seq__18830_18834;
      var G__18840 = chunk__18831_18835;
      var G__18841 = count__18832_18836;
      var G__18842 = i__18833_18837 + 1;
      seq__18830_18834 = G__18839;
      chunk__18831_18835 = G__18840;
      count__18832_18836 = G__18841;
      i__18833_18837 = G__18842;
      continue;
    } else {
      var temp__4422__auto___18843 = cljs.core.seq(seq__18830_18834);
      if (temp__4422__auto___18843) {
        var seq__18830_18844__$1 = temp__4422__auto___18843;
        if (cljs.core.chunked_seq_QMARK_(seq__18830_18844__$1)) {
          var c__5093__auto___18845 = cljs.core.chunk_first(seq__18830_18844__$1);
          var G__18846 = cljs.core.chunk_rest(seq__18830_18844__$1);
          var G__18847 = c__5093__auto___18845;
          var G__18848 = cljs.core.count(c__5093__auto___18845);
          var G__18849 = 0;
          seq__18830_18834 = G__18846;
          chunk__18831_18835 = G__18847;
          count__18832_18836 = G__18848;
          i__18833_18837 = G__18849;
          continue;
        } else {
          var coll_18850 = cljs.core.first(seq__18830_18844__$1);
          iters.push(cljs.core.iter(coll_18850));
          var G__18851 = cljs.core.next(seq__18830_18844__$1);
          var G__18852 = null;
          var G__18853 = 0;
          var G__18854 = 0;
          seq__18830_18834 = G__18851;
          chunk__18831_18835 = G__18852;
          count__18832_18836 = G__18853;
          i__18833_18837 = G__18854;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence() {
  var G__18859 = arguments.length;
  switch(G__18859) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4308__auto__ = cljs.core.seq(coll);
    if (or__4308__auto__) {
      return or__4308__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq18855) {
  var G__18856 = cljs.core.first(seq18855);
  var seq18855__$1 = cljs.core.next(seq18855);
  var G__18857 = cljs.core.first(seq18855__$1);
  var seq18855__$2 = cljs.core.next(seq18855__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__18856, G__18857, seq18855__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__18862 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18862) : pred.call(null, G__18862);
      }())) {
        var G__18863 = pred;
        var G__18864 = cljs.core.next(coll);
        pred = G__18863;
        coll = G__18864;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4308__auto__ = function() {
        var G__18868 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18868) : pred.call(null, G__18868);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var G__18869 = pred;
        var G__18870 = cljs.core.next(coll);
        pred = G__18869;
        coll = G__18870;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__18877 = null;
    var G__18877__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__18877__1 = function(x) {
      return cljs.core.not(function() {
        var G__18874 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18874) : f.call(null, G__18874);
      }());
    };
    var G__18877__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__18875 = x;
        var G__18876 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18875, G__18876) : f.call(null, G__18875, G__18876);
      }());
    };
    var G__18877__3 = function() {
      var G__18878__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__18878 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__18879__i = 0, G__18879__a = new Array(arguments.length - 2);
          while (G__18879__i < G__18879__a.length) {
            G__18879__a[G__18879__i] = arguments[G__18879__i + 2];
            ++G__18879__i;
          }
          zs = new cljs.core.IndexedSeq(G__18879__a, 0);
        }
        return G__18878__delegate.call(this, x, y, zs);
      };
      G__18878.cljs$lang$maxFixedArity = 2;
      G__18878.cljs$lang$applyTo = function(arglist__18880) {
        var x = cljs.core.first(arglist__18880);
        arglist__18880 = cljs.core.next(arglist__18880);
        var y = cljs.core.first(arglist__18880);
        var zs = cljs.core.rest(arglist__18880);
        return G__18878__delegate(x, y, zs);
      };
      G__18878.cljs$core$IFn$_invoke$arity$variadic = G__18878__delegate;
      return G__18878;
    }();
    G__18877 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__18877__0.call(this);
        case 1:
          return G__18877__1.call(this, x);
        case 2:
          return G__18877__2.call(this, x, y);
        default:
          var G__18881 = null;
          if (arguments.length > 2) {
            var G__18882__i = 0, G__18882__a = new Array(arguments.length - 2);
            while (G__18882__i < G__18882__a.length) {
              G__18882__a[G__18882__i] = arguments[G__18882__i + 2];
              ++G__18882__i;
            }
            G__18881 = new cljs.core.IndexedSeq(G__18882__a, 0);
          }
          return G__18877__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18881);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__18877.cljs$lang$maxFixedArity = 2;
    G__18877.cljs$lang$applyTo = G__18877__3.cljs$lang$applyTo;
    G__18877.cljs$core$IFn$_invoke$arity$0 = G__18877__0;
    G__18877.cljs$core$IFn$_invoke$arity$1 = G__18877__1;
    G__18877.cljs$core$IFn$_invoke$arity$2 = G__18877__2;
    G__18877.cljs$core$IFn$_invoke$arity$variadic = G__18877__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__18877;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__18883__delegate = function(args) {
      return x;
    };
    var G__18883 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__18884__i = 0, G__18884__a = new Array(arguments.length - 0);
        while (G__18884__i < G__18884__a.length) {
          G__18884__a[G__18884__i] = arguments[G__18884__i + 0];
          ++G__18884__i;
        }
        args = new cljs.core.IndexedSeq(G__18884__a, 0);
      }
      return G__18883__delegate.call(this, args);
    };
    G__18883.cljs$lang$maxFixedArity = 0;
    G__18883.cljs$lang$applyTo = function(arglist__18885) {
      var args = cljs.core.seq(arglist__18885);
      return G__18883__delegate(args);
    };
    G__18883.cljs$core$IFn$_invoke$arity$variadic = G__18883__delegate;
    return G__18883;
  }();
};
cljs.core.comp = function cljs$core$comp() {
  var G__18891 = arguments.length;
  switch(G__18891) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__18920 = null;
    var G__18920__0 = function() {
      var G__18892 = function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18892) : f.call(null, G__18892);
    };
    var G__18920__1 = function(x) {
      var G__18893 = function() {
        var G__18894 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18894) : g.call(null, G__18894);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18893) : f.call(null, G__18893);
    };
    var G__18920__2 = function(x, y) {
      var G__18895 = function() {
        var G__18896 = x;
        var G__18897 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__18896, G__18897) : g.call(null, G__18896, G__18897);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18895) : f.call(null, G__18895);
    };
    var G__18920__3 = function(x, y, z) {
      var G__18898 = function() {
        var G__18899 = x;
        var G__18900 = y;
        var G__18901 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__18899, G__18900, G__18901) : g.call(null, G__18899, G__18900, G__18901);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18898) : f.call(null, G__18898);
    };
    var G__18920__4 = function() {
      var G__18921__delegate = function(x, y, z, args) {
        var G__18902 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18902) : f.call(null, G__18902);
      };
      var G__18921 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__18922__i = 0, G__18922__a = new Array(arguments.length - 3);
          while (G__18922__i < G__18922__a.length) {
            G__18922__a[G__18922__i] = arguments[G__18922__i + 3];
            ++G__18922__i;
          }
          args = new cljs.core.IndexedSeq(G__18922__a, 0);
        }
        return G__18921__delegate.call(this, x, y, z, args);
      };
      G__18921.cljs$lang$maxFixedArity = 3;
      G__18921.cljs$lang$applyTo = function(arglist__18923) {
        var x = cljs.core.first(arglist__18923);
        arglist__18923 = cljs.core.next(arglist__18923);
        var y = cljs.core.first(arglist__18923);
        arglist__18923 = cljs.core.next(arglist__18923);
        var z = cljs.core.first(arglist__18923);
        var args = cljs.core.rest(arglist__18923);
        return G__18921__delegate(x, y, z, args);
      };
      G__18921.cljs$core$IFn$_invoke$arity$variadic = G__18921__delegate;
      return G__18921;
    }();
    G__18920 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__18920__0.call(this);
        case 1:
          return G__18920__1.call(this, x);
        case 2:
          return G__18920__2.call(this, x, y);
        case 3:
          return G__18920__3.call(this, x, y, z);
        default:
          var G__18924 = null;
          if (arguments.length > 3) {
            var G__18925__i = 0, G__18925__a = new Array(arguments.length - 3);
            while (G__18925__i < G__18925__a.length) {
              G__18925__a[G__18925__i] = arguments[G__18925__i + 3];
              ++G__18925__i;
            }
            G__18924 = new cljs.core.IndexedSeq(G__18925__a, 0);
          }
          return G__18920__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18924);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__18920.cljs$lang$maxFixedArity = 3;
    G__18920.cljs$lang$applyTo = G__18920__4.cljs$lang$applyTo;
    G__18920.cljs$core$IFn$_invoke$arity$0 = G__18920__0;
    G__18920.cljs$core$IFn$_invoke$arity$1 = G__18920__1;
    G__18920.cljs$core$IFn$_invoke$arity$2 = G__18920__2;
    G__18920.cljs$core$IFn$_invoke$arity$3 = G__18920__3;
    G__18920.cljs$core$IFn$_invoke$arity$variadic = G__18920__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__18920;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__18926 = null;
    var G__18926__0 = function() {
      var G__18903 = function() {
        var G__18904 = function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18904) : g.call(null, G__18904);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18903) : f.call(null, G__18903);
    };
    var G__18926__1 = function(x) {
      var G__18905 = function() {
        var G__18906 = function() {
          var G__18907 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__18907) : h.call(null, G__18907);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18906) : g.call(null, G__18906);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18905) : f.call(null, G__18905);
    };
    var G__18926__2 = function(x, y) {
      var G__18908 = function() {
        var G__18909 = function() {
          var G__18910 = x;
          var G__18911 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__18910, G__18911) : h.call(null, G__18910, G__18911);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18909) : g.call(null, G__18909);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18908) : f.call(null, G__18908);
    };
    var G__18926__3 = function(x, y, z) {
      var G__18912 = function() {
        var G__18913 = function() {
          var G__18914 = x;
          var G__18915 = y;
          var G__18916 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__18914, G__18915, G__18916) : h.call(null, G__18914, G__18915, G__18916);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18913) : g.call(null, G__18913);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18912) : f.call(null, G__18912);
    };
    var G__18926__4 = function() {
      var G__18927__delegate = function(x, y, z, args) {
        var G__18917 = function() {
          var G__18918 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18918) : g.call(null, G__18918);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18917) : f.call(null, G__18917);
      };
      var G__18927 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__18928__i = 0, G__18928__a = new Array(arguments.length - 3);
          while (G__18928__i < G__18928__a.length) {
            G__18928__a[G__18928__i] = arguments[G__18928__i + 3];
            ++G__18928__i;
          }
          args = new cljs.core.IndexedSeq(G__18928__a, 0);
        }
        return G__18927__delegate.call(this, x, y, z, args);
      };
      G__18927.cljs$lang$maxFixedArity = 3;
      G__18927.cljs$lang$applyTo = function(arglist__18929) {
        var x = cljs.core.first(arglist__18929);
        arglist__18929 = cljs.core.next(arglist__18929);
        var y = cljs.core.first(arglist__18929);
        arglist__18929 = cljs.core.next(arglist__18929);
        var z = cljs.core.first(arglist__18929);
        var args = cljs.core.rest(arglist__18929);
        return G__18927__delegate(x, y, z, args);
      };
      G__18927.cljs$core$IFn$_invoke$arity$variadic = G__18927__delegate;
      return G__18927;
    }();
    G__18926 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__18926__0.call(this);
        case 1:
          return G__18926__1.call(this, x);
        case 2:
          return G__18926__2.call(this, x, y);
        case 3:
          return G__18926__3.call(this, x, y, z);
        default:
          var G__18930 = null;
          if (arguments.length > 3) {
            var G__18931__i = 0, G__18931__a = new Array(arguments.length - 3);
            while (G__18931__i < G__18931__a.length) {
              G__18931__a[G__18931__i] = arguments[G__18931__i + 3];
              ++G__18931__i;
            }
            G__18930 = new cljs.core.IndexedSeq(G__18931__a, 0);
          }
          return G__18926__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18930);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__18926.cljs$lang$maxFixedArity = 3;
    G__18926.cljs$lang$applyTo = G__18926__4.cljs$lang$applyTo;
    G__18926.cljs$core$IFn$_invoke$arity$0 = G__18926__0;
    G__18926.cljs$core$IFn$_invoke$arity$1 = G__18926__1;
    G__18926.cljs$core$IFn$_invoke$arity$2 = G__18926__2;
    G__18926.cljs$core$IFn$_invoke$arity$3 = G__18926__3;
    G__18926.cljs$core$IFn$_invoke$arity$variadic = G__18926__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__18926;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__18932__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__18933 = cljs.core.first(fs__$2).call(null, ret);
            var G__18934 = cljs.core.next(fs__$2);
            ret = G__18933;
            fs__$2 = G__18934;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__18932 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__18935__i = 0, G__18935__a = new Array(arguments.length - 0);
          while (G__18935__i < G__18935__a.length) {
            G__18935__a[G__18935__i] = arguments[G__18935__i + 0];
            ++G__18935__i;
          }
          args = new cljs.core.IndexedSeq(G__18935__a, 0);
        }
        return G__18932__delegate.call(this, args);
      };
      G__18932.cljs$lang$maxFixedArity = 0;
      G__18932.cljs$lang$applyTo = function(arglist__18936) {
        var args = cljs.core.seq(arglist__18936);
        return G__18932__delegate(args);
      };
      G__18932.cljs$core$IFn$_invoke$arity$variadic = G__18932__delegate;
      return G__18932;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq18886) {
  var G__18887 = cljs.core.first(seq18886);
  var seq18886__$1 = cljs.core.next(seq18886);
  var G__18888 = cljs.core.first(seq18886__$1);
  var seq18886__$2 = cljs.core.next(seq18886__$1);
  var G__18889 = cljs.core.first(seq18886__$2);
  var seq18886__$3 = cljs.core.next(seq18886__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__18887, G__18888, G__18889, seq18886__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial() {
  var G__18943 = arguments.length;
  switch(G__18943) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5359__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__18987 = null;
    var G__18987__0 = function() {
      var G__18944 = arg1;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18944) : f.call(null, G__18944);
    };
    var G__18987__1 = function(x) {
      var G__18945 = arg1;
      var G__18946 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18945, G__18946) : f.call(null, G__18945, G__18946);
    };
    var G__18987__2 = function(x, y) {
      var G__18947 = arg1;
      var G__18948 = x;
      var G__18949 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18947, G__18948, G__18949) : f.call(null, G__18947, G__18948, G__18949);
    };
    var G__18987__3 = function(x, y, z) {
      var G__18950 = arg1;
      var G__18951 = x;
      var G__18952 = y;
      var G__18953 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18950, G__18951, G__18952, G__18953) : f.call(null, G__18950, G__18951, G__18952, G__18953);
    };
    var G__18987__4 = function() {
      var G__18988__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__18988 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__18989__i = 0, G__18989__a = new Array(arguments.length - 3);
          while (G__18989__i < G__18989__a.length) {
            G__18989__a[G__18989__i] = arguments[G__18989__i + 3];
            ++G__18989__i;
          }
          args = new cljs.core.IndexedSeq(G__18989__a, 0);
        }
        return G__18988__delegate.call(this, x, y, z, args);
      };
      G__18988.cljs$lang$maxFixedArity = 3;
      G__18988.cljs$lang$applyTo = function(arglist__18990) {
        var x = cljs.core.first(arglist__18990);
        arglist__18990 = cljs.core.next(arglist__18990);
        var y = cljs.core.first(arglist__18990);
        arglist__18990 = cljs.core.next(arglist__18990);
        var z = cljs.core.first(arglist__18990);
        var args = cljs.core.rest(arglist__18990);
        return G__18988__delegate(x, y, z, args);
      };
      G__18988.cljs$core$IFn$_invoke$arity$variadic = G__18988__delegate;
      return G__18988;
    }();
    G__18987 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__18987__0.call(this);
        case 1:
          return G__18987__1.call(this, x);
        case 2:
          return G__18987__2.call(this, x, y);
        case 3:
          return G__18987__3.call(this, x, y, z);
        default:
          var G__18991 = null;
          if (arguments.length > 3) {
            var G__18992__i = 0, G__18992__a = new Array(arguments.length - 3);
            while (G__18992__i < G__18992__a.length) {
              G__18992__a[G__18992__i] = arguments[G__18992__i + 3];
              ++G__18992__i;
            }
            G__18991 = new cljs.core.IndexedSeq(G__18992__a, 0);
          }
          return G__18987__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18991);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__18987.cljs$lang$maxFixedArity = 3;
    G__18987.cljs$lang$applyTo = G__18987__4.cljs$lang$applyTo;
    G__18987.cljs$core$IFn$_invoke$arity$0 = G__18987__0;
    G__18987.cljs$core$IFn$_invoke$arity$1 = G__18987__1;
    G__18987.cljs$core$IFn$_invoke$arity$2 = G__18987__2;
    G__18987.cljs$core$IFn$_invoke$arity$3 = G__18987__3;
    G__18987.cljs$core$IFn$_invoke$arity$variadic = G__18987__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__18987;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__18993 = null;
    var G__18993__0 = function() {
      var G__18954 = arg1;
      var G__18955 = arg2;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18954, G__18955) : f.call(null, G__18954, G__18955);
    };
    var G__18993__1 = function(x) {
      var G__18956 = arg1;
      var G__18957 = arg2;
      var G__18958 = x;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18956, G__18957, G__18958) : f.call(null, G__18956, G__18957, G__18958);
    };
    var G__18993__2 = function(x, y) {
      var G__18959 = arg1;
      var G__18960 = arg2;
      var G__18961 = x;
      var G__18962 = y;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18959, G__18960, G__18961, G__18962) : f.call(null, G__18959, G__18960, G__18961, G__18962);
    };
    var G__18993__3 = function(x, y, z) {
      var G__18963 = arg1;
      var G__18964 = arg2;
      var G__18965 = x;
      var G__18966 = y;
      var G__18967 = z;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__18963, G__18964, G__18965, G__18966, G__18967) : f.call(null, G__18963, G__18964, G__18965, G__18966, G__18967);
    };
    var G__18993__4 = function() {
      var G__18994__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__18994 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__18995__i = 0, G__18995__a = new Array(arguments.length - 3);
          while (G__18995__i < G__18995__a.length) {
            G__18995__a[G__18995__i] = arguments[G__18995__i + 3];
            ++G__18995__i;
          }
          args = new cljs.core.IndexedSeq(G__18995__a, 0);
        }
        return G__18994__delegate.call(this, x, y, z, args);
      };
      G__18994.cljs$lang$maxFixedArity = 3;
      G__18994.cljs$lang$applyTo = function(arglist__18996) {
        var x = cljs.core.first(arglist__18996);
        arglist__18996 = cljs.core.next(arglist__18996);
        var y = cljs.core.first(arglist__18996);
        arglist__18996 = cljs.core.next(arglist__18996);
        var z = cljs.core.first(arglist__18996);
        var args = cljs.core.rest(arglist__18996);
        return G__18994__delegate(x, y, z, args);
      };
      G__18994.cljs$core$IFn$_invoke$arity$variadic = G__18994__delegate;
      return G__18994;
    }();
    G__18993 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__18993__0.call(this);
        case 1:
          return G__18993__1.call(this, x);
        case 2:
          return G__18993__2.call(this, x, y);
        case 3:
          return G__18993__3.call(this, x, y, z);
        default:
          var G__18997 = null;
          if (arguments.length > 3) {
            var G__18998__i = 0, G__18998__a = new Array(arguments.length - 3);
            while (G__18998__i < G__18998__a.length) {
              G__18998__a[G__18998__i] = arguments[G__18998__i + 3];
              ++G__18998__i;
            }
            G__18997 = new cljs.core.IndexedSeq(G__18998__a, 0);
          }
          return G__18993__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18997);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__18993.cljs$lang$maxFixedArity = 3;
    G__18993.cljs$lang$applyTo = G__18993__4.cljs$lang$applyTo;
    G__18993.cljs$core$IFn$_invoke$arity$0 = G__18993__0;
    G__18993.cljs$core$IFn$_invoke$arity$1 = G__18993__1;
    G__18993.cljs$core$IFn$_invoke$arity$2 = G__18993__2;
    G__18993.cljs$core$IFn$_invoke$arity$3 = G__18993__3;
    G__18993.cljs$core$IFn$_invoke$arity$variadic = G__18993__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__18993;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__18999 = null;
    var G__18999__0 = function() {
      var G__18968 = arg1;
      var G__18969 = arg2;
      var G__18970 = arg3;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18968, G__18969, G__18970) : f.call(null, G__18968, G__18969, G__18970);
    };
    var G__18999__1 = function(x) {
      var G__18971 = arg1;
      var G__18972 = arg2;
      var G__18973 = arg3;
      var G__18974 = x;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18971, G__18972, G__18973, G__18974) : f.call(null, G__18971, G__18972, G__18973, G__18974);
    };
    var G__18999__2 = function(x, y) {
      var G__18975 = arg1;
      var G__18976 = arg2;
      var G__18977 = arg3;
      var G__18978 = x;
      var G__18979 = y;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__18975, G__18976, G__18977, G__18978, G__18979) : f.call(null, G__18975, G__18976, G__18977, G__18978, G__18979);
    };
    var G__18999__3 = function(x, y, z) {
      var G__18980 = arg1;
      var G__18981 = arg2;
      var G__18982 = arg3;
      var G__18983 = x;
      var G__18984 = y;
      var G__18985 = z;
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__18980, G__18981, G__18982, G__18983, G__18984, G__18985) : f.call(null, G__18980, G__18981, G__18982, G__18983, G__18984, G__18985);
    };
    var G__18999__4 = function() {
      var G__19000__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__19000 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19001__i = 0, G__19001__a = new Array(arguments.length - 3);
          while (G__19001__i < G__19001__a.length) {
            G__19001__a[G__19001__i] = arguments[G__19001__i + 3];
            ++G__19001__i;
          }
          args = new cljs.core.IndexedSeq(G__19001__a, 0);
        }
        return G__19000__delegate.call(this, x, y, z, args);
      };
      G__19000.cljs$lang$maxFixedArity = 3;
      G__19000.cljs$lang$applyTo = function(arglist__19002) {
        var x = cljs.core.first(arglist__19002);
        arglist__19002 = cljs.core.next(arglist__19002);
        var y = cljs.core.first(arglist__19002);
        arglist__19002 = cljs.core.next(arglist__19002);
        var z = cljs.core.first(arglist__19002);
        var args = cljs.core.rest(arglist__19002);
        return G__19000__delegate(x, y, z, args);
      };
      G__19000.cljs$core$IFn$_invoke$arity$variadic = G__19000__delegate;
      return G__19000;
    }();
    G__18999 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__18999__0.call(this);
        case 1:
          return G__18999__1.call(this, x);
        case 2:
          return G__18999__2.call(this, x, y);
        case 3:
          return G__18999__3.call(this, x, y, z);
        default:
          var G__19003 = null;
          if (arguments.length > 3) {
            var G__19004__i = 0, G__19004__a = new Array(arguments.length - 3);
            while (G__19004__i < G__19004__a.length) {
              G__19004__a[G__19004__i] = arguments[G__19004__i + 3];
              ++G__19004__i;
            }
            G__19003 = new cljs.core.IndexedSeq(G__19004__a, 0);
          }
          return G__18999__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19003);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__18999.cljs$lang$maxFixedArity = 3;
    G__18999.cljs$lang$applyTo = G__18999__4.cljs$lang$applyTo;
    G__18999.cljs$core$IFn$_invoke$arity$0 = G__18999__0;
    G__18999.cljs$core$IFn$_invoke$arity$1 = G__18999__1;
    G__18999.cljs$core$IFn$_invoke$arity$2 = G__18999__2;
    G__18999.cljs$core$IFn$_invoke$arity$3 = G__18999__3;
    G__18999.cljs$core$IFn$_invoke$arity$variadic = G__18999__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__18999;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__19005__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__19005 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__19006__i = 0, G__19006__a = new Array(arguments.length - 0);
        while (G__19006__i < G__19006__a.length) {
          G__19006__a[G__19006__i] = arguments[G__19006__i + 0];
          ++G__19006__i;
        }
        args = new cljs.core.IndexedSeq(G__19006__a, 0);
      }
      return G__19005__delegate.call(this, args);
    };
    G__19005.cljs$lang$maxFixedArity = 0;
    G__19005.cljs$lang$applyTo = function(arglist__19007) {
      var args = cljs.core.seq(arglist__19007);
      return G__19005__delegate(args);
    };
    G__19005.cljs$core$IFn$_invoke$arity$variadic = G__19005__delegate;
    return G__19005;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq18937) {
  var G__18938 = cljs.core.first(seq18937);
  var seq18937__$1 = cljs.core.next(seq18937);
  var G__18939 = cljs.core.first(seq18937__$1);
  var seq18937__$2 = cljs.core.next(seq18937__$1);
  var G__18940 = cljs.core.first(seq18937__$2);
  var seq18937__$3 = cljs.core.next(seq18937__$2);
  var G__18941 = cljs.core.first(seq18937__$3);
  var seq18937__$4 = cljs.core.next(seq18937__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__18938, G__18939, G__18940, G__18941, seq18937__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil() {
  var G__19009 = arguments.length;
  switch(G__19009) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__19027 = null;
    var G__19027__1 = function(a) {
      var G__19010 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19010) : f.call(null, G__19010);
    };
    var G__19027__2 = function(a, b) {
      var G__19011 = a == null ? x : a;
      var G__19012 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19011, G__19012) : f.call(null, G__19011, G__19012);
    };
    var G__19027__3 = function(a, b, c) {
      var G__19013 = a == null ? x : a;
      var G__19014 = b;
      var G__19015 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19013, G__19014, G__19015) : f.call(null, G__19013, G__19014, G__19015);
    };
    var G__19027__4 = function() {
      var G__19028__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__19028 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__19029__i = 0, G__19029__a = new Array(arguments.length - 3);
          while (G__19029__i < G__19029__a.length) {
            G__19029__a[G__19029__i] = arguments[G__19029__i + 3];
            ++G__19029__i;
          }
          ds = new cljs.core.IndexedSeq(G__19029__a, 0);
        }
        return G__19028__delegate.call(this, a, b, c, ds);
      };
      G__19028.cljs$lang$maxFixedArity = 3;
      G__19028.cljs$lang$applyTo = function(arglist__19030) {
        var a = cljs.core.first(arglist__19030);
        arglist__19030 = cljs.core.next(arglist__19030);
        var b = cljs.core.first(arglist__19030);
        arglist__19030 = cljs.core.next(arglist__19030);
        var c = cljs.core.first(arglist__19030);
        var ds = cljs.core.rest(arglist__19030);
        return G__19028__delegate(a, b, c, ds);
      };
      G__19028.cljs$core$IFn$_invoke$arity$variadic = G__19028__delegate;
      return G__19028;
    }();
    G__19027 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__19027__1.call(this, a);
        case 2:
          return G__19027__2.call(this, a, b);
        case 3:
          return G__19027__3.call(this, a, b, c);
        default:
          var G__19031 = null;
          if (arguments.length > 3) {
            var G__19032__i = 0, G__19032__a = new Array(arguments.length - 3);
            while (G__19032__i < G__19032__a.length) {
              G__19032__a[G__19032__i] = arguments[G__19032__i + 3];
              ++G__19032__i;
            }
            G__19031 = new cljs.core.IndexedSeq(G__19032__a, 0);
          }
          return G__19027__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__19031);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19027.cljs$lang$maxFixedArity = 3;
    G__19027.cljs$lang$applyTo = G__19027__4.cljs$lang$applyTo;
    G__19027.cljs$core$IFn$_invoke$arity$1 = G__19027__1;
    G__19027.cljs$core$IFn$_invoke$arity$2 = G__19027__2;
    G__19027.cljs$core$IFn$_invoke$arity$3 = G__19027__3;
    G__19027.cljs$core$IFn$_invoke$arity$variadic = G__19027__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19027;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__19033 = null;
    var G__19033__2 = function(a, b) {
      var G__19016 = a == null ? x : a;
      var G__19017 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19016, G__19017) : f.call(null, G__19016, G__19017);
    };
    var G__19033__3 = function(a, b, c) {
      var G__19018 = a == null ? x : a;
      var G__19019 = b == null ? y : b;
      var G__19020 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19018, G__19019, G__19020) : f.call(null, G__19018, G__19019, G__19020);
    };
    var G__19033__4 = function() {
      var G__19034__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__19034 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__19035__i = 0, G__19035__a = new Array(arguments.length - 3);
          while (G__19035__i < G__19035__a.length) {
            G__19035__a[G__19035__i] = arguments[G__19035__i + 3];
            ++G__19035__i;
          }
          ds = new cljs.core.IndexedSeq(G__19035__a, 0);
        }
        return G__19034__delegate.call(this, a, b, c, ds);
      };
      G__19034.cljs$lang$maxFixedArity = 3;
      G__19034.cljs$lang$applyTo = function(arglist__19036) {
        var a = cljs.core.first(arglist__19036);
        arglist__19036 = cljs.core.next(arglist__19036);
        var b = cljs.core.first(arglist__19036);
        arglist__19036 = cljs.core.next(arglist__19036);
        var c = cljs.core.first(arglist__19036);
        var ds = cljs.core.rest(arglist__19036);
        return G__19034__delegate(a, b, c, ds);
      };
      G__19034.cljs$core$IFn$_invoke$arity$variadic = G__19034__delegate;
      return G__19034;
    }();
    G__19033 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__19033__2.call(this, a, b);
        case 3:
          return G__19033__3.call(this, a, b, c);
        default:
          var G__19037 = null;
          if (arguments.length > 3) {
            var G__19038__i = 0, G__19038__a = new Array(arguments.length - 3);
            while (G__19038__i < G__19038__a.length) {
              G__19038__a[G__19038__i] = arguments[G__19038__i + 3];
              ++G__19038__i;
            }
            G__19037 = new cljs.core.IndexedSeq(G__19038__a, 0);
          }
          return G__19033__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__19037);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19033.cljs$lang$maxFixedArity = 3;
    G__19033.cljs$lang$applyTo = G__19033__4.cljs$lang$applyTo;
    G__19033.cljs$core$IFn$_invoke$arity$2 = G__19033__2;
    G__19033.cljs$core$IFn$_invoke$arity$3 = G__19033__3;
    G__19033.cljs$core$IFn$_invoke$arity$variadic = G__19033__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19033;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__19039 = null;
    var G__19039__2 = function(a, b) {
      var G__19021 = a == null ? x : a;
      var G__19022 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19021, G__19022) : f.call(null, G__19021, G__19022);
    };
    var G__19039__3 = function(a, b, c) {
      var G__19023 = a == null ? x : a;
      var G__19024 = b == null ? y : b;
      var G__19025 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19023, G__19024, G__19025) : f.call(null, G__19023, G__19024, G__19025);
    };
    var G__19039__4 = function() {
      var G__19040__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__19040 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__19041__i = 0, G__19041__a = new Array(arguments.length - 3);
          while (G__19041__i < G__19041__a.length) {
            G__19041__a[G__19041__i] = arguments[G__19041__i + 3];
            ++G__19041__i;
          }
          ds = new cljs.core.IndexedSeq(G__19041__a, 0);
        }
        return G__19040__delegate.call(this, a, b, c, ds);
      };
      G__19040.cljs$lang$maxFixedArity = 3;
      G__19040.cljs$lang$applyTo = function(arglist__19042) {
        var a = cljs.core.first(arglist__19042);
        arglist__19042 = cljs.core.next(arglist__19042);
        var b = cljs.core.first(arglist__19042);
        arglist__19042 = cljs.core.next(arglist__19042);
        var c = cljs.core.first(arglist__19042);
        var ds = cljs.core.rest(arglist__19042);
        return G__19040__delegate(a, b, c, ds);
      };
      G__19040.cljs$core$IFn$_invoke$arity$variadic = G__19040__delegate;
      return G__19040;
    }();
    G__19039 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__19039__2.call(this, a, b);
        case 3:
          return G__19039__3.call(this, a, b, c);
        default:
          var G__19043 = null;
          if (arguments.length > 3) {
            var G__19044__i = 0, G__19044__a = new Array(arguments.length - 3);
            while (G__19044__i < G__19044__a.length) {
              G__19044__a[G__19044__i] = arguments[G__19044__i + 3];
              ++G__19044__i;
            }
            G__19043 = new cljs.core.IndexedSeq(G__19044__a, 0);
          }
          return G__19039__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__19043);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19039.cljs$lang$maxFixedArity = 3;
    G__19039.cljs$lang$applyTo = G__19039__4.cljs$lang$applyTo;
    G__19039.cljs$core$IFn$_invoke$arity$2 = G__19039__2;
    G__19039.cljs$core$IFn$_invoke$arity$3 = G__19039__3;
    G__19039.cljs$core$IFn$_invoke$arity$variadic = G__19039__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19039;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed() {
  var G__19046 = arguments.length;
  switch(G__19046) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = function() {
      var G__19047 = -1;
      return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__19047) : cljs.core.volatile_BANG_.call(null, G__19047);
    }();
    return function(i) {
      return function() {
        var G__19078 = null;
        var G__19078__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19078__1 = function(result) {
          var G__19048 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19048) : rf.call(null, G__19048);
        };
        var G__19078__2 = function(result, input) {
          var G__19049 = result;
          var G__19050 = function() {
            var G__19051 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__19052 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19051, G__19052) : f.call(null, G__19051, G__19052);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19049, G__19050) : rf.call(null, G__19049, G__19050);
        };
        G__19078 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19078__0.call(this);
            case 1:
              return G__19078__1.call(this, result);
            case 2:
              return G__19078__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19078.cljs$core$IFn$_invoke$arity$0 = G__19078__0;
        G__19078.cljs$core$IFn$_invoke$arity$1 = G__19078__1;
        G__19078.cljs$core$IFn$_invoke$arity$2 = G__19078__2;
        return G__19078;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4422__auto__ = cljs.core.seq(coll__$1);
      if (temp__4422__auto__) {
        var s = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5193__auto___19079 = size;
          var i_19080 = 0;
          while (true) {
            if (i_19080 < n__5193__auto___19079) {
              cljs.core.chunk_append(b, function() {
                var G__19073 = idx + i_19080;
                var G__19074 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19080);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19073, G__19074) : f.call(null, G__19073, G__19074);
              }());
              var G__19081 = i_19080 + 1;
              i_19080 = G__19081;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__19075 = idx;
            var G__19076 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19075, G__19076) : f.call(null, G__19075, G__19076);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep() {
  var G__19083 = arguments.length;
  switch(G__19083) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__19091 = null;
      var G__19091__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__19091__1 = function(result) {
        var G__19084 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19084) : rf.call(null, G__19084);
      };
      var G__19091__2 = function(result, input) {
        var v = function() {
          var G__19085 = input;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19085) : f.call(null, G__19085);
        }();
        if (v == null) {
          return result;
        } else {
          var G__19086 = result;
          var G__19087 = v;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19086, G__19087) : rf.call(null, G__19086, G__19087);
        }
      };
      G__19091 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__19091__0.call(this);
          case 1:
            return G__19091__1.call(this, result);
          case 2:
            return G__19091__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19091.cljs$core$IFn$_invoke$arity$0 = G__19091__0;
      G__19091.cljs$core$IFn$_invoke$arity$1 = G__19091__1;
      G__19091.cljs$core$IFn$_invoke$arity$2 = G__19091__2;
      return G__19091;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5193__auto___19092 = size;
        var i_19093 = 0;
        while (true) {
          if (i_19093 < n__5193__auto___19092) {
            var x_19094 = function() {
              var G__19088 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19093);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19088) : f.call(null, G__19088);
            }();
            if (x_19094 == null) {
            } else {
              cljs.core.chunk_append(b, x_19094);
            }
            var G__19095 = i_19093 + 1;
            i_19093 = G__19095;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__19089 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19089) : f.call(null, G__19089);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__19096 = cljs.core.seq(self__.watches);
  var chunk__19097 = null;
  var count__19098 = 0;
  var i__19099 = 0;
  while (true) {
    if (i__19099 < count__19098) {
      var vec__19100 = chunk__19097.cljs$core$IIndexed$_nth$arity$2(null, i__19099);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19100, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19100, 1, null);
      var G__19101_19111 = key;
      var G__19102_19112 = this$__$1;
      var G__19103_19113 = oldval;
      var G__19104_19114 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19101_19111, G__19102_19112, G__19103_19113, G__19104_19114) : f.call(null, G__19101_19111, G__19102_19112, G__19103_19113, G__19104_19114);
      var G__19115 = seq__19096;
      var G__19116 = chunk__19097;
      var G__19117 = count__19098;
      var G__19118 = i__19099 + 1;
      seq__19096 = G__19115;
      chunk__19097 = G__19116;
      count__19098 = G__19117;
      i__19099 = G__19118;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__19096);
      if (temp__4422__auto__) {
        var seq__19096__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__19096__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__19096__$1);
          var G__19119 = cljs.core.chunk_rest(seq__19096__$1);
          var G__19120 = c__5093__auto__;
          var G__19121 = cljs.core.count(c__5093__auto__);
          var G__19122 = 0;
          seq__19096 = G__19119;
          chunk__19097 = G__19120;
          count__19098 = G__19121;
          i__19099 = G__19122;
          continue;
        } else {
          var vec__19105 = cljs.core.first(seq__19096__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19105, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19105, 1, null);
          var G__19106_19123 = key;
          var G__19107_19124 = this$__$1;
          var G__19108_19125 = oldval;
          var G__19109_19126 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19106_19123, G__19107_19124, G__19108_19125, G__19109_19126) : f.call(null, G__19106_19123, G__19107_19124, G__19108_19125, G__19109_19126);
          var G__19127 = cljs.core.next(seq__19096__$1);
          var G__19128 = null;
          var G__19129 = 0;
          var G__19130 = 0;
          seq__19096 = G__19127;
          chunk__19097 = G__19128;
          count__19098 = G__19129;
          i__19099 = G__19130;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__19110 = this$__$1;
  return goog.getUid(G__19110);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom() {
  var G__19134 = arguments.length;
  switch(G__19134) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__19135) {
  var map__19136 = p__19135;
  var map__19136__$1 = cljs.core.seq_QMARK_(map__19136) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__19136) : map__19136;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19136__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19136__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq19131) {
  var G__19132 = cljs.core.first(seq19131);
  var seq19131__$1 = cljs.core.next(seq19131);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__19132, seq19131__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__19140 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__19140) : validate.call(null, G__19140);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__19141 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__19141) : cljs.core.pr_str.call(null, G__19141);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_() {
  var G__19148 = arguments.length;
  switch(G__19148) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5359__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__19149 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19149) : f.call(null, G__19149);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__19150 = a.state;
      var G__19151 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19150, G__19151) : f.call(null, G__19150, G__19151);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__19152 = a.state;
      var G__19153 = x;
      var G__19154 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19152, G__19153, G__19154) : f.call(null, G__19152, G__19153, G__19154);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq19142) {
  var G__19143 = cljs.core.first(seq19142);
  var seq19142__$1 = cljs.core.next(seq19142);
  var G__19144 = cljs.core.first(seq19142__$1);
  var seq19142__$2 = cljs.core.next(seq19142__$1);
  var G__19145 = cljs.core.first(seq19142__$2);
  var seq19142__$3 = cljs.core.next(seq19142__$2);
  var G__19146 = cljs.core.first(seq19142__$3);
  var seq19142__$4 = cljs.core.next(seq19142__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__19143, G__19144, G__19145, G__19146, seq19142__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null)], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed() {
  var G__19157 = arguments.length;
  switch(G__19157) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__19192 = null;
        var G__19192__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19192__1 = function(result) {
          var G__19158 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19158) : rf.call(null, G__19158);
        };
        var G__19192__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = function() {
            var G__19159 = i;
            var G__19160 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19159, G__19160) : f.call(null, G__19159, G__19160);
          }();
          if (v == null) {
            return result;
          } else {
            var G__19161 = result;
            var G__19162 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19161, G__19162) : rf.call(null, G__19161, G__19162);
          }
        };
        G__19192 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19192__0.call(this);
            case 1:
              return G__19192__1.call(this, result);
            case 2:
              return G__19192__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19192.cljs$core$IFn$_invoke$arity$0 = G__19192__0;
        G__19192.cljs$core$IFn$_invoke$arity$1 = G__19192__1;
        G__19192.cljs$core$IFn$_invoke$arity$2 = G__19192__2;
        return G__19192;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4422__auto__ = cljs.core.seq(coll__$1);
      if (temp__4422__auto__) {
        var s = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5193__auto___19193 = size;
          var i_19194 = 0;
          while (true) {
            if (i_19194 < n__5193__auto___19193) {
              var x_19195 = function() {
                var G__19187 = idx + i_19194;
                var G__19188 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19194);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19187, G__19188) : f.call(null, G__19187, G__19188);
              }();
              if (x_19195 == null) {
              } else {
                cljs.core.chunk_append(b, x_19195);
              }
              var G__19196 = i_19194 + 1;
              i_19194 = G__19196;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__19189 = idx;
            var G__19190 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19189, G__19190) : f.call(null, G__19189, G__19190);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred() {
  var G__19208 = arguments.length;
  switch(G__19208) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(function() {
        var G__19224 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19224) : p.call(null, G__19224);
      }());
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__19226 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19226) : p.call(null, G__19226);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var G__19227 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19227) : p.call(null, G__19227);
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__19229 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19229) : p.call(null, G__19229);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__19231 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19231) : p.call(null, G__19231);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var G__19232 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19232) : p.call(null, G__19232);
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__19394__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4296__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4296__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4296__auto__;
          }
        }());
      };
      var G__19394 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19395__i = 0, G__19395__a = new Array(arguments.length - 3);
          while (G__19395__i < G__19395__a.length) {
            G__19395__a[G__19395__i] = arguments[G__19395__i + 3];
            ++G__19395__i;
          }
          args = new cljs.core.IndexedSeq(G__19395__a, 0);
        }
        return G__19394__delegate.call(this, x, y, z, args);
      };
      G__19394.cljs$lang$maxFixedArity = 3;
      G__19394.cljs$lang$applyTo = function(arglist__19396) {
        var x = cljs.core.first(arglist__19396);
        arglist__19396 = cljs.core.next(arglist__19396);
        var y = cljs.core.first(arglist__19396);
        arglist__19396 = cljs.core.next(arglist__19396);
        var z = cljs.core.first(arglist__19396);
        var args = cljs.core.rest(arglist__19396);
        return G__19394__delegate(x, y, z, args);
      };
      G__19394.cljs$core$IFn$_invoke$arity$variadic = G__19394__delegate;
      return G__19394;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__19397 = null;
          if (arguments.length > 3) {
            var G__19398__i = 0, G__19398__a = new Array(arguments.length - 3);
            while (G__19398__i < G__19398__a.length) {
              G__19398__a[G__19398__i] = arguments[G__19398__i + 3];
              ++G__19398__i;
            }
            G__19397 = new cljs.core.IndexedSeq(G__19398__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19397);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__19264 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19264) : p1.call(null, G__19264);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var G__19265 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19265) : p2.call(null, G__19265);
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__19267 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19267) : p1.call(null, G__19267);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__19269 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19269) : p1.call(null, G__19269);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var and__4296__auto____$2 = function() {
              var G__19271 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19271) : p2.call(null, G__19271);
            }();
            if (cljs.core.truth_(and__4296__auto____$2)) {
              var G__19272 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19272) : p2.call(null, G__19272);
            } else {
              return and__4296__auto____$2;
            }
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__19274 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19274) : p1.call(null, G__19274);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__19276 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19276) : p1.call(null, G__19276);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var and__4296__auto____$2 = function() {
              var G__19278 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19278) : p1.call(null, G__19278);
            }();
            if (cljs.core.truth_(and__4296__auto____$2)) {
              var and__4296__auto____$3 = function() {
                var G__19280 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19280) : p2.call(null, G__19280);
              }();
              if (cljs.core.truth_(and__4296__auto____$3)) {
                var and__4296__auto____$4 = function() {
                  var G__19282 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19282) : p2.call(null, G__19282);
                }();
                if (cljs.core.truth_(and__4296__auto____$4)) {
                  var G__19283 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19283) : p2.call(null, G__19283);
                } else {
                  return and__4296__auto____$4;
                }
              } else {
                return and__4296__auto____$3;
              }
            } else {
              return and__4296__auto____$2;
            }
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__19399__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4296__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4296__auto__)) {
            return cljs.core.every_QMARK_(function(and__4296__auto__) {
              return function(p1__19197_SHARP_) {
                var and__4296__auto____$1 = function() {
                  var G__19285 = p1__19197_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19285) : p1.call(null, G__19285);
                }();
                if (cljs.core.truth_(and__4296__auto____$1)) {
                  var G__19286 = p1__19197_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19286) : p2.call(null, G__19286);
                } else {
                  return and__4296__auto____$1;
                }
              };
            }(and__4296__auto__), args);
          } else {
            return and__4296__auto__;
          }
        }());
      };
      var G__19399 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19400__i = 0, G__19400__a = new Array(arguments.length - 3);
          while (G__19400__i < G__19400__a.length) {
            G__19400__a[G__19400__i] = arguments[G__19400__i + 3];
            ++G__19400__i;
          }
          args = new cljs.core.IndexedSeq(G__19400__a, 0);
        }
        return G__19399__delegate.call(this, x, y, z, args);
      };
      G__19399.cljs$lang$maxFixedArity = 3;
      G__19399.cljs$lang$applyTo = function(arglist__19401) {
        var x = cljs.core.first(arglist__19401);
        arglist__19401 = cljs.core.next(arglist__19401);
        var y = cljs.core.first(arglist__19401);
        arglist__19401 = cljs.core.next(arglist__19401);
        var z = cljs.core.first(arglist__19401);
        var args = cljs.core.rest(arglist__19401);
        return G__19399__delegate(x, y, z, args);
      };
      G__19399.cljs$core$IFn$_invoke$arity$variadic = G__19399__delegate;
      return G__19399;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__19402 = null;
          if (arguments.length > 3) {
            var G__19403__i = 0, G__19403__a = new Array(arguments.length - 3);
            while (G__19403__i < G__19403__a.length) {
              G__19403__a[G__19403__i] = arguments[G__19403__i + 3];
              ++G__19403__i;
            }
            G__19402 = new cljs.core.IndexedSeq(G__19403__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19402);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__19332 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19332) : p1.call(null, G__19332);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__19334 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19334) : p2.call(null, G__19334);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var G__19335 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19335) : p3.call(null, G__19335);
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__19337 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19337) : p1.call(null, G__19337);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__19339 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19339) : p2.call(null, G__19339);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var and__4296__auto____$2 = function() {
              var G__19341 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19341) : p3.call(null, G__19341);
            }();
            if (cljs.core.truth_(and__4296__auto____$2)) {
              var and__4296__auto____$3 = function() {
                var G__19343 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19343) : p1.call(null, G__19343);
              }();
              if (cljs.core.truth_(and__4296__auto____$3)) {
                var and__4296__auto____$4 = function() {
                  var G__19345 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19345) : p2.call(null, G__19345);
                }();
                if (cljs.core.truth_(and__4296__auto____$4)) {
                  var G__19346 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19346) : p3.call(null, G__19346);
                } else {
                  return and__4296__auto____$4;
                }
              } else {
                return and__4296__auto____$3;
              }
            } else {
              return and__4296__auto____$2;
            }
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__19348 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19348) : p1.call(null, G__19348);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__19350 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19350) : p2.call(null, G__19350);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var and__4296__auto____$2 = function() {
              var G__19352 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19352) : p3.call(null, G__19352);
            }();
            if (cljs.core.truth_(and__4296__auto____$2)) {
              var and__4296__auto____$3 = function() {
                var G__19354 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19354) : p1.call(null, G__19354);
              }();
              if (cljs.core.truth_(and__4296__auto____$3)) {
                var and__4296__auto____$4 = function() {
                  var G__19356 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19356) : p2.call(null, G__19356);
                }();
                if (cljs.core.truth_(and__4296__auto____$4)) {
                  var and__4296__auto____$5 = function() {
                    var G__19358 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19358) : p3.call(null, G__19358);
                  }();
                  if (cljs.core.truth_(and__4296__auto____$5)) {
                    var and__4296__auto____$6 = function() {
                      var G__19360 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19360) : p1.call(null, G__19360);
                    }();
                    if (cljs.core.truth_(and__4296__auto____$6)) {
                      var and__4296__auto____$7 = function() {
                        var G__19362 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19362) : p2.call(null, G__19362);
                      }();
                      if (cljs.core.truth_(and__4296__auto____$7)) {
                        var G__19363 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19363) : p3.call(null, G__19363);
                      } else {
                        return and__4296__auto____$7;
                      }
                    } else {
                      return and__4296__auto____$6;
                    }
                  } else {
                    return and__4296__auto____$5;
                  }
                } else {
                  return and__4296__auto____$4;
                }
              } else {
                return and__4296__auto____$3;
              }
            } else {
              return and__4296__auto____$2;
            }
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__19404__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4296__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4296__auto__)) {
            return cljs.core.every_QMARK_(function(and__4296__auto__) {
              return function(p1__19198_SHARP_) {
                var and__4296__auto____$1 = function() {
                  var G__19365 = p1__19198_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19365) : p1.call(null, G__19365);
                }();
                if (cljs.core.truth_(and__4296__auto____$1)) {
                  var and__4296__auto____$2 = function() {
                    var G__19367 = p1__19198_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19367) : p2.call(null, G__19367);
                  }();
                  if (cljs.core.truth_(and__4296__auto____$2)) {
                    var G__19368 = p1__19198_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19368) : p3.call(null, G__19368);
                  } else {
                    return and__4296__auto____$2;
                  }
                } else {
                  return and__4296__auto____$1;
                }
              };
            }(and__4296__auto__), args);
          } else {
            return and__4296__auto__;
          }
        }());
      };
      var G__19404 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19405__i = 0, G__19405__a = new Array(arguments.length - 3);
          while (G__19405__i < G__19405__a.length) {
            G__19405__a[G__19405__i] = arguments[G__19405__i + 3];
            ++G__19405__i;
          }
          args = new cljs.core.IndexedSeq(G__19405__a, 0);
        }
        return G__19404__delegate.call(this, x, y, z, args);
      };
      G__19404.cljs$lang$maxFixedArity = 3;
      G__19404.cljs$lang$applyTo = function(arglist__19406) {
        var x = cljs.core.first(arglist__19406);
        arglist__19406 = cljs.core.next(arglist__19406);
        var y = cljs.core.first(arglist__19406);
        arglist__19406 = cljs.core.next(arglist__19406);
        var z = cljs.core.first(arglist__19406);
        var args = cljs.core.rest(arglist__19406);
        return G__19404__delegate(x, y, z, args);
      };
      G__19404.cljs$core$IFn$_invoke$arity$variadic = G__19404__delegate;
      return G__19404;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__19407 = null;
          if (arguments.length > 3) {
            var G__19408__i = 0, G__19408__a = new Array(arguments.length - 3);
            while (G__19408__i < G__19408__a.length) {
              G__19408__a[G__19408__i] = arguments[G__19408__i + 3];
              ++G__19408__i;
            }
            G__19407 = new cljs.core.IndexedSeq(G__19408__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19407);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__19199_SHARP_) {
            var G__19384 = x;
            return p1__19199_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19199_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19384) : p1__19199_SHARP_.call(null, G__19384);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__19200_SHARP_) {
            var and__4296__auto__ = function() {
              var G__19386 = x;
              return p1__19200_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19200_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19386) : p1__19200_SHARP_.call(null, G__19386);
            }();
            if (cljs.core.truth_(and__4296__auto__)) {
              var G__19387 = y;
              return p1__19200_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19200_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19387) : p1__19200_SHARP_.call(null, G__19387);
            } else {
              return and__4296__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__19201_SHARP_) {
            var and__4296__auto__ = function() {
              var G__19389 = x;
              return p1__19201_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19201_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19389) : p1__19201_SHARP_.call(null, G__19389);
            }();
            if (cljs.core.truth_(and__4296__auto__)) {
              var and__4296__auto____$1 = function() {
                var G__19391 = y;
                return p1__19201_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19201_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19391) : p1__19201_SHARP_.call(null, G__19391);
              }();
              if (cljs.core.truth_(and__4296__auto____$1)) {
                var G__19392 = z;
                return p1__19201_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19201_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19392) : p1__19201_SHARP_.call(null, G__19392);
              } else {
                return and__4296__auto____$1;
              }
            } else {
              return and__4296__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__19409__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4296__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4296__auto__)) {
              return cljs.core.every_QMARK_(function(and__4296__auto__, ps__$1) {
                return function(p1__19202_SHARP_) {
                  return cljs.core.every_QMARK_(p1__19202_SHARP_, args);
                };
              }(and__4296__auto__, ps__$1), ps__$1);
            } else {
              return and__4296__auto__;
            }
          }());
        };
        var G__19409 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19410__i = 0, G__19410__a = new Array(arguments.length - 3);
            while (G__19410__i < G__19410__a.length) {
              G__19410__a[G__19410__i] = arguments[G__19410__i + 3];
              ++G__19410__i;
            }
            args = new cljs.core.IndexedSeq(G__19410__a, 0);
          }
          return G__19409__delegate.call(this, x, y, z, args);
        };
        G__19409.cljs$lang$maxFixedArity = 3;
        G__19409.cljs$lang$applyTo = function(arglist__19411) {
          var x = cljs.core.first(arglist__19411);
          arglist__19411 = cljs.core.next(arglist__19411);
          var y = cljs.core.first(arglist__19411);
          arglist__19411 = cljs.core.next(arglist__19411);
          var z = cljs.core.first(arglist__19411);
          var args = cljs.core.rest(arglist__19411);
          return G__19409__delegate(x, y, z, args);
        };
        G__19409.cljs$core$IFn$_invoke$arity$variadic = G__19409__delegate;
        return G__19409;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__19412 = null;
            if (arguments.length > 3) {
              var G__19413__i = 0, G__19413__a = new Array(arguments.length - 3);
              while (G__19413__i < G__19413__a.length) {
                G__19413__a[G__19413__i] = arguments[G__19413__i + 3];
                ++G__19413__i;
              }
              G__19412 = new cljs.core.IndexedSeq(G__19413__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19412);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq19203) {
  var G__19204 = cljs.core.first(seq19203);
  var seq19203__$1 = cljs.core.next(seq19203);
  var G__19205 = cljs.core.first(seq19203__$1);
  var seq19203__$2 = cljs.core.next(seq19203__$1);
  var G__19206 = cljs.core.first(seq19203__$2);
  var seq19203__$3 = cljs.core.next(seq19203__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__19204, G__19205, G__19206, seq19203__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn() {
  var G__19425 = arguments.length;
  switch(G__19425) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      var G__19441 = x;
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19441) : p.call(null, G__19441);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4308__auto__ = function() {
        var G__19443 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19443) : p.call(null, G__19443);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var G__19444 = y;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19444) : p.call(null, G__19444);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4308__auto__ = function() {
        var G__19446 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19446) : p.call(null, G__19446);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__19448 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19448) : p.call(null, G__19448);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var G__19449 = z;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19449) : p.call(null, G__19449);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__19611__delegate = function(x, y, z, args) {
        var or__4308__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__19611 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19612__i = 0, G__19612__a = new Array(arguments.length - 3);
          while (G__19612__i < G__19612__a.length) {
            G__19612__a[G__19612__i] = arguments[G__19612__i + 3];
            ++G__19612__i;
          }
          args = new cljs.core.IndexedSeq(G__19612__a, 0);
        }
        return G__19611__delegate.call(this, x, y, z, args);
      };
      G__19611.cljs$lang$maxFixedArity = 3;
      G__19611.cljs$lang$applyTo = function(arglist__19613) {
        var x = cljs.core.first(arglist__19613);
        arglist__19613 = cljs.core.next(arglist__19613);
        var y = cljs.core.first(arglist__19613);
        arglist__19613 = cljs.core.next(arglist__19613);
        var z = cljs.core.first(arglist__19613);
        var args = cljs.core.rest(arglist__19613);
        return G__19611__delegate(x, y, z, args);
      };
      G__19611.cljs$core$IFn$_invoke$arity$variadic = G__19611__delegate;
      return G__19611;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__19614 = null;
          if (arguments.length > 3) {
            var G__19615__i = 0, G__19615__a = new Array(arguments.length - 3);
            while (G__19615__i < G__19615__a.length) {
              G__19615__a[G__19615__i] = arguments[G__19615__i + 3];
              ++G__19615__i;
            }
            G__19614 = new cljs.core.IndexedSeq(G__19615__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19614);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4308__auto__ = function() {
        var G__19481 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19481) : p1.call(null, G__19481);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var G__19482 = x;
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19482) : p2.call(null, G__19482);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4308__auto__ = function() {
        var G__19484 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19484) : p1.call(null, G__19484);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__19486 = y;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19486) : p1.call(null, G__19486);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var or__4308__auto____$2 = function() {
            var G__19488 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19488) : p2.call(null, G__19488);
          }();
          if (cljs.core.truth_(or__4308__auto____$2)) {
            return or__4308__auto____$2;
          } else {
            var G__19489 = y;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19489) : p2.call(null, G__19489);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4308__auto__ = function() {
        var G__19491 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19491) : p1.call(null, G__19491);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__19493 = y;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19493) : p1.call(null, G__19493);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var or__4308__auto____$2 = function() {
            var G__19495 = z;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19495) : p1.call(null, G__19495);
          }();
          if (cljs.core.truth_(or__4308__auto____$2)) {
            return or__4308__auto____$2;
          } else {
            var or__4308__auto____$3 = function() {
              var G__19497 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19497) : p2.call(null, G__19497);
            }();
            if (cljs.core.truth_(or__4308__auto____$3)) {
              return or__4308__auto____$3;
            } else {
              var or__4308__auto____$4 = function() {
                var G__19499 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19499) : p2.call(null, G__19499);
              }();
              if (cljs.core.truth_(or__4308__auto____$4)) {
                return or__4308__auto____$4;
              } else {
                var G__19500 = z;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19500) : p2.call(null, G__19500);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__19616__delegate = function(x, y, z, args) {
        var or__4308__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return cljs.core.some(function(or__4308__auto__) {
            return function(p1__19414_SHARP_) {
              var or__4308__auto____$1 = function() {
                var G__19502 = p1__19414_SHARP_;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19502) : p1.call(null, G__19502);
              }();
              if (cljs.core.truth_(or__4308__auto____$1)) {
                return or__4308__auto____$1;
              } else {
                var G__19503 = p1__19414_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19503) : p2.call(null, G__19503);
              }
            };
          }(or__4308__auto__), args);
        }
      };
      var G__19616 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19617__i = 0, G__19617__a = new Array(arguments.length - 3);
          while (G__19617__i < G__19617__a.length) {
            G__19617__a[G__19617__i] = arguments[G__19617__i + 3];
            ++G__19617__i;
          }
          args = new cljs.core.IndexedSeq(G__19617__a, 0);
        }
        return G__19616__delegate.call(this, x, y, z, args);
      };
      G__19616.cljs$lang$maxFixedArity = 3;
      G__19616.cljs$lang$applyTo = function(arglist__19618) {
        var x = cljs.core.first(arglist__19618);
        arglist__19618 = cljs.core.next(arglist__19618);
        var y = cljs.core.first(arglist__19618);
        arglist__19618 = cljs.core.next(arglist__19618);
        var z = cljs.core.first(arglist__19618);
        var args = cljs.core.rest(arglist__19618);
        return G__19616__delegate(x, y, z, args);
      };
      G__19616.cljs$core$IFn$_invoke$arity$variadic = G__19616__delegate;
      return G__19616;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__19619 = null;
          if (arguments.length > 3) {
            var G__19620__i = 0, G__19620__a = new Array(arguments.length - 3);
            while (G__19620__i < G__19620__a.length) {
              G__19620__a[G__19620__i] = arguments[G__19620__i + 3];
              ++G__19620__i;
            }
            G__19619 = new cljs.core.IndexedSeq(G__19620__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19619);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4308__auto__ = function() {
        var G__19549 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19549) : p1.call(null, G__19549);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__19551 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19551) : p2.call(null, G__19551);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var G__19552 = x;
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19552) : p3.call(null, G__19552);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4308__auto__ = function() {
        var G__19554 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19554) : p1.call(null, G__19554);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__19556 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19556) : p2.call(null, G__19556);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var or__4308__auto____$2 = function() {
            var G__19558 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19558) : p3.call(null, G__19558);
          }();
          if (cljs.core.truth_(or__4308__auto____$2)) {
            return or__4308__auto____$2;
          } else {
            var or__4308__auto____$3 = function() {
              var G__19560 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19560) : p1.call(null, G__19560);
            }();
            if (cljs.core.truth_(or__4308__auto____$3)) {
              return or__4308__auto____$3;
            } else {
              var or__4308__auto____$4 = function() {
                var G__19562 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19562) : p2.call(null, G__19562);
              }();
              if (cljs.core.truth_(or__4308__auto____$4)) {
                return or__4308__auto____$4;
              } else {
                var G__19563 = y;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19563) : p3.call(null, G__19563);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4308__auto__ = function() {
        var G__19565 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19565) : p1.call(null, G__19565);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__19567 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19567) : p2.call(null, G__19567);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var or__4308__auto____$2 = function() {
            var G__19569 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19569) : p3.call(null, G__19569);
          }();
          if (cljs.core.truth_(or__4308__auto____$2)) {
            return or__4308__auto____$2;
          } else {
            var or__4308__auto____$3 = function() {
              var G__19571 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19571) : p1.call(null, G__19571);
            }();
            if (cljs.core.truth_(or__4308__auto____$3)) {
              return or__4308__auto____$3;
            } else {
              var or__4308__auto____$4 = function() {
                var G__19573 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19573) : p2.call(null, G__19573);
              }();
              if (cljs.core.truth_(or__4308__auto____$4)) {
                return or__4308__auto____$4;
              } else {
                var or__4308__auto____$5 = function() {
                  var G__19575 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19575) : p3.call(null, G__19575);
                }();
                if (cljs.core.truth_(or__4308__auto____$5)) {
                  return or__4308__auto____$5;
                } else {
                  var or__4308__auto____$6 = function() {
                    var G__19577 = z;
                    return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19577) : p1.call(null, G__19577);
                  }();
                  if (cljs.core.truth_(or__4308__auto____$6)) {
                    return or__4308__auto____$6;
                  } else {
                    var or__4308__auto____$7 = function() {
                      var G__19579 = z;
                      return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19579) : p2.call(null, G__19579);
                    }();
                    if (cljs.core.truth_(or__4308__auto____$7)) {
                      return or__4308__auto____$7;
                    } else {
                      var G__19580 = z;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19580) : p3.call(null, G__19580);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__19621__delegate = function(x, y, z, args) {
        var or__4308__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return cljs.core.some(function(or__4308__auto__) {
            return function(p1__19415_SHARP_) {
              var or__4308__auto____$1 = function() {
                var G__19582 = p1__19415_SHARP_;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19582) : p1.call(null, G__19582);
              }();
              if (cljs.core.truth_(or__4308__auto____$1)) {
                return or__4308__auto____$1;
              } else {
                var or__4308__auto____$2 = function() {
                  var G__19584 = p1__19415_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19584) : p2.call(null, G__19584);
                }();
                if (cljs.core.truth_(or__4308__auto____$2)) {
                  return or__4308__auto____$2;
                } else {
                  var G__19585 = p1__19415_SHARP_;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19585) : p3.call(null, G__19585);
                }
              }
            };
          }(or__4308__auto__), args);
        }
      };
      var G__19621 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19622__i = 0, G__19622__a = new Array(arguments.length - 3);
          while (G__19622__i < G__19622__a.length) {
            G__19622__a[G__19622__i] = arguments[G__19622__i + 3];
            ++G__19622__i;
          }
          args = new cljs.core.IndexedSeq(G__19622__a, 0);
        }
        return G__19621__delegate.call(this, x, y, z, args);
      };
      G__19621.cljs$lang$maxFixedArity = 3;
      G__19621.cljs$lang$applyTo = function(arglist__19623) {
        var x = cljs.core.first(arglist__19623);
        arglist__19623 = cljs.core.next(arglist__19623);
        var y = cljs.core.first(arglist__19623);
        arglist__19623 = cljs.core.next(arglist__19623);
        var z = cljs.core.first(arglist__19623);
        var args = cljs.core.rest(arglist__19623);
        return G__19621__delegate(x, y, z, args);
      };
      G__19621.cljs$core$IFn$_invoke$arity$variadic = G__19621__delegate;
      return G__19621;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__19624 = null;
          if (arguments.length > 3) {
            var G__19625__i = 0, G__19625__a = new Array(arguments.length - 3);
            while (G__19625__i < G__19625__a.length) {
              G__19625__a[G__19625__i] = arguments[G__19625__i + 3];
              ++G__19625__i;
            }
            G__19624 = new cljs.core.IndexedSeq(G__19625__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19624);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__19416_SHARP_) {
            var G__19601 = x;
            return p1__19416_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19416_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19601) : p1__19416_SHARP_.call(null, G__19601);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__19417_SHARP_) {
            var or__4308__auto__ = function() {
              var G__19603 = x;
              return p1__19417_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19417_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19603) : p1__19417_SHARP_.call(null, G__19603);
            }();
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              var G__19604 = y;
              return p1__19417_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19417_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19604) : p1__19417_SHARP_.call(null, G__19604);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__19418_SHARP_) {
            var or__4308__auto__ = function() {
              var G__19606 = x;
              return p1__19418_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19418_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19606) : p1__19418_SHARP_.call(null, G__19606);
            }();
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              var or__4308__auto____$1 = function() {
                var G__19608 = y;
                return p1__19418_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19418_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19608) : p1__19418_SHARP_.call(null, G__19608);
              }();
              if (cljs.core.truth_(or__4308__auto____$1)) {
                return or__4308__auto____$1;
              } else {
                var G__19609 = z;
                return p1__19418_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19418_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19609) : p1__19418_SHARP_.call(null, G__19609);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__19626__delegate = function(x, y, z, args) {
          var or__4308__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return cljs.core.some(function(or__4308__auto__, ps__$1) {
              return function(p1__19419_SHARP_) {
                return cljs.core.some(p1__19419_SHARP_, args);
              };
            }(or__4308__auto__, ps__$1), ps__$1);
          }
        };
        var G__19626 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19627__i = 0, G__19627__a = new Array(arguments.length - 3);
            while (G__19627__i < G__19627__a.length) {
              G__19627__a[G__19627__i] = arguments[G__19627__i + 3];
              ++G__19627__i;
            }
            args = new cljs.core.IndexedSeq(G__19627__a, 0);
          }
          return G__19626__delegate.call(this, x, y, z, args);
        };
        G__19626.cljs$lang$maxFixedArity = 3;
        G__19626.cljs$lang$applyTo = function(arglist__19628) {
          var x = cljs.core.first(arglist__19628);
          arglist__19628 = cljs.core.next(arglist__19628);
          var y = cljs.core.first(arglist__19628);
          arglist__19628 = cljs.core.next(arglist__19628);
          var z = cljs.core.first(arglist__19628);
          var args = cljs.core.rest(arglist__19628);
          return G__19626__delegate(x, y, z, args);
        };
        G__19626.cljs$core$IFn$_invoke$arity$variadic = G__19626__delegate;
        return G__19626;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__19629 = null;
            if (arguments.length > 3) {
              var G__19630__i = 0, G__19630__a = new Array(arguments.length - 3);
              while (G__19630__i < G__19630__a.length) {
                G__19630__a[G__19630__i] = arguments[G__19630__i + 3];
                ++G__19630__i;
              }
              G__19629 = new cljs.core.IndexedSeq(G__19630__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19629);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq19420) {
  var G__19421 = cljs.core.first(seq19420);
  var seq19420__$1 = cljs.core.next(seq19420);
  var G__19422 = cljs.core.first(seq19420__$1);
  var seq19420__$2 = cljs.core.next(seq19420__$1);
  var G__19423 = cljs.core.first(seq19420__$2);
  var seq19420__$3 = cljs.core.next(seq19420__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__19421, G__19422, G__19423, seq19420__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map() {
  var G__19638 = arguments.length;
  switch(G__19638) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5359__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__19654 = null;
      var G__19654__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__19654__1 = function(result) {
        var G__19639 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19639) : rf.call(null, G__19639);
      };
      var G__19654__2 = function(result, input) {
        var G__19640 = result;
        var G__19641 = function() {
          var G__19642 = input;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19642) : f.call(null, G__19642);
        }();
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19640, G__19641) : rf.call(null, G__19640, G__19641);
      };
      var G__19654__3 = function() {
        var G__19655__delegate = function(result, input, inputs) {
          var G__19643 = result;
          var G__19644 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19643, G__19644) : rf.call(null, G__19643, G__19644);
        };
        var G__19655 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__19656__i = 0, G__19656__a = new Array(arguments.length - 2);
            while (G__19656__i < G__19656__a.length) {
              G__19656__a[G__19656__i] = arguments[G__19656__i + 2];
              ++G__19656__i;
            }
            inputs = new cljs.core.IndexedSeq(G__19656__a, 0);
          }
          return G__19655__delegate.call(this, result, input, inputs);
        };
        G__19655.cljs$lang$maxFixedArity = 2;
        G__19655.cljs$lang$applyTo = function(arglist__19657) {
          var result = cljs.core.first(arglist__19657);
          arglist__19657 = cljs.core.next(arglist__19657);
          var input = cljs.core.first(arglist__19657);
          var inputs = cljs.core.rest(arglist__19657);
          return G__19655__delegate(result, input, inputs);
        };
        G__19655.cljs$core$IFn$_invoke$arity$variadic = G__19655__delegate;
        return G__19655;
      }();
      G__19654 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__19654__0.call(this);
          case 1:
            return G__19654__1.call(this, result);
          case 2:
            return G__19654__2.call(this, result, input);
          default:
            var G__19658 = null;
            if (arguments.length > 2) {
              var G__19659__i = 0, G__19659__a = new Array(arguments.length - 2);
              while (G__19659__i < G__19659__a.length) {
                G__19659__a[G__19659__i] = arguments[G__19659__i + 2];
                ++G__19659__i;
              }
              G__19658 = new cljs.core.IndexedSeq(G__19659__a, 0);
            }
            return G__19654__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__19658);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19654.cljs$lang$maxFixedArity = 2;
      G__19654.cljs$lang$applyTo = G__19654__3.cljs$lang$applyTo;
      G__19654.cljs$core$IFn$_invoke$arity$0 = G__19654__0;
      G__19654.cljs$core$IFn$_invoke$arity$1 = G__19654__1;
      G__19654.cljs$core$IFn$_invoke$arity$2 = G__19654__2;
      G__19654.cljs$core$IFn$_invoke$arity$variadic = G__19654__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__19654;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5193__auto___19660 = size;
        var i_19661 = 0;
        while (true) {
          if (i_19661 < n__5193__auto___19660) {
            cljs.core.chunk_append(b, function() {
              var G__19645 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19661);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19645) : f.call(null, G__19645);
            }());
            var G__19662 = i_19661 + 1;
            i_19661 = G__19662;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__19646 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19646) : f.call(null, G__19646);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__19647 = cljs.core.first(s1);
        var G__19648 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19647, G__19648) : f.call(null, G__19647, G__19648);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__19649 = cljs.core.first(s1);
        var G__19650 = cljs.core.first(s2);
        var G__19651 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19649, G__19650, G__19651) : f.call(null, G__19649, G__19650, G__19651);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__19631_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__19631_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq19632) {
  var G__19633 = cljs.core.first(seq19632);
  var seq19632__$1 = cljs.core.next(seq19632);
  var G__19634 = cljs.core.first(seq19632__$1);
  var seq19632__$2 = cljs.core.next(seq19632__$1);
  var G__19635 = cljs.core.first(seq19632__$2);
  var seq19632__$3 = cljs.core.next(seq19632__$2);
  var G__19636 = cljs.core.first(seq19632__$3);
  var seq19632__$4 = cljs.core.next(seq19632__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__19633, G__19634, G__19635, G__19636, seq19632__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take() {
  var G__19664 = arguments.length;
  switch(G__19664) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__19669 = null;
        var G__19669__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19669__1 = function(result) {
          var G__19665 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19665) : rf.call(null, G__19665);
        };
        var G__19669__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? function() {
            var G__19666 = result;
            var G__19667 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19666, G__19667) : rf.call(null, G__19666, G__19667);
          }() : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__19669 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19669__0.call(this);
            case 1:
              return G__19669__1.call(this, result);
            case 2:
              return G__19669__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19669.cljs$core$IFn$_invoke$arity$0 = G__19669__0;
        G__19669.cljs$core$IFn$_invoke$arity$1 = G__19669__1;
        G__19669.cljs$core$IFn$_invoke$arity$2 = G__19669__2;
        return G__19669;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4422__auto__ = cljs.core.seq(coll);
      if (temp__4422__auto__) {
        var s = temp__4422__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop() {
  var G__19671 = arguments.length;
  switch(G__19671) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__19676 = null;
        var G__19676__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19676__1 = function(result) {
          var G__19672 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19672) : rf.call(null, G__19672);
        };
        var G__19676__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            var G__19673 = result;
            var G__19674 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19673, G__19674) : rf.call(null, G__19673, G__19674);
          }
        };
        G__19676 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19676__0.call(this);
            case 1:
              return G__19676__1.call(this, result);
            case 2:
              return G__19676__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19676.cljs$core$IFn$_invoke$arity$0 = G__19676__0;
        G__19676.cljs$core$IFn$_invoke$arity$1 = G__19676__1;
        G__19676.cljs$core$IFn$_invoke$arity$2 = G__19676__2;
        return G__19676;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__19677 = n__$1 - 1;
        var G__19678 = cljs.core.rest(s);
        n__$1 = G__19677;
        coll__$1 = G__19678;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last() {
  var G__19680 = arguments.length;
  switch(G__19680) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__19682 = cljs.core.next(s);
      var G__19683 = cljs.core.next(lead);
      s = G__19682;
      lead = G__19683;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while() {
  var G__19685 = arguments.length;
  switch(G__19685) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__19693 = null;
        var G__19693__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19693__1 = function(result) {
          var G__19686 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19686) : rf.call(null, G__19686);
        };
        var G__19693__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4296__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4296__auto__)) {
              var G__19687 = input;
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19687) : pred.call(null, G__19687);
            } else {
              return and__4296__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            var G__19688 = result;
            var G__19689 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19688, G__19689) : rf.call(null, G__19688, G__19689);
          }
        };
        G__19693 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19693__0.call(this);
            case 1:
              return G__19693__1.call(this, result);
            case 2:
              return G__19693__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19693.cljs$core$IFn$_invoke$arity$0 = G__19693__0;
        G__19693.cljs$core$IFn$_invoke$arity$1 = G__19693__1;
        G__19693.cljs$core$IFn$_invoke$arity$2 = G__19693__2;
        return G__19693;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4296__auto__ = s;
        if (and__4296__auto__) {
          var G__19691 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__19691) : pred__$1.call(null, G__19691);
        } else {
          return and__4296__auto__;
        }
      }())) {
        var G__19694 = pred__$1;
        var G__19695 = cljs.core.rest(s);
        pred__$1 = G__19694;
        coll__$1 = G__19695;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat() {
  var G__19698 = arguments.length;
  switch(G__19698) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly() {
  var G__19701 = arguments.length;
  switch(G__19701) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, function() {
      var G__19706 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19706) : f.call(null, G__19706);
    }());
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave() {
  var G__19711 = arguments.length;
  switch(G__19711) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq19707) {
  var G__19708 = cljs.core.first(seq19707);
  var seq19707__$1 = cljs.core.next(seq19707);
  var G__19709 = cljs.core.first(seq19707__$1);
  var seq19707__$2 = cljs.core.next(seq19707__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__19708, G__19709, seq19707__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose() {
  var G__19714 = arguments.length;
  switch(G__19714) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__19723 = null;
        var G__19723__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19723__1 = function(result) {
          var G__19715 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19715) : rf.call(null, G__19715);
        };
        var G__19723__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = function() {
              var G__19716 = result;
              var G__19717 = sep;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19716, G__19717) : rf.call(null, G__19716, G__19717);
            }();
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              var G__19718 = sepr;
              var G__19719 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19718, G__19719) : rf.call(null, G__19718, G__19719);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            var G__19720 = result;
            var G__19721 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19720, G__19721) : rf.call(null, G__19720, G__19721);
          }
        };
        G__19723 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19723__0.call(this);
            case 1:
              return G__19723__1.call(this, result);
            case 2:
              return G__19723__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19723.cljs$core$IFn$_invoke$arity$0 = G__19723__0;
        G__19723.cljs$core$IFn$_invoke$arity$1 = G__19723__1;
        G__19723.cljs$core$IFn$_invoke$arity$2 = G__19723__2;
        return G__19723;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4420__auto__ = cljs.core.seq(coll);
      if (temp__4420__auto__) {
        var coll__$1 = temp__4420__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat() {
  var G__19735 = arguments.length;
  switch(G__19735) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq19732) {
  var G__19733 = cljs.core.first(seq19732);
  var seq19732__$1 = cljs.core.next(seq19732);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__19733, seq19732__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter() {
  var G__19738 = arguments.length;
  switch(G__19738) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__19746 = null;
      var G__19746__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__19746__1 = function(result) {
        var G__19739 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19739) : rf.call(null, G__19739);
      };
      var G__19746__2 = function(result, input) {
        if (cljs.core.truth_(function() {
          var G__19740 = input;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19740) : pred.call(null, G__19740);
        }())) {
          var G__19741 = result;
          var G__19742 = input;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19741, G__19742) : rf.call(null, G__19741, G__19742);
        } else {
          return result;
        }
      };
      G__19746 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__19746__0.call(this);
          case 1:
            return G__19746__1.call(this, result);
          case 2:
            return G__19746__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19746.cljs$core$IFn$_invoke$arity$0 = G__19746__0;
      G__19746.cljs$core$IFn$_invoke$arity$1 = G__19746__1;
      G__19746.cljs$core$IFn$_invoke$arity$2 = G__19746__2;
      return G__19746;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5193__auto___19747 = size;
        var i_19748 = 0;
        while (true) {
          if (i_19748 < n__5193__auto___19747) {
            if (cljs.core.truth_(function() {
              var G__19743 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19748);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19743) : pred.call(null, G__19743);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19748));
            } else {
            }
            var G__19749 = i_19748 + 1;
            i_19748 = G__19749;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(function() {
          var G__19744 = f;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19744) : pred.call(null, G__19744);
        }())) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove() {
  var G__19751 = arguments.length;
  switch(G__19751) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__19759 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__19759) : branch_QMARK_.call(null, G__19759);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([function() {
        var G__19760 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__19760) : children.call(null, G__19760);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__19761_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__19761_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into() {
  var G__19763 = arguments.length;
  switch(G__19763) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__19764 = to;
      if (G__19764) {
        var bit__4975__auto__ = G__19764.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4975__auto__ || G__19764.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (function() {
    var G__19765 = to;
    if (G__19765) {
      var bit__4975__auto__ = G__19765.cljs$lang$protocol_mask$partition1$ & 4;
      if (bit__4975__auto__ || G__19765.cljs$core$IEditableCollection$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv() {
  var G__19773 = arguments.length;
  switch(G__19773) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5359__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
      var G__19774 = o;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19774) : f.call(null, G__19774);
    }());
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq19767) {
  var G__19768 = cljs.core.first(seq19767);
  var seq19767__$1 = cljs.core.next(seq19767);
  var G__19769 = cljs.core.first(seq19767__$1);
  var seq19767__$2 = cljs.core.next(seq19767__$1);
  var G__19770 = cljs.core.first(seq19767__$2);
  var seq19767__$3 = cljs.core.next(seq19767__$2);
  var G__19771 = cljs.core.first(seq19767__$3);
  var seq19767__$4 = cljs.core.next(seq19767__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__19768, G__19769, G__19770, G__19771, seq19767__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__19777 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19777) : pred.call(null, G__19777);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition() {
  var G__19779 = arguments.length;
  switch(G__19779) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in() {
  var G__19782 = arguments.length;
  switch(G__19782) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!function() {
        var G__19783 = m__$1;
        if (G__19783) {
          var bit__4982__auto__ = G__19783.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4982__auto__ || G__19783.cljs$core$ILookup$) {
            return true;
          } else {
            if (!G__19783.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__19783);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__19783);
        }
      }()) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__19785 = sentinel;
          var G__19786 = m__$2;
          var G__19787 = cljs.core.next(ks__$1);
          sentinel = G__19785;
          m__$1 = G__19786;
          ks__$1 = G__19787;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__19788, v) {
  var vec__19793 = p__19788;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19793, 0, null);
  var ks = cljs.core.nthnext(vec__19793, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in() {
  var G__19802 = arguments.length;
  switch(G__19802) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5359__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__19803, f) {
  var vec__19804 = p__19803;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19804, 0, null);
  var ks = cljs.core.nthnext(vec__19804, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19805 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19805) : f.call(null, G__19805);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__19806, f, a) {
  var vec__19807 = p__19806;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19807, 0, null);
  var ks = cljs.core.nthnext(vec__19807, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19808 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__19809 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19808, G__19809) : f.call(null, G__19808, G__19809);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__19810, f, a, b) {
  var vec__19811 = p__19810;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19811, 0, null);
  var ks = cljs.core.nthnext(vec__19811, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19812 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__19813 = a;
      var G__19814 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19812, G__19813, G__19814) : f.call(null, G__19812, G__19813, G__19814);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__19815, f, a, b, c) {
  var vec__19816 = p__19815;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19816, 0, null);
  var ks = cljs.core.nthnext(vec__19816, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19817 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__19818 = a;
      var G__19819 = b;
      var G__19820 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19817, G__19818, G__19819, G__19820) : f.call(null, G__19817, G__19818, G__19819, G__19820);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__19821, f, a, b, c, args) {
  var vec__19822 = p__19821;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19822, 0, null);
  var ks = cljs.core.nthnext(vec__19822, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq19794) {
  var G__19795 = cljs.core.first(seq19794);
  var seq19794__$1 = cljs.core.next(seq19794);
  var G__19796 = cljs.core.first(seq19794__$1);
  var seq19794__$2 = cljs.core.next(seq19794__$1);
  var G__19797 = cljs.core.first(seq19794__$2);
  var seq19794__$3 = cljs.core.next(seq19794__$2);
  var G__19798 = cljs.core.first(seq19794__$3);
  var seq19794__$4 = cljs.core.next(seq19794__$3);
  var G__19799 = cljs.core.first(seq19794__$4);
  var seq19794__$5 = cljs.core.next(seq19794__$4);
  var G__19800 = cljs.core.first(seq19794__$5);
  var seq19794__$6 = cljs.core.next(seq19794__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__19795, G__19796, G__19797, G__19798, G__19799, G__19800, seq19794__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update() {
  var G__19832 = arguments.length;
  switch(G__19832) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5359__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__19833 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19833) : f.call(null, G__19833);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__19834 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__19835 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19834, G__19835) : f.call(null, G__19834, G__19835);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__19836 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__19837 = x;
    var G__19838 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19836, G__19837, G__19838) : f.call(null, G__19836, G__19837, G__19838);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__19839 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__19840 = x;
    var G__19841 = y;
    var G__19842 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19839, G__19840, G__19841, G__19842) : f.call(null, G__19839, G__19840, G__19841, G__19842);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq19824) {
  var G__19825 = cljs.core.first(seq19824);
  var seq19824__$1 = cljs.core.next(seq19824);
  var G__19826 = cljs.core.first(seq19824__$1);
  var seq19824__$2 = cljs.core.next(seq19824__$1);
  var G__19827 = cljs.core.first(seq19824__$2);
  var seq19824__$3 = cljs.core.next(seq19824__$2);
  var G__19828 = cljs.core.first(seq19824__$3);
  var seq19824__$4 = cljs.core.next(seq19824__$3);
  var G__19829 = cljs.core.first(seq19824__$4);
  var seq19824__$5 = cljs.core.next(seq19824__$4);
  var G__19830 = cljs.core.first(seq19824__$5);
  var seq19824__$6 = cljs.core.next(seq19824__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__19825, G__19826, G__19827, G__19828, G__19829, G__19830, seq19824__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__19844 = ll - 5;
      var G__19845 = r;
      ll = G__19844;
      ret = G__19845;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__19850 = cljs.core.pv_aget(node, 0);
      var G__19851 = level - 5;
      node = G__19850;
      level = G__19851;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__19852 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__19853 = level - 5;
        node = G__19852;
        level = G__19853;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__19863 = init__$2;
              var G__19864 = j + i;
              var G__19865 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19863, G__19864, G__19865) : f.call(null, G__19863, G__19864, G__19865);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__19876 = j + 1;
              var G__19877 = init__$3;
              j = G__19876;
              init__$2 = G__19877;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__19866 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19866) : cljs.core.deref.call(null, G__19866);
      } else {
        var G__19878 = i + len;
        var G__19879 = init__$2;
        i = G__19878;
        init__$1 = G__19879;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__19867 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__19867) : cljs.core.tv_editable_root.call(null, G__19867);
  }(), function() {
    var G__19868 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__19868) : cljs.core.tv_editable_tail.call(null, G__19868);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__19869 = init__$2;
              var G__19870 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19869, G__19870) : f.call(null, G__19869, G__19870);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__19880 = j + 1;
              var G__19881 = init__$3;
              j = G__19880;
              init__$2 = G__19881;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__19871 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19871) : cljs.core.deref.call(null, G__19871);
      } else {
        var G__19882 = i + len;
        var G__19883 = init__$2;
        i = G__19882;
        init__$1 = G__19883;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__19872 = coll__$1;
      var G__19873 = cljs.core.first_array_for_longvec(coll__$1);
      var G__19874 = 0;
      var G__19875 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19872, G__19873, G__19874, G__19875) : cljs.core.chunked_seq.call(null, G__19872, G__19873, G__19874, G__19875);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5193__auto___19884 = len;
    var i_19885 = 0;
    while (true) {
      if (i_19885 < n__5193__auto___19884) {
        new_tail[i_19885] = self__.tail[i_19885];
        var G__19886 = i_19885 + 1;
        i_19885 = G__19886;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__19887 = null;
  var G__19887__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__19887__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__19887 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19887__2.call(this, self__, k);
      case 3:
        return G__19887__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19887.cljs$core$IFn$_invoke$arity$2 = G__19887__2;
  G__19887.cljs$core$IFn$_invoke$arity$3 = G__19887__3;
  return G__19887;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args19862) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19862)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__19888 = i + 1;
        var G__19889 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__19888;
        out = G__19889;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq19890) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19890));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__19891 = self__.vec;
      var G__19892 = self__.node;
      var G__19893 = self__.i;
      var G__19894 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19891, G__19892, G__19893, G__19894) : cljs.core.chunked_seq.call(null, G__19891, G__19892, G__19893, G__19894);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__19895 = self__.vec;
    var G__19896 = self__.i + self__.off;
    var G__19897 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__19895, G__19896, G__19897) : cljs.core.subvec.call(null, G__19895, G__19896, G__19897);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__19898 = self__.vec;
    var G__19899 = self__.i + self__.off;
    var G__19900 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__19898, G__19899, G__19900) : cljs.core.subvec.call(null, G__19898, G__19899, G__19900);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__19901 = self__.vec;
      var G__19902 = self__.node;
      var G__19903 = self__.i;
      var G__19904 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19901, G__19902, G__19903, G__19904) : cljs.core.chunked_seq.call(null, G__19901, G__19902, G__19903, G__19904);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__19905 = self__.vec;
    var G__19906 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__19907 = end;
    var G__19908 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19905, G__19906, G__19907, G__19908) : cljs.core.chunked_seq.call(null, G__19905, G__19906, G__19907, G__19908);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__19909 = self__.vec;
  var G__19910 = self__.node;
  var G__19911 = self__.i;
  var G__19912 = self__.off;
  var G__19913 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__19909, G__19910, G__19911, G__19912, G__19913) : cljs.core.chunked_seq.call(null, G__19909, G__19910, G__19911, G__19912, G__19913);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__19914 = self__.vec;
    var G__19915 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__19916 = end;
    var G__19917 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19914, G__19915, G__19916, G__19917) : cljs.core.chunked_seq.call(null, G__19914, G__19915, G__19916, G__19917);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq() {
  var G__19919 = arguments.length;
  switch(G__19919) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__19922 = init__$1;
        var G__19923 = j;
        var G__19924 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19922, G__19923, G__19924) : f.call(null, G__19922, G__19923, G__19924);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__19925 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19925) : cljs.core.deref.call(null, G__19925);
      } else {
        var G__19947 = i + 1;
        var G__19948 = j + 1;
        var G__19949 = init__$2;
        i = G__19947;
        j = G__19948;
        init__$1 = G__19949;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__19926 = self__.meta;
  var G__19927 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__19928 = self__.start;
  var G__19929 = function() {
    var x__4620__auto__ = self__.end;
    var y__4621__auto__ = v_pos + 1;
    return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
  }();
  var G__19930 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19926, G__19927, G__19928, G__19929, G__19930) : cljs.core.build_subvec.call(null, G__19926, G__19927, G__19928, G__19929, G__19930);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__19931 = self__.meta;
    var G__19932 = self__.v;
    var G__19933 = self__.start;
    var G__19934 = self__.end - 1;
    var G__19935 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19931, G__19932, G__19933, G__19934, G__19935) : cljs.core.build_subvec.call(null, G__19931, G__19932, G__19933, G__19934, G__19935);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__19937 = meta__$1;
  var G__19938 = self__.v;
  var G__19939 = self__.start;
  var G__19940 = self__.end;
  var G__19941 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19937, G__19938, G__19939, G__19940, G__19941) : cljs.core.build_subvec.call(null, G__19937, G__19938, G__19939, G__19940, G__19941);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__19942 = self__.meta;
  var G__19943 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__19944 = self__.start;
  var G__19945 = self__.end + 1;
  var G__19946 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19942, G__19943, G__19944, G__19945, G__19946) : cljs.core.build_subvec.call(null, G__19942, G__19943, G__19944, G__19945, G__19946);
};
cljs.core.Subvec.prototype.call = function() {
  var G__19950 = null;
  var G__19950__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__19950__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__19950 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19950__2.call(this, self__, k);
      case 3:
        return G__19950__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19950.cljs$core$IFn$_invoke$arity$2 = G__19950__2;
  G__19950.cljs$core$IFn$_invoke$arity$3 = G__19950__3;
  return G__19950;
}();
cljs.core.Subvec.prototype.apply = function(self__, args19921) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19921)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__19951 = meta;
      var G__19952 = v.v;
      var G__19953 = v.start + start;
      var G__19954 = v.start + end;
      var G__19955 = __hash;
      meta = G__19951;
      v = G__19952;
      start = G__19953;
      end = G__19954;
      __hash = G__19955;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec() {
  var G__19957 = arguments.length;
  switch(G__19957) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj19962 = {};
    return obj19962;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__19970 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__19971 = level - 5;
        node = G__19970;
        level = G__19971;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__19975 = null;
  var G__19975__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19975__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19975 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19975__2.call(this, self__, k);
      case 3:
        return G__19975__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19975.cljs$core$IFn$_invoke$arity$2 = G__19975__2;
  G__19975.cljs$core$IFn$_invoke$arity$3 = G__19975__3;
  return G__19975;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args19972) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19972)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null)], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4420__auto__ = cljs.core.next(self__.front);
  if (temp__4420__auto__) {
    var f1 = temp__4420__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4420__auto__ = cljs.core.next(self__.front);
    if (temp__4420__auto__) {
      var f1 = temp__4420__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4308__auto__ = self__.front;
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4308__auto__ = self__.rear;
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__19976 = i + incr;
        i = G__19976;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__19977 = i + 1;
      var G__19978 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__19977;
      out = G__19978;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = function() {
    var obj19982 = {};
    return obj19982;
  }();
  var l = ks.length;
  var i_19983 = 0;
  while (true) {
    if (i_19983 < l) {
      var k_19984 = ks[i_19983];
      new_obj[k_19984] = obj[k_19984];
      var G__19985 = i_19983 + 1;
      i_19983 = G__19985;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = function() {
      var G__19989 = k;
      return goog.isString(G__19989);
    }();
    if (cljs.core.truth_(and__4296__auto__)) {
      return !(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4296__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__19990 = init__$1;
        var G__19991 = k;
        var G__19992 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19990, G__19991, G__19992) : f.call(null, G__19990, G__19991, G__19992);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__19993 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19993) : cljs.core.deref.call(null, G__19993);
      } else {
        var G__19999 = cljs.core.rest(keys__$1);
        var G__20000 = init__$2;
        keys__$1 = G__19999;
        init__$1 = G__20000;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = function() {
      var G__19995 = k;
      return goog.isString(G__19995);
    }();
    if (cljs.core.truth_(and__4296__auto__)) {
      return !(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4296__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__19996 = k;
    return goog.isString(G__19996);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = function() {
      var G__19998 = k;
      return goog.isString(G__19998);
    }();
    if (cljs.core.truth_(and__4296__auto__)) {
      return !(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4296__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__19986_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__19986_SHARP_, self__.strobj[p1__19986_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__20001 = null;
  var G__20001__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20001__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20001 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20001__2.call(this, self__, k);
      case 3:
        return G__20001__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20001.cljs$core$IFn$_invoke$arity$2 = G__20001__2;
  G__20001.cljs$core$IFn$_invoke$arity$3 = G__20001__3;
  return G__20001;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args19987) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19987)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj20003 = {};
  return obj20003;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__20004 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20004, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20004, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__20005 = i + 2;
        i = G__20005;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__20006 = i + 2;
        i = G__20006;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__20007 = i + 2;
        i = G__20007;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__20008 = i + 2;
        i = G__20008;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__20009 = i + 2;
        i = G__20009;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__4308__auto__ = function() {
        var G__20013 = k;
        return goog.isString(G__20013);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_20014 = 0;
  while (true) {
    if (i_20014 < l) {
      narr[i_20014] = arr[i_20014];
      var G__20015 = i_20014 + 1;
      i_20014 = G__20015;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20017 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__20017) : cljs.core.keys.call(null, G__20017);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20018 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__20018) : cljs.core.vals.call(null, G__20018);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20019 = cljs.core.seq(coll);
  var chunk__20020 = null;
  var count__20021 = 0;
  var i__20022 = 0;
  while (true) {
    if (i__20022 < count__20021) {
      var vec__20023 = chunk__20020.cljs$core$IIndexed$_nth$arity$2(null, i__20022);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20023, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20023, 1, null);
      var G__20024_20037 = v;
      var G__20025_20038 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20024_20037, G__20025_20038) : f.call(null, G__20024_20037, G__20025_20038);
      var G__20039 = seq__20019;
      var G__20040 = chunk__20020;
      var G__20041 = count__20021;
      var G__20042 = i__20022 + 1;
      seq__20019 = G__20039;
      chunk__20020 = G__20040;
      count__20021 = G__20041;
      i__20022 = G__20042;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__20019);
      if (temp__4422__auto__) {
        var seq__20019__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20019__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__20019__$1);
          var G__20043 = cljs.core.chunk_rest(seq__20019__$1);
          var G__20044 = c__5093__auto__;
          var G__20045 = cljs.core.count(c__5093__auto__);
          var G__20046 = 0;
          seq__20019 = G__20043;
          chunk__20020 = G__20044;
          count__20021 = G__20045;
          i__20022 = G__20046;
          continue;
        } else {
          var vec__20026 = cljs.core.first(seq__20019__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20026, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20026, 1, null);
          var G__20027_20047 = v;
          var G__20028_20048 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20027_20047, G__20028_20048) : f.call(null, G__20027_20047, G__20028_20048);
          var G__20049 = cljs.core.next(seq__20019__$1);
          var G__20050 = null;
          var G__20051 = 0;
          var G__20052 = 0;
          seq__20019 = G__20049;
          chunk__20020 = G__20050;
          count__20021 = G__20051;
          i__20022 = G__20052;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__20029 = init__$1;
        var G__20030 = self__.arr[i];
        var G__20031 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20029, G__20030, G__20031) : f.call(null, G__20029, G__20030, G__20031);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__20032 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20032) : cljs.core.deref.call(null, G__20032);
      } else {
        var G__20053 = i + 2;
        var G__20054 = init__$2;
        i = G__20053;
        init__$1 = G__20054;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__20033 = other;
    if (G__20033) {
      var bit__4975__auto__ = G__20033.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4975__auto__ || G__20033.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__20055 = i + 2;
              i = G__20055;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj20035 = {};
    return obj20035;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__20056 = s + 2;
            var G__20057 = d;
            s = G__20056;
            d = G__20057;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__20058 = s + 2;
            var G__20059 = d + 2;
            s = G__20058;
            d = G__20059;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__20036 = cljs.core.aclone(self__.arr);
        G__20036[idx + 1] = v;
        return G__20036;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20060 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20061 = cljs.core.next(es);
          ret = G__20060;
          es = G__20061;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__20062 = null;
  var G__20062__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20062__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20062 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20062__2.call(this, self__, k);
      case 3:
        return G__20062__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20062.cljs$core$IFn$_invoke$arity$2 = G__20062__2;
  G__20062.cljs$core$IFn$_invoke$arity$3 = G__20062__3;
  return G__20062;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args20016) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20016)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_20063 = 0;
    while (true) {
      if (i_20063 < arr__$1.length) {
        var k_20064 = arr__$1[i_20063];
        var v_20065 = arr__$1[i_20063 + 1];
        var idx_20066 = cljs.core.array_index_of(ret, k_20064);
        if (idx_20066 === -1) {
          ret.push(k_20064);
          ret.push(v_20065);
        } else {
        }
        var G__20067 = i_20063 + 2;
        i_20063 = G__20067;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__20068 = o;
      if (G__20068) {
        var bit__4982__auto__ = G__20068.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4982__auto__ || G__20068.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__20068.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20068);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20068);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__20069 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20069) : cljs.core.key.call(null, G__20069);
      }(), function() {
        var G__20070 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20070) : cljs.core.val.call(null, G__20070);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4420__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4420__auto__)) {
          var e = temp__4420__auto__;
          var G__20076 = cljs.core.next(es);
          var G__20077 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__20071 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20071) : cljs.core.key.call(null, G__20071);
          }(), function() {
            var G__20072 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20072) : cljs.core.val.call(null, G__20072);
          }());
          es = G__20076;
          tcoll__$2 = G__20077;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__20073 = self__.len;
          var G__20074 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__20073, G__20074) : cljs.core.array__GT_transient_hash_map.call(null, G__20073, G__20074);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__20075_20078 = self__.arr;
      G__20075_20078.pop();
      G__20075_20078.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__20079 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__20080 = i + 2;
      out = G__20079;
      i = G__20080;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set() {
  var G__20082 = arguments.length;
  switch(G__20082) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__20083 = cljs.core.aclone(arr);
  G__20083[i] = a;
  return G__20083;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__20084 = cljs.core.aclone(arr);
  G__20084[i] = a;
  G__20084[j] = b;
  return G__20084;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set() {
  var G__20087 = arguments.length;
  switch(G__20087) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__20093 = init__$1;
          var G__20094 = k;
          var G__20095 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20093, G__20094, G__20095) : f.call(null, G__20093, G__20094, G__20095);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__20096 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20096) : cljs.core.deref.call(null, G__20096);
      } else {
        var G__20097 = i + 2;
        var G__20098 = init__$2;
        i = G__20097;
        init__$1 = G__20098;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__20099 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__20099) : cljs.core.create_inode_seq.call(null, G__20099);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_20113 = 0;
        var j_20114 = 0;
        while (true) {
          if (i_20113 < 32) {
            if ((self__.bitmap >>> i_20113 & 1) === 0) {
              var G__20115 = i_20113 + 1;
              var G__20116 = j_20114;
              i_20113 = G__20115;
              j_20114 = G__20116;
              continue;
            } else {
              nodes[i_20113] = !(self__.arr[j_20114] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_20114]), self__.arr[j_20114], self__.arr[j_20114 + 1], added_leaf_QMARK_) : self__.arr[j_20114 + 1];
              var G__20117 = i_20113 + 1;
              var G__20118 = j_20114 + 2;
              i_20113 = G__20117;
              j_20114 = G__20118;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__20100 = edit__$1;
          var G__20101 = shift + 5;
          var G__20102 = key_or_nil;
          var G__20103 = val_or_node;
          var G__20104 = hash;
          var G__20105 = key;
          var G__20106 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__20100, G__20101, G__20102, G__20103, G__20104, G__20105, G__20106) : cljs.core.create_node.call(null, G__20100, G__20101, G__20102, G__20103, G__20104, G__20105, G__20106);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_20119 = 0;
      var j_20120 = 0;
      while (true) {
        if (i_20119 < 32) {
          if ((self__.bitmap >>> i_20119 & 1) === 0) {
            var G__20121 = i_20119 + 1;
            var G__20122 = j_20120;
            i_20119 = G__20121;
            j_20120 = G__20122;
            continue;
          } else {
            nodes[i_20119] = !(self__.arr[j_20120] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_20120]), self__.arr[j_20120], self__.arr[j_20120 + 1], added_leaf_QMARK_) : self__.arr[j_20120 + 1];
            var G__20123 = i_20119 + 1;
            var G__20124 = j_20120 + 2;
            i_20119 = G__20123;
            j_20120 = G__20124;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__20107 = shift + 5;
          var G__20108 = key_or_nil;
          var G__20109 = val_or_node;
          var G__20110 = hash;
          var G__20111 = key;
          var G__20112 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__20107, G__20108, G__20109, G__20110, G__20111, G__20112) : cljs.core.create_node.call(null, G__20107, G__20108, G__20109, G__20110, G__20111, G__20112);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__20125 = i + 1;
        var G__20126 = j + 2;
        var G__20127 = bitmap | 1 << i;
        i = G__20125;
        j = G__20126;
        bitmap = G__20127;
        continue;
      } else {
        var G__20128 = i + 1;
        var G__20129 = j;
        var G__20130 = bitmap;
        i = G__20128;
        j = G__20129;
        bitmap = G__20130;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__20131 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__20131) : cljs.core.create_array_node_seq.call(null, G__20131);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__20132 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20132) : cljs.core.deref.call(null, G__20132);
        } else {
          var G__20133 = i + 1;
          var G__20134 = init__$2;
          i = G__20133;
          init__$1 = G__20134;
          continue;
        }
      } else {
        var G__20135 = i + 1;
        var G__20136 = init__$1;
        i = G__20135;
        init__$1 = G__20136;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__20137 = i + 2;
        i = G__20137;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__20138 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__20138) : cljs.core.create_inode_seq.call(null, G__20138);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node() {
  var G__20140 = arguments.length;
  switch(G__20140) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__20142 = self__.nodes;
    var G__20143 = self__.i + 2;
    var G__20144 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__20142, G__20143, G__20144) : cljs.core.create_inode_seq.call(null, G__20142, G__20143, G__20144);
  } else {
    var G__20145 = self__.nodes;
    var G__20146 = self__.i;
    var G__20147 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__20145, G__20146, G__20147) : cljs.core.create_inode_seq.call(null, G__20145, G__20146, G__20147);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq() {
  var G__20149 = arguments.length;
  switch(G__20149) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4420__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4420__auto__)) {
            var node = temp__4420__auto__;
            var temp__4420__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4420__auto____$1)) {
              var node_seq = temp__4420__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__20151 = j + 2;
              j = G__20151;
              continue;
            }
          } else {
            var G__20152 = j + 2;
            j = G__20152;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__20153 = null;
  var G__20154 = self__.nodes;
  var G__20155 = self__.i;
  var G__20156 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__20153, G__20154, G__20155, G__20156) : cljs.core.create_array_node_seq.call(null, G__20153, G__20154, G__20155, G__20156);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq() {
  var G__20158 = arguments.length;
  switch(G__20158) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4420__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4420__auto__)) {
          var nj = temp__4420__auto__;
          var temp__4420__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4420__auto____$1)) {
            var ns = temp__4420__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__20160 = j + 1;
            j = G__20160;
            continue;
          }
        } else {
          var G__20161 = j + 1;
          j = G__20161;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20163 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__20163) : cljs.core.keys.call(null, G__20163);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20164 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__20164) : cljs.core.vals.call(null, G__20164);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20165 = cljs.core.seq(coll);
  var chunk__20166 = null;
  var count__20167 = 0;
  var i__20168 = 0;
  while (true) {
    if (i__20168 < count__20167) {
      var vec__20169 = chunk__20166.cljs$core$IIndexed$_nth$arity$2(null, i__20168);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20169, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20169, 1, null);
      var G__20170_20181 = v;
      var G__20171_20182 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20170_20181, G__20171_20182) : f.call(null, G__20170_20181, G__20171_20182);
      var G__20183 = seq__20165;
      var G__20184 = chunk__20166;
      var G__20185 = count__20167;
      var G__20186 = i__20168 + 1;
      seq__20165 = G__20183;
      chunk__20166 = G__20184;
      count__20167 = G__20185;
      i__20168 = G__20186;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__20165);
      if (temp__4422__auto__) {
        var seq__20165__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20165__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__20165__$1);
          var G__20187 = cljs.core.chunk_rest(seq__20165__$1);
          var G__20188 = c__5093__auto__;
          var G__20189 = cljs.core.count(c__5093__auto__);
          var G__20190 = 0;
          seq__20165 = G__20187;
          chunk__20166 = G__20188;
          count__20167 = G__20189;
          i__20168 = G__20190;
          continue;
        } else {
          var vec__20172 = cljs.core.first(seq__20165__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20172, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20172, 1, null);
          var G__20173_20191 = v;
          var G__20174_20192 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20173_20191, G__20174_20192) : f.call(null, G__20173_20191, G__20174_20192);
          var G__20193 = cljs.core.next(seq__20165__$1);
          var G__20194 = null;
          var G__20195 = 0;
          var G__20196 = 0;
          seq__20165 = G__20193;
          chunk__20166 = G__20194;
          count__20167 = G__20195;
          i__20168 = G__20196;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__20175 = init;
    var G__20176 = null;
    var G__20177 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20175, G__20176, G__20177) : f.call(null, G__20175, G__20176, G__20177);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__20178 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20178) : cljs.core.deref.call(null, G__20178);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj20180 = {};
    return obj20180;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20197 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20198 = cljs.core.next(es);
          ret = G__20197;
          es = G__20198;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__20199 = null;
  var G__20199__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20199__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20199 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20199__2.call(this, self__, k);
      case 3:
        return G__20199__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20199.cljs$core$IFn$_invoke$arity$2 = G__20199__2;
  G__20199.cljs$core$IFn$_invoke$arity$3 = G__20199__3;
  return G__20199;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args20162) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20162)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__20200 = i + 2;
      var G__20201 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__20200;
      ret = G__20201;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__20202 = i + 1;
      var G__20203 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__20202;
      out = G__20203;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__20204 = o;
      if (G__20204) {
        var bit__4982__auto__ = G__20204.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4982__auto__ || G__20204.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__20204.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20204);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20204);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__20205 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20205) : cljs.core.key.call(null, G__20205);
      }(), function() {
        var G__20206 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20206) : cljs.core.val.call(null, G__20206);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4420__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4420__auto__)) {
          var e = temp__4420__auto__;
          var G__20209 = cljs.core.next(es);
          var G__20210 = tcoll__$1.assoc_BANG_(function() {
            var G__20207 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20207) : cljs.core.key.call(null, G__20207);
          }(), function() {
            var G__20208 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20208) : cljs.core.val.call(null, G__20208);
          }());
          es = G__20209;
          tcoll__$1 = G__20210;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null)], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__20211 = ascending_QMARK_ ? t.left : t.right;
      var G__20212 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__20211;
      stack__$1 = G__20212;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__20225 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20225) : cljs.core.deref.call(null, G__20225);
  } else {
    var init__$2 = function() {
      var G__20226 = init__$1;
      var G__20227 = node.key;
      var G__20228 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20226, G__20227, G__20228) : f.call(null, G__20226, G__20227, G__20228);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__20229 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20229) : cljs.core.deref.call(null, G__20229);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__20230 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20230) : cljs.core.deref.call(null, G__20230);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__20232 = null;
  var G__20232__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20232__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20232 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20232__2.call(this, self__, k);
      case 3:
        return G__20232__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20232.cljs$core$IFn$_invoke$arity$2 = G__20232__2;
  G__20232.cljs$core$IFn$_invoke$arity$3 = G__20232__3;
  return G__20232;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args20231) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20231)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__20234 = null;
  var G__20234__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20234__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20234 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20234__2.call(this, self__, k);
      case 3:
        return G__20234__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20234.cljs$core$IFn$_invoke$arity$2 = G__20234__2;
  G__20234.cljs$core$IFn$_invoke$arity$3 = G__20234__3;
  return G__20234;
}();
cljs.core.RedNode.prototype.apply = function(self__, args20233) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20233)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__20247 = k;
      var G__20248 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20247, G__20248) : comp.call(null, G__20247, G__20248);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__20267 = k;
      var G__20268 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20267, G__20268) : comp.call(null, G__20267, G__20268);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__20279 = k;
    var G__20280 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20279, G__20280) : comp.call(null, G__20279, G__20280);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20282 = cljs.core.seq(coll);
  var chunk__20283 = null;
  var count__20284 = 0;
  var i__20285 = 0;
  while (true) {
    if (i__20285 < count__20284) {
      var vec__20286 = chunk__20283.cljs$core$IIndexed$_nth$arity$2(null, i__20285);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20286, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20286, 1, null);
      var G__20287_20299 = v;
      var G__20288_20300 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20287_20299, G__20288_20300) : f.call(null, G__20287_20299, G__20288_20300);
      var G__20301 = seq__20282;
      var G__20302 = chunk__20283;
      var G__20303 = count__20284;
      var G__20304 = i__20285 + 1;
      seq__20282 = G__20301;
      chunk__20283 = G__20302;
      count__20284 = G__20303;
      i__20285 = G__20304;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__20282);
      if (temp__4422__auto__) {
        var seq__20282__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20282__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__20282__$1);
          var G__20305 = cljs.core.chunk_rest(seq__20282__$1);
          var G__20306 = c__5093__auto__;
          var G__20307 = cljs.core.count(c__5093__auto__);
          var G__20308 = 0;
          seq__20282 = G__20305;
          chunk__20283 = G__20306;
          count__20284 = G__20307;
          i__20285 = G__20308;
          continue;
        } else {
          var vec__20289 = cljs.core.first(seq__20282__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20289, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20289, 1, null);
          var G__20290_20309 = v;
          var G__20291_20310 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20290_20309, G__20291_20310) : f.call(null, G__20290_20309, G__20291_20310);
          var G__20311 = cljs.core.next(seq__20282__$1);
          var G__20312 = null;
          var G__20313 = 0;
          var G__20314 = 0;
          seq__20282 = G__20311;
          chunk__20283 = G__20312;
          count__20284 = G__20313;
          i__20285 = G__20314;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20292 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__20292) : cljs.core.keys.call(null, G__20292);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20293 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__20293) : cljs.core.vals.call(null, G__20293);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__20294 = k;
        var G__20295 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__20294, G__20295) : self__.comp.call(null, G__20294, G__20295);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__20315 = t.left;
          t = G__20315;
          continue;
        } else {
          var G__20316 = t.right;
          t = G__20316;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20317 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20318 = cljs.core.next(es);
          ret = G__20317;
          es = G__20318;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__20319 = null;
  var G__20319__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20319__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20319 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20319__2.call(this, self__, k);
      case 3:
        return G__20319__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20319.cljs$core$IFn$_invoke$arity$2 = G__20319__2;
  G__20319.cljs$core$IFn$_invoke$arity$3 = G__20319__3;
  return G__20319;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args20281) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20281)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__20296 = k;
          var G__20297 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__20296, G__20297) : self__.comp.call(null, G__20296, G__20297);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__20320 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__20321 = t.left;
              stack = G__20320;
              t = G__20321;
              continue;
            } else {
              var G__20322 = stack;
              var G__20323 = t.right;
              stack = G__20322;
              t = G__20323;
              continue;
            }
          } else {
            if (c > 0) {
              var G__20324 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__20325 = t.right;
              stack = G__20324;
              t = G__20325;
              continue;
            } else {
              var G__20326 = stack;
              var G__20327 = t.left;
              stack = G__20326;
              t = G__20327;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__20298 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20298) : cljs.core.key.call(null, G__20298);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__20329 = cljs.core.nnext(in$);
      var G__20330 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__20329;
      out = G__20330;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq20328) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20328));
};
cljs.core.array_map = function cljs$core$array_map() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq20331) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20331));
};
cljs.core.obj_map = function cljs$core$obj_map() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = function() {
    var obj20334 = {};
    return obj20334;
  }();
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__20335 = cljs.core.nnext(kvs);
      kvs = G__20335;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq20332) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20332));
};
cljs.core.sorted_map = function cljs$core$sorted_map() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__20337 = cljs.core.nnext(in$);
      var G__20338 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__20337;
      out = G__20338;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq20336) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20336));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__20341 = cljs.core.nnext(in$);
      var G__20342 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__20341;
      out = G__20342;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq20339) {
  var G__20340 = cljs.core.first(seq20339);
  var seq20339__$1 = cljs.core.next(seq20339);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__20340, seq20339__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20343 = self__.mseq;
    if (G__20343) {
      var bit__4982__auto__ = G__20343.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4982__auto__ || G__20343.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20343.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20343);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20343);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20344 = self__.mseq;
    if (G__20344) {
      var bit__4982__auto__ = G__20344.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4982__auto__ || G__20344.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20344.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20344);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20344);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4422__auto__ = cljs.core.seq(hash_map);
  if (temp__4422__auto__) {
    var mseq = temp__4422__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20345 = self__.mseq;
    if (G__20345) {
      var bit__4982__auto__ = G__20345.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4982__auto__ || G__20345.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20345.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20345);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20345);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20346 = self__.mseq;
    if (G__20346) {
      var bit__4982__auto__ = G__20346.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4982__auto__ || G__20346.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20346.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20346);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20346);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4422__auto__ = cljs.core.seq(hash_map);
  if (temp__4422__auto__) {
    var mseq = temp__4422__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__20347_SHARP_, p2__20348_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4308__auto__ = p1__20347_SHARP_;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__20348_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq20349) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20349));
};
cljs.core.merge_with = function cljs$core$merge_with() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__20352 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__20353 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20352, G__20353) : f.call(null, G__20352, G__20353);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4308__auto__ = m1;
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq20350) {
  var G__20351 = cljs.core.first(seq20350);
  var seq20350__$1 = cljs.core.next(seq20350);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__20351, seq20350__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__20354 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__20355 = cljs.core.next(keys);
      ret = G__20354;
      keys = G__20355;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20358 = cljs.core.seq(coll);
  var chunk__20359 = null;
  var count__20360 = 0;
  var i__20361 = 0;
  while (true) {
    if (i__20361 < count__20360) {
      var vec__20362 = chunk__20359.cljs$core$IIndexed$_nth$arity$2(null, i__20361);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20362, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20362, 1, null);
      var G__20363_20368 = v;
      var G__20364_20369 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20363_20368, G__20364_20369) : f.call(null, G__20363_20368, G__20364_20369);
      var G__20370 = seq__20358;
      var G__20371 = chunk__20359;
      var G__20372 = count__20360;
      var G__20373 = i__20361 + 1;
      seq__20358 = G__20370;
      chunk__20359 = G__20371;
      count__20360 = G__20372;
      i__20361 = G__20373;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__20358);
      if (temp__4422__auto__) {
        var seq__20358__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20358__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__20358__$1);
          var G__20374 = cljs.core.chunk_rest(seq__20358__$1);
          var G__20375 = c__5093__auto__;
          var G__20376 = cljs.core.count(c__5093__auto__);
          var G__20377 = 0;
          seq__20358 = G__20374;
          chunk__20359 = G__20375;
          count__20360 = G__20376;
          i__20361 = G__20377;
          continue;
        } else {
          var vec__20365 = cljs.core.first(seq__20358__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20365, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20365, 1, null);
          var G__20366_20378 = v;
          var G__20367_20379 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20366_20378, G__20367_20379) : f.call(null, G__20366_20378, G__20367_20379);
          var G__20380 = cljs.core.next(seq__20358__$1);
          var G__20381 = null;
          var G__20382 = 0;
          var G__20383 = 0;
          seq__20358 = G__20380;
          chunk__20359 = G__20381;
          count__20360 = G__20382;
          i__20361 = G__20383;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__20356_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__20356_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__20384 = null;
  var G__20384__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20384__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20384 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20384__2.call(this, self__, k);
      case 3:
        return G__20384__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20384.cljs$core$IFn$_invoke$arity$2 = G__20384__2;
  G__20384.cljs$core$IFn$_invoke$arity$3 = G__20384__3;
  return G__20384;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args20357) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20357)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__20385 = i + 1;
        var G__20386 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__20385;
        out = G__20386;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__20387 = i + 1;
        var G__20388 = cljs.core._conj_BANG_(out, items[i]);
        i = G__20387;
        out = G__20388;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__20390 = null;
  var G__20390__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__20390__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__20390 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20390__2.call(this, self__, k);
      case 3:
        return G__20390__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20390.cljs$core$IFn$_invoke$arity$2 = G__20390__2;
  G__20390.cljs$core$IFn$_invoke$arity$3 = G__20390__3;
  return G__20390;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args20389) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20389)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null)], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20393 = cljs.core.seq(coll);
  var chunk__20394 = null;
  var count__20395 = 0;
  var i__20396 = 0;
  while (true) {
    if (i__20396 < count__20395) {
      var vec__20397 = chunk__20394.cljs$core$IIndexed$_nth$arity$2(null, i__20396);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20397, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20397, 1, null);
      var G__20398_20403 = v;
      var G__20399_20404 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20398_20403, G__20399_20404) : f.call(null, G__20398_20403, G__20399_20404);
      var G__20405 = seq__20393;
      var G__20406 = chunk__20394;
      var G__20407 = count__20395;
      var G__20408 = i__20396 + 1;
      seq__20393 = G__20405;
      chunk__20394 = G__20406;
      count__20395 = G__20407;
      i__20396 = G__20408;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__20393);
      if (temp__4422__auto__) {
        var seq__20393__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20393__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__20393__$1);
          var G__20409 = cljs.core.chunk_rest(seq__20393__$1);
          var G__20410 = c__5093__auto__;
          var G__20411 = cljs.core.count(c__5093__auto__);
          var G__20412 = 0;
          seq__20393 = G__20409;
          chunk__20394 = G__20410;
          count__20395 = G__20411;
          i__20396 = G__20412;
          continue;
        } else {
          var vec__20400 = cljs.core.first(seq__20393__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20400, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20400, 1, null);
          var G__20401_20413 = v;
          var G__20402_20414 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20401_20413, G__20402_20414) : f.call(null, G__20401_20413, G__20402_20414);
          var G__20415 = cljs.core.next(seq__20393__$1);
          var G__20416 = null;
          var G__20417 = 0;
          var G__20418 = 0;
          seq__20393 = G__20415;
          chunk__20394 = G__20416;
          count__20395 = G__20417;
          i__20396 = G__20418;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__20391_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__20391_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__20419 = null;
  var G__20419__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20419__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20419 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20419__2.call(this, self__, k);
      case 3:
        return G__20419__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20419.cljs$core$IFn$_invoke$arity$2 = G__20419__2;
  G__20419.cljs$core$IFn$_invoke$arity$3 = G__20419__3;
  return G__20419;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args20392) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20392)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5187__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5187__auto__.length) {
        var G__20420 = i + 1;
        var G__20421 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__20420;
        res = G__20421;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__20422 = cljs.core.next(in$__$1);
          var G__20423 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__20422;
          out = G__20423;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set() {
  var G__20426 = arguments.length;
  switch(G__20426) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5359__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq20424) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20424));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq20428) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20428));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq20429) {
  var G__20430 = cljs.core.first(seq20429);
  var seq20429__$1 = cljs.core.next(seq20429);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__20430, seq20429__$1);
};
cljs.core.replace = function cljs$core$replace() {
  var G__20434 = arguments.length;
  switch(G__20434) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__20431_SHARP_) {
    var temp__4420__auto__ = cljs.core.find(smap, p1__20431_SHARP_);
    if (cljs.core.truth_(temp__4420__auto__)) {
      var e = temp__4420__auto__;
      return cljs.core.val(e);
    } else {
      return p1__20431_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4420__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4420__auto__)) {
          var e = temp__4420__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__20432_SHARP_) {
      var temp__4420__auto__ = cljs.core.find(smap, p1__20432_SHARP_);
      if (cljs.core.truth_(temp__4420__auto__)) {
        var e = temp__4420__auto__;
        return cljs.core.second(e);
      } else {
        return p1__20432_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct() {
  var G__20437 = arguments.length;
  switch(G__20437) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__20449 = null;
        var G__20449__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20449__1 = function(result) {
          var G__20438 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20438) : rf.call(null, G__20438);
        };
        var G__20449__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(function() {
            var G__20439 = seen;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20439) : cljs.core.deref.call(null, G__20439);
          }(), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            var G__20440 = result;
            var G__20441 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20440, G__20441) : rf.call(null, G__20440, G__20441);
          }
        };
        G__20449 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20449__0.call(this);
            case 1:
              return G__20449__1.call(this, result);
            case 2:
              return G__20449__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20449.cljs$core$IFn$_invoke$arity$0 = G__20449__0;
        G__20449.cljs$core$IFn$_invoke$arity$1 = G__20449__1;
        G__20449.cljs$core$IFn$_invoke$arity$2 = G__20449__2;
        return G__20449;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__20446, seen__$1) {
        while (true) {
          var vec__20447 = p__20446;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20447, 0, null);
          var xs__$1 = vec__20447;
          var temp__4422__auto__ = cljs.core.seq(xs__$1);
          if (temp__4422__auto__) {
            var s = temp__4422__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__20450 = cljs.core.rest(s);
              var G__20451 = seen__$1;
              p__20446 = G__20450;
              seen__$1 = G__20451;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__20452 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__20453 = cljs.core.next(s__$1);
      ret = G__20452;
      s__$1 = G__20453;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (function() {
    var G__20455 = x;
    if (G__20455) {
      var bit__4975__auto__ = G__20455.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4975__auto__ || G__20455.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__20456 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__20457 = cljs.core.next(ks);
      var G__20458 = cljs.core.next(vs);
      map = G__20456;
      ks = G__20457;
      vs = G__20458;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key() {
  var G__20466 = arguments.length;
  switch(G__20466) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if (function() {
    var G__20467 = x;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20467) : k.call(null, G__20467);
  }() > function() {
    var G__20468 = y;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20468) : k.call(null, G__20468);
  }()) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__20459_SHARP_, p2__20460_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__20459_SHARP_, p2__20460_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq20461) {
  var G__20462 = cljs.core.first(seq20461);
  var seq20461__$1 = cljs.core.next(seq20461);
  var G__20463 = cljs.core.first(seq20461__$1);
  var seq20461__$2 = cljs.core.next(seq20461__$1);
  var G__20464 = cljs.core.first(seq20461__$2);
  var seq20461__$3 = cljs.core.next(seq20461__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__20462, G__20463, G__20464, seq20461__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key() {
  var G__20477 = arguments.length;
  switch(G__20477) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if (function() {
    var G__20478 = x;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20478) : k.call(null, G__20478);
  }() < function() {
    var G__20479 = y;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20479) : k.call(null, G__20479);
  }()) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__20470_SHARP_, p2__20471_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__20470_SHARP_, p2__20471_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq20472) {
  var G__20473 = cljs.core.first(seq20472);
  var seq20472__$1 = cljs.core.next(seq20472);
  var G__20474 = cljs.core.first(seq20472__$1);
  var seq20472__$2 = cljs.core.next(seq20472__$1);
  var G__20475 = cljs.core.first(seq20472__$2);
  var seq20472__$3 = cljs.core.next(seq20472__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__20473, G__20474, G__20475, seq20472__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all() {
  var G__20482 = arguments.length;
  switch(G__20482) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__20489 = null;
        var G__20489__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20489__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(function() {
              var G__20483 = result;
              var G__20484 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20483, G__20484) : rf.call(null, G__20483, G__20484);
            }());
          }();
          var G__20485 = result__$1;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20485) : rf.call(null, G__20485);
        };
        var G__20489__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var G__20486 = result;
            var G__20487 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20486, G__20487) : rf.call(null, G__20486, G__20487);
          } else {
            return result;
          }
        };
        G__20489 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20489__0.call(this);
            case 1:
              return G__20489__1.call(this, result);
            case 2:
              return G__20489__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20489.cljs$core$IFn$_invoke$arity$0 = G__20489__0;
        G__20489.cljs$core$IFn$_invoke$arity$1 = G__20489__1;
        G__20489.cljs$core$IFn$_invoke$arity$2 = G__20489__2;
        return G__20489;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while() {
  var G__20491 = arguments.length;
  switch(G__20491) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__20498 = null;
      var G__20498__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__20498__1 = function(result) {
        var G__20492 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20492) : rf.call(null, G__20492);
      };
      var G__20498__2 = function(result, input) {
        if (cljs.core.truth_(function() {
          var G__20493 = input;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20493) : pred.call(null, G__20493);
        }())) {
          var G__20494 = result;
          var G__20495 = input;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20494, G__20495) : rf.call(null, G__20494, G__20495);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__20498 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__20498__0.call(this);
          case 1:
            return G__20498__1.call(this, result);
          case 2:
            return G__20498__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20498.cljs$core$IFn$_invoke$arity$0 = G__20498__0;
      G__20498.cljs$core$IFn$_invoke$arity$1 = G__20498__1;
      G__20498.cljs$core$IFn$_invoke$arity$2 = G__20498__2;
      return G__20498;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      if (cljs.core.truth_(function() {
        var G__20496 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20496) : pred.call(null, G__20496);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__20503 = function() {
      var G__20505 = cljs.core._entry_key(sc, e);
      var G__20506 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20505, G__20506) : comp.call(null, G__20505, G__20506);
    }();
    var G__20504 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__20503, G__20504) : test.call(null, G__20503, G__20504);
  };
};
cljs.core.subseq = function cljs$core$subseq() {
  var G__20508 = arguments.length;
  switch(G__20508) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4422__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4422__auto__)) {
      var vec__20509 = temp__4422__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20509, 0, null);
      var s = vec__20509;
      if (cljs.core.truth_(function() {
        var G__20510 = e;
        return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__20510) : include.call(null, G__20510);
      }())) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4422__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4422__auto__)) {
    var vec__20511 = temp__4422__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20511, 0, null);
    var s = vec__20511;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq() {
  var G__20514 = arguments.length;
  switch(G__20514) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4422__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4422__auto__)) {
      var vec__20515 = temp__4422__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20515, 0, null);
      var s = vec__20515;
      if (cljs.core.truth_(function() {
        var G__20516 = e;
        return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__20516) : include.call(null, G__20516);
      }())) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4422__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4422__auto__)) {
    var vec__20517 = temp__4422__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20517, 0, null);
    var s = vec__20517;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__20519 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__20519);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__20520 = ret;
        var G__20521 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20520, G__20521) : f.call(null, G__20520, G__20521);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__20522 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20522) : cljs.core.deref.call(null, G__20522);
      } else {
        var G__20523 = i + self__.step;
        var G__20524 = ret__$1;
        i = G__20523;
        ret = G__20524;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.range = function cljs$core$range() {
  var G__20526 = arguments.length;
  switch(G__20526) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth() {
  var G__20529 = arguments.length;
  switch(G__20529) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__20534 = null;
        var G__20534__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20534__1 = function(result) {
          var G__20530 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20530) : rf.call(null, G__20530);
        };
        var G__20534__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            var G__20531 = result;
            var G__20532 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20531, G__20532) : rf.call(null, G__20531, G__20532);
          } else {
            return result;
          }
        };
        G__20534 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20534__0.call(this);
            case 1:
              return G__20534__1.call(this, result);
            case 2:
              return G__20534__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20534.cljs$core$IFn$_invoke$arity$0 = G__20534__0;
        G__20534.cljs$core$IFn$_invoke$arity$1 = G__20534__1;
        G__20534.cljs$core$IFn$_invoke$arity$2 = G__20534__2;
        return G__20534;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by() {
  var G__20537 = arguments.length;
  switch(G__20537) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__20548 = null;
        var G__20548__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20548__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(function() {
              var G__20538 = result;
              var G__20539 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20538, G__20539) : rf.call(null, G__20538, G__20539);
            }());
          }();
          var G__20540 = result__$1;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20540) : rf.call(null, G__20540);
        };
        var G__20548__2 = function(result, input) {
          var pval = function() {
            var G__20541 = pa;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20541) : cljs.core.deref.call(null, G__20541);
          }();
          var val = function() {
            var G__20542 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20542) : f.call(null, G__20542);
          }();
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = function() {
              var G__20543 = result;
              var G__20544 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20543, G__20544) : rf.call(null, G__20543, G__20544);
            }();
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__20548 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20548__0.call(this);
            case 1:
              return G__20548__1.call(this, result);
            case 2:
              return G__20548__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20548.cljs$core$IFn$_invoke$arity$0 = G__20548__0;
        G__20548.cljs$core$IFn$_invoke$arity$1 = G__20548__1;
        G__20548.cljs$core$IFn$_invoke$arity$2 = G__20548__2;
        return G__20548;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      var fst = cljs.core.first(s);
      var fv = function() {
        var G__20545 = fst;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20545) : f.call(null, G__20545);
      }();
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4422__auto__) {
        return function(p1__20535_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
            var G__20546 = p1__20535_SHARP_;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20546) : f.call(null, G__20546);
          }());
        };
      }(fst, fv, s, temp__4422__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions() {
  var G__20550 = arguments.length;
  switch(G__20550) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4420__auto__ = cljs.core.seq(coll);
    if (temp__4420__auto__) {
      var s = temp__4420__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4422__auto__ = cljs.core.seq(coll);
    if (temp__4422__auto__) {
      var s = temp__4422__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__20551 = init;
        var G__20552 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20551, G__20552) : f.call(null, G__20551, G__20552);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt() {
  var G__20569 = arguments.length;
  switch(G__20569) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__20613 = null;
    var G__20613__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }()], null);
    };
    var G__20613__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__20570 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20570) : f.call(null, G__20570);
      }()], null);
    };
    var G__20613__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__20571 = x;
        var G__20572 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20571, G__20572) : f.call(null, G__20571, G__20572);
      }()], null);
    };
    var G__20613__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__20573 = x;
        var G__20574 = y;
        var G__20575 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20573, G__20574, G__20575) : f.call(null, G__20573, G__20574, G__20575);
      }()], null);
    };
    var G__20613__4 = function() {
      var G__20614__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__20614 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__20615__i = 0, G__20615__a = new Array(arguments.length - 3);
          while (G__20615__i < G__20615__a.length) {
            G__20615__a[G__20615__i] = arguments[G__20615__i + 3];
            ++G__20615__i;
          }
          args = new cljs.core.IndexedSeq(G__20615__a, 0);
        }
        return G__20614__delegate.call(this, x, y, z, args);
      };
      G__20614.cljs$lang$maxFixedArity = 3;
      G__20614.cljs$lang$applyTo = function(arglist__20616) {
        var x = cljs.core.first(arglist__20616);
        arglist__20616 = cljs.core.next(arglist__20616);
        var y = cljs.core.first(arglist__20616);
        arglist__20616 = cljs.core.next(arglist__20616);
        var z = cljs.core.first(arglist__20616);
        var args = cljs.core.rest(arglist__20616);
        return G__20614__delegate(x, y, z, args);
      };
      G__20614.cljs$core$IFn$_invoke$arity$variadic = G__20614__delegate;
      return G__20614;
    }();
    G__20613 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__20613__0.call(this);
        case 1:
          return G__20613__1.call(this, x);
        case 2:
          return G__20613__2.call(this, x, y);
        case 3:
          return G__20613__3.call(this, x, y, z);
        default:
          var G__20617 = null;
          if (arguments.length > 3) {
            var G__20618__i = 0, G__20618__a = new Array(arguments.length - 3);
            while (G__20618__i < G__20618__a.length) {
              G__20618__a[G__20618__i] = arguments[G__20618__i + 3];
              ++G__20618__i;
            }
            G__20617 = new cljs.core.IndexedSeq(G__20618__a, 0);
          }
          return G__20613__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20617);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__20613.cljs$lang$maxFixedArity = 3;
    G__20613.cljs$lang$applyTo = G__20613__4.cljs$lang$applyTo;
    G__20613.cljs$core$IFn$_invoke$arity$0 = G__20613__0;
    G__20613.cljs$core$IFn$_invoke$arity$1 = G__20613__1;
    G__20613.cljs$core$IFn$_invoke$arity$2 = G__20613__2;
    G__20613.cljs$core$IFn$_invoke$arity$3 = G__20613__3;
    G__20613.cljs$core$IFn$_invoke$arity$variadic = G__20613__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__20613;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__20619 = null;
    var G__20619__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }()], null);
    };
    var G__20619__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__20576 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20576) : f.call(null, G__20576);
      }(), function() {
        var G__20577 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20577) : g.call(null, G__20577);
      }()], null);
    };
    var G__20619__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__20578 = x;
        var G__20579 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20578, G__20579) : f.call(null, G__20578, G__20579);
      }(), function() {
        var G__20580 = x;
        var G__20581 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__20580, G__20581) : g.call(null, G__20580, G__20581);
      }()], null);
    };
    var G__20619__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__20582 = x;
        var G__20583 = y;
        var G__20584 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20582, G__20583, G__20584) : f.call(null, G__20582, G__20583, G__20584);
      }(), function() {
        var G__20585 = x;
        var G__20586 = y;
        var G__20587 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__20585, G__20586, G__20587) : g.call(null, G__20585, G__20586, G__20587);
      }()], null);
    };
    var G__20619__4 = function() {
      var G__20620__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__20620 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__20621__i = 0, G__20621__a = new Array(arguments.length - 3);
          while (G__20621__i < G__20621__a.length) {
            G__20621__a[G__20621__i] = arguments[G__20621__i + 3];
            ++G__20621__i;
          }
          args = new cljs.core.IndexedSeq(G__20621__a, 0);
        }
        return G__20620__delegate.call(this, x, y, z, args);
      };
      G__20620.cljs$lang$maxFixedArity = 3;
      G__20620.cljs$lang$applyTo = function(arglist__20622) {
        var x = cljs.core.first(arglist__20622);
        arglist__20622 = cljs.core.next(arglist__20622);
        var y = cljs.core.first(arglist__20622);
        arglist__20622 = cljs.core.next(arglist__20622);
        var z = cljs.core.first(arglist__20622);
        var args = cljs.core.rest(arglist__20622);
        return G__20620__delegate(x, y, z, args);
      };
      G__20620.cljs$core$IFn$_invoke$arity$variadic = G__20620__delegate;
      return G__20620;
    }();
    G__20619 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__20619__0.call(this);
        case 1:
          return G__20619__1.call(this, x);
        case 2:
          return G__20619__2.call(this, x, y);
        case 3:
          return G__20619__3.call(this, x, y, z);
        default:
          var G__20623 = null;
          if (arguments.length > 3) {
            var G__20624__i = 0, G__20624__a = new Array(arguments.length - 3);
            while (G__20624__i < G__20624__a.length) {
              G__20624__a[G__20624__i] = arguments[G__20624__i + 3];
              ++G__20624__i;
            }
            G__20623 = new cljs.core.IndexedSeq(G__20624__a, 0);
          }
          return G__20619__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20623);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__20619.cljs$lang$maxFixedArity = 3;
    G__20619.cljs$lang$applyTo = G__20619__4.cljs$lang$applyTo;
    G__20619.cljs$core$IFn$_invoke$arity$0 = G__20619__0;
    G__20619.cljs$core$IFn$_invoke$arity$1 = G__20619__1;
    G__20619.cljs$core$IFn$_invoke$arity$2 = G__20619__2;
    G__20619.cljs$core$IFn$_invoke$arity$3 = G__20619__3;
    G__20619.cljs$core$IFn$_invoke$arity$variadic = G__20619__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__20619;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__20625 = null;
    var G__20625__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }(), function() {
        return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
      }()], null);
    };
    var G__20625__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__20588 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20588) : f.call(null, G__20588);
      }(), function() {
        var G__20589 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20589) : g.call(null, G__20589);
      }(), function() {
        var G__20590 = x;
        return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__20590) : h.call(null, G__20590);
      }()], null);
    };
    var G__20625__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__20591 = x;
        var G__20592 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20591, G__20592) : f.call(null, G__20591, G__20592);
      }(), function() {
        var G__20593 = x;
        var G__20594 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__20593, G__20594) : g.call(null, G__20593, G__20594);
      }(), function() {
        var G__20595 = x;
        var G__20596 = y;
        return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__20595, G__20596) : h.call(null, G__20595, G__20596);
      }()], null);
    };
    var G__20625__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__20597 = x;
        var G__20598 = y;
        var G__20599 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20597, G__20598, G__20599) : f.call(null, G__20597, G__20598, G__20599);
      }(), function() {
        var G__20600 = x;
        var G__20601 = y;
        var G__20602 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__20600, G__20601, G__20602) : g.call(null, G__20600, G__20601, G__20602);
      }(), function() {
        var G__20603 = x;
        var G__20604 = y;
        var G__20605 = z;
        return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__20603, G__20604, G__20605) : h.call(null, G__20603, G__20604, G__20605);
      }()], null);
    };
    var G__20625__4 = function() {
      var G__20626__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__20626 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__20627__i = 0, G__20627__a = new Array(arguments.length - 3);
          while (G__20627__i < G__20627__a.length) {
            G__20627__a[G__20627__i] = arguments[G__20627__i + 3];
            ++G__20627__i;
          }
          args = new cljs.core.IndexedSeq(G__20627__a, 0);
        }
        return G__20626__delegate.call(this, x, y, z, args);
      };
      G__20626.cljs$lang$maxFixedArity = 3;
      G__20626.cljs$lang$applyTo = function(arglist__20628) {
        var x = cljs.core.first(arglist__20628);
        arglist__20628 = cljs.core.next(arglist__20628);
        var y = cljs.core.first(arglist__20628);
        arglist__20628 = cljs.core.next(arglist__20628);
        var z = cljs.core.first(arglist__20628);
        var args = cljs.core.rest(arglist__20628);
        return G__20626__delegate(x, y, z, args);
      };
      G__20626.cljs$core$IFn$_invoke$arity$variadic = G__20626__delegate;
      return G__20626;
    }();
    G__20625 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__20625__0.call(this);
        case 1:
          return G__20625__1.call(this, x);
        case 2:
          return G__20625__2.call(this, x, y);
        case 3:
          return G__20625__3.call(this, x, y, z);
        default:
          var G__20629 = null;
          if (arguments.length > 3) {
            var G__20630__i = 0, G__20630__a = new Array(arguments.length - 3);
            while (G__20630__i < G__20630__a.length) {
              G__20630__a[G__20630__i] = arguments[G__20630__i + 3];
              ++G__20630__i;
            }
            G__20629 = new cljs.core.IndexedSeq(G__20630__a, 0);
          }
          return G__20625__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20629);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__20625.cljs$lang$maxFixedArity = 3;
    G__20625.cljs$lang$applyTo = G__20625__4.cljs$lang$applyTo;
    G__20625.cljs$core$IFn$_invoke$arity$0 = G__20625__0;
    G__20625.cljs$core$IFn$_invoke$arity$1 = G__20625__1;
    G__20625.cljs$core$IFn$_invoke$arity$2 = G__20625__2;
    G__20625.cljs$core$IFn$_invoke$arity$3 = G__20625__3;
    G__20625.cljs$core$IFn$_invoke$arity$variadic = G__20625__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__20625;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__20631 = null;
      var G__20631__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__20554_SHARP_, p2__20555_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20554_SHARP_, function() {
              return p2__20555_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__20555_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__20555_SHARP_.call(null);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__20631__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__20556_SHARP_, p2__20557_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20556_SHARP_, function() {
              var G__20606 = x;
              return p2__20557_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__20557_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20606) : p2__20557_SHARP_.call(null, G__20606);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__20631__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__20558_SHARP_, p2__20559_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20558_SHARP_, function() {
              var G__20607 = x;
              var G__20608 = y;
              return p2__20559_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__20559_SHARP_.cljs$core$IFn$_invoke$arity$2(G__20607, G__20608) : p2__20559_SHARP_.call(null, G__20607, G__20608);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__20631__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__20560_SHARP_, p2__20561_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20560_SHARP_, function() {
              var G__20609 = x;
              var G__20610 = y;
              var G__20611 = z;
              return p2__20561_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__20561_SHARP_.cljs$core$IFn$_invoke$arity$3(G__20609, G__20610, G__20611) : p2__20561_SHARP_.call(null, G__20609, G__20610, G__20611);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__20631__4 = function() {
        var G__20632__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__20562_SHARP_, p2__20563_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20562_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__20563_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__20632 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20633__i = 0, G__20633__a = new Array(arguments.length - 3);
            while (G__20633__i < G__20633__a.length) {
              G__20633__a[G__20633__i] = arguments[G__20633__i + 3];
              ++G__20633__i;
            }
            args = new cljs.core.IndexedSeq(G__20633__a, 0);
          }
          return G__20632__delegate.call(this, x, y, z, args);
        };
        G__20632.cljs$lang$maxFixedArity = 3;
        G__20632.cljs$lang$applyTo = function(arglist__20634) {
          var x = cljs.core.first(arglist__20634);
          arglist__20634 = cljs.core.next(arglist__20634);
          var y = cljs.core.first(arglist__20634);
          arglist__20634 = cljs.core.next(arglist__20634);
          var z = cljs.core.first(arglist__20634);
          var args = cljs.core.rest(arglist__20634);
          return G__20632__delegate(x, y, z, args);
        };
        G__20632.cljs$core$IFn$_invoke$arity$variadic = G__20632__delegate;
        return G__20632;
      }();
      G__20631 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20631__0.call(this);
          case 1:
            return G__20631__1.call(this, x);
          case 2:
            return G__20631__2.call(this, x, y);
          case 3:
            return G__20631__3.call(this, x, y, z);
          default:
            var G__20635 = null;
            if (arguments.length > 3) {
              var G__20636__i = 0, G__20636__a = new Array(arguments.length - 3);
              while (G__20636__i < G__20636__a.length) {
                G__20636__a[G__20636__i] = arguments[G__20636__i + 3];
                ++G__20636__i;
              }
              G__20635 = new cljs.core.IndexedSeq(G__20636__a, 0);
            }
            return G__20631__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20635);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20631.cljs$lang$maxFixedArity = 3;
      G__20631.cljs$lang$applyTo = G__20631__4.cljs$lang$applyTo;
      G__20631.cljs$core$IFn$_invoke$arity$0 = G__20631__0;
      G__20631.cljs$core$IFn$_invoke$arity$1 = G__20631__1;
      G__20631.cljs$core$IFn$_invoke$arity$2 = G__20631__2;
      G__20631.cljs$core$IFn$_invoke$arity$3 = G__20631__3;
      G__20631.cljs$core$IFn$_invoke$arity$variadic = G__20631__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20631;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq20564) {
  var G__20565 = cljs.core.first(seq20564);
  var seq20564__$1 = cljs.core.next(seq20564);
  var G__20566 = cljs.core.first(seq20564__$1);
  var seq20564__$2 = cljs.core.next(seq20564__$1);
  var G__20567 = cljs.core.first(seq20564__$2);
  var seq20564__$3 = cljs.core.next(seq20564__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__20565, G__20566, G__20567, seq20564__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun() {
  var G__20638 = arguments.length;
  switch(G__20638) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__20640 = cljs.core.next(coll);
      coll = G__20640;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__20641 = n - 1;
      var G__20642 = cljs.core.next(coll);
      n = G__20641;
      coll = G__20642;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall() {
  var G__20644 = arguments.length;
  switch(G__20644) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__20649 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20649, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20649, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4308__auto__ = flags;
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_20657 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4308__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__20658_20664 = cljs.core.first(coll);
          var G__20659_20665 = writer;
          var G__20660_20666 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20658_20664, G__20659_20665, G__20660_20666) : print_one.call(null, G__20658_20664, G__20659_20665, G__20660_20666);
        } else {
        }
        var coll_20667__$1 = cljs.core.next(coll);
        var n_20668 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_20667__$1 && (n_20668 == null || !(n_20668 === 0))) {
            cljs.core._write(writer, sep);
            var G__20661_20669 = cljs.core.first(coll_20667__$1);
            var G__20662_20670 = writer;
            var G__20663_20671 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20661_20669, G__20662_20670, G__20663_20671) : print_one.call(null, G__20661_20669, G__20662_20670, G__20663_20671);
            var G__20672 = cljs.core.next(coll_20667__$1);
            var G__20673 = n_20668 - 1;
            coll_20667__$1 = G__20672;
            n_20668 = G__20673;
            continue;
          } else {
            if (cljs.core.seq(coll_20667__$1) && n_20668 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4308__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4308__auto__)) {
                  return or__4308__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_20657;
  }
};
cljs.core.write_all = function cljs$core$write_all() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__20676 = cljs.core.seq(ss);
  var chunk__20677 = null;
  var count__20678 = 0;
  var i__20679 = 0;
  while (true) {
    if (i__20679 < count__20678) {
      var s = chunk__20677.cljs$core$IIndexed$_nth$arity$2(null, i__20679);
      cljs.core._write(writer, s);
      var G__20680 = seq__20676;
      var G__20681 = chunk__20677;
      var G__20682 = count__20678;
      var G__20683 = i__20679 + 1;
      seq__20676 = G__20680;
      chunk__20677 = G__20681;
      count__20678 = G__20682;
      i__20679 = G__20683;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__20676);
      if (temp__4422__auto__) {
        var seq__20676__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20676__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__20676__$1);
          var G__20684 = cljs.core.chunk_rest(seq__20676__$1);
          var G__20685 = c__5093__auto__;
          var G__20686 = cljs.core.count(c__5093__auto__);
          var G__20687 = 0;
          seq__20676 = G__20684;
          chunk__20677 = G__20685;
          count__20678 = G__20686;
          i__20679 = G__20687;
          continue;
        } else {
          var s = cljs.core.first(seq__20676__$1);
          cljs.core._write(writer, s);
          var G__20688 = cljs.core.next(seq__20676__$1);
          var G__20689 = null;
          var G__20690 = 0;
          var G__20691 = 0;
          seq__20676 = G__20688;
          chunk__20677 = G__20689;
          count__20678 = G__20690;
          i__20679 = G__20691;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq20674) {
  var G__20675 = cljs.core.first(seq20674);
  var seq20674__$1 = cljs.core.next(seq20674);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__20675, seq20674__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj20693 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj20693;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__20696 = '[\\\\"\b\f\n\r\t]';
    var G__20697 = "g";
    return RegExp(G__20696, G__20697);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__4296__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__20711 = obj;
            if (G__20711) {
              var bit__4982__auto__ = G__20711.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4982__auto__ || G__20711.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__20711.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__20711);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__20711);
            }
          }();
          if (and__4296__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__20712_20722 = cljs.core.meta(obj);
        var G__20713_20723 = writer;
        var G__20714_20724 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__20712_20722, G__20713_20723, G__20714_20724) : cljs.core.pr_writer.call(null, G__20712_20722, G__20713_20723, G__20714_20724);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__20715 = obj;
            if (G__20715) {
              var bit__4975__auto__ = G__20715.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4975__auto__ || G__20715.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__20716 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__20717 = cljs.core.pr_writer;
                var G__20718 = writer;
                var G__20719 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__20716, G__20717, G__20718, G__20719) : cljs.core.print_map.call(null, G__20716, G__20717, G__20718, G__20719);
              } else {
                if (cljs.core.array_QMARK_(obj)) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__20720 = obj;
                    return goog.isString(G__20720);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__20725 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__20725;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.truth_(cljs.core.regexp_QMARK_(obj))) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__20721 = obj;
                            if (G__20721) {
                              var bit__4982__auto__ = G__20721.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4982__auto__ || G__20721.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__20721.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__20721);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__20721);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4420__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4420__auto__)) {
    var alt_impl = temp__4420__auto__;
    var G__20729 = obj;
    var G__20730 = writer;
    var G__20731 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__20729, G__20730, G__20731) : alt_impl.call(null, G__20729, G__20730, G__20731);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__20736 = cljs.core.seq(cljs.core.next(objs));
  var chunk__20737 = null;
  var count__20738 = 0;
  var i__20739 = 0;
  while (true) {
    if (i__20739 < count__20738) {
      var obj = chunk__20737.cljs$core$IIndexed$_nth$arity$2(null, i__20739);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__20740 = seq__20736;
      var G__20741 = chunk__20737;
      var G__20742 = count__20738;
      var G__20743 = i__20739 + 1;
      seq__20736 = G__20740;
      chunk__20737 = G__20741;
      count__20738 = G__20742;
      i__20739 = G__20743;
      continue;
    } else {
      var temp__4422__auto__ = cljs.core.seq(seq__20736);
      if (temp__4422__auto__) {
        var seq__20736__$1 = temp__4422__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20736__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__20736__$1);
          var G__20744 = cljs.core.chunk_rest(seq__20736__$1);
          var G__20745 = c__5093__auto__;
          var G__20746 = cljs.core.count(c__5093__auto__);
          var G__20747 = 0;
          seq__20736 = G__20744;
          chunk__20737 = G__20745;
          count__20738 = G__20746;
          i__20739 = G__20747;
          continue;
        } else {
          var obj = cljs.core.first(seq__20736__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__20748 = cljs.core.next(seq__20736__$1);
          var G__20749 = null;
          var G__20750 = 0;
          var G__20751 = 0;
          seq__20736 = G__20748;
          chunk__20737 = G__20749;
          count__20738 = G__20750;
          i__20739 = G__20751;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function cljs$core$pr_str() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq20752) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20752));
};
cljs.core.prn_str = function cljs$core$prn_str() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq20753) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20753));
};
cljs.core.pr = function cljs$core$pr() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq20754) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20754));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20755__i = 0, G__20755__a = new Array(arguments.length - 0);
      while (G__20755__i < G__20755__a.length) {
        G__20755__a[G__20755__i] = arguments[G__20755__i + 0];
        ++G__20755__i;
      }
      objs = new cljs.core.IndexedSeq(G__20755__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__20756) {
    var objs = cljs.core.seq(arglist__20756);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq20757) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20757));
};
cljs.core.println = function cljs$core$println() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq20758) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20758));
};
cljs.core.println_str = function cljs$core$println_str() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq20759) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20759));
};
cljs.core.prn = function cljs$core$prn() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq20760) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20760));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__20767_20773 = cljs.core.key(e);
    var G__20768_20774 = w;
    var G__20769_20775 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20767_20773, G__20768_20774, G__20769_20775) : print_one.call(null, G__20767_20773, G__20768_20774, G__20769_20775);
    cljs.core._write(w, " ");
    var G__20770 = cljs.core.val(e);
    var G__20771 = w;
    var G__20772 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20770, G__20771, G__20772) : print_one.call(null, G__20770, G__20771, G__20772);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_() {
  var argseq__5348__auto__ = 2 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5348__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq20776) {
  var G__20777 = cljs.core.first(seq20776);
  var seq20776__$1 = cljs.core.next(seq20776);
  var G__20778 = cljs.core.first(seq20776__$1);
  var seq20776__$2 = cljs.core.next(seq20776__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__20777, G__20778, seq20776__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym() {
  var G__20780 = arguments.length;
  switch(G__20780) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = function() {
      var G__20781 = 0;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20781) : cljs.core.atom.call(null, G__20781);
    }();
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "value", "value", 1946509744, null)], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__20784 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20784) : cljs.core.deref.call(null, G__20784);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__20785_SHARP_, p2__20786_SHARP_) {
    var ret = function() {
      var G__20789 = p1__20785_SHARP_;
      var G__20790 = p2__20786_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20789, G__20790) : rf.call(null, G__20789, G__20790);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__20793 = null;
      var G__20793__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__20793__1 = function(result) {
        var G__20792 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20792) : rf.call(null, G__20792);
      };
      var G__20793__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__20793 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__20793__0.call(this);
          case 1:
            return G__20793__1.call(this, result);
          case 2:
            return G__20793__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20793.cljs$core$IFn$_invoke$arity$0 = G__20793__0;
      G__20793.cljs$core$IFn$_invoke$arity$1 = G__20793__1;
      G__20793.cljs$core$IFn$_invoke$arity$2 = G__20793__2;
      return G__20793;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe() {
  var G__20795 = arguments.length;
  switch(G__20795) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__20801 = null;
        var G__20801__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20801__1 = function(result) {
          var G__20796 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20796) : rf.call(null, G__20796);
        };
        var G__20801__2 = function(result, input) {
          var prior = function() {
            var G__20797 = pa;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20797) : cljs.core.deref.call(null, G__20797);
          }();
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            var G__20798 = result;
            var G__20799 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20798, G__20799) : rf.call(null, G__20798, G__20799);
          }
        };
        G__20801 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20801__0.call(this);
            case 1:
              return G__20801__1.call(this, result);
            case 2:
              return G__20801__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20801.cljs$core$IFn$_invoke$arity$0 = G__20801__0;
        G__20801.cljs$core$IFn$_invoke$arity$1 = G__20801__1;
        G__20801.cljs$core$IFn$_invoke$arity$2 = G__20801__2;
        return G__20801;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample() {
  var G__20803 = arguments.length;
  switch(G__20803) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return function() {
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
    }() < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return function() {
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
    }() < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.eduction = function cljs$core$eduction() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq20805) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20805));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__20807_SHARP_, p2__20806_SHARP_) {
    var G__20809 = p2__20806_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__20809) : proc.call(null, G__20809);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj20811 = {};
  return obj20811;
}();
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._clj__GT_js[function() {
        var G__20815 = x__4944__auto__;
        return goog.typeOf(G__20815);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._key__GT_js[function() {
        var G__20819 = x__4944__auto__;
        return goog.typeOf(G__20819);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (function() {
    var G__20822 = k;
    if (G__20822) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__20822.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__20822.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__20822);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__20822);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__20823 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__20823) : cljs.core.clj__GT_js.call(null, G__20823);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__20839 = x;
      if (G__20839) {
        var bit__4982__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__4308__auto__ = bit__4982__auto__;
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return G__20839.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__20839.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__20839);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__20839);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj20841 = {};
              return obj20841;
            }();
            var seq__20842_20852 = cljs.core.seq(x);
            var chunk__20843_20853 = null;
            var count__20844_20854 = 0;
            var i__20845_20855 = 0;
            while (true) {
              if (i__20845_20855 < count__20844_20854) {
                var vec__20846_20856 = chunk__20843_20853.cljs$core$IIndexed$_nth$arity$2(null, i__20845_20855);
                var k_20857 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20846_20856, 0, null);
                var v_20858 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20846_20856, 1, null);
                m[cljs.core.key__GT_js(k_20857)] = cljs$core$clj__GT_js(v_20858);
                var G__20859 = seq__20842_20852;
                var G__20860 = chunk__20843_20853;
                var G__20861 = count__20844_20854;
                var G__20862 = i__20845_20855 + 1;
                seq__20842_20852 = G__20859;
                chunk__20843_20853 = G__20860;
                count__20844_20854 = G__20861;
                i__20845_20855 = G__20862;
                continue;
              } else {
                var temp__4422__auto___20863 = cljs.core.seq(seq__20842_20852);
                if (temp__4422__auto___20863) {
                  var seq__20842_20864__$1 = temp__4422__auto___20863;
                  if (cljs.core.chunked_seq_QMARK_(seq__20842_20864__$1)) {
                    var c__5093__auto___20865 = cljs.core.chunk_first(seq__20842_20864__$1);
                    var G__20866 = cljs.core.chunk_rest(seq__20842_20864__$1);
                    var G__20867 = c__5093__auto___20865;
                    var G__20868 = cljs.core.count(c__5093__auto___20865);
                    var G__20869 = 0;
                    seq__20842_20852 = G__20866;
                    chunk__20843_20853 = G__20867;
                    count__20844_20854 = G__20868;
                    i__20845_20855 = G__20869;
                    continue;
                  } else {
                    var vec__20847_20870 = cljs.core.first(seq__20842_20864__$1);
                    var k_20871 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20847_20870, 0, null);
                    var v_20872 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20847_20870, 1, null);
                    m[cljs.core.key__GT_js(k_20871)] = cljs$core$clj__GT_js(v_20872);
                    var G__20873 = cljs.core.next(seq__20842_20864__$1);
                    var G__20874 = null;
                    var G__20875 = 0;
                    var G__20876 = 0;
                    seq__20842_20852 = G__20873;
                    chunk__20843_20853 = G__20874;
                    count__20844_20854 = G__20875;
                    i__20845_20855 = G__20876;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__20848_20877 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__20849_20878 = null;
              var count__20850_20879 = 0;
              var i__20851_20880 = 0;
              while (true) {
                if (i__20851_20880 < count__20850_20879) {
                  var x_20881__$1 = chunk__20849_20878.cljs$core$IIndexed$_nth$arity$2(null, i__20851_20880);
                  arr.push(x_20881__$1);
                  var G__20882 = seq__20848_20877;
                  var G__20883 = chunk__20849_20878;
                  var G__20884 = count__20850_20879;
                  var G__20885 = i__20851_20880 + 1;
                  seq__20848_20877 = G__20882;
                  chunk__20849_20878 = G__20883;
                  count__20850_20879 = G__20884;
                  i__20851_20880 = G__20885;
                  continue;
                } else {
                  var temp__4422__auto___20886 = cljs.core.seq(seq__20848_20877);
                  if (temp__4422__auto___20886) {
                    var seq__20848_20887__$1 = temp__4422__auto___20886;
                    if (cljs.core.chunked_seq_QMARK_(seq__20848_20887__$1)) {
                      var c__5093__auto___20888 = cljs.core.chunk_first(seq__20848_20887__$1);
                      var G__20889 = cljs.core.chunk_rest(seq__20848_20887__$1);
                      var G__20890 = c__5093__auto___20888;
                      var G__20891 = cljs.core.count(c__5093__auto___20888);
                      var G__20892 = 0;
                      seq__20848_20877 = G__20889;
                      chunk__20849_20878 = G__20890;
                      count__20850_20879 = G__20891;
                      i__20851_20880 = G__20892;
                      continue;
                    } else {
                      var x_20893__$1 = cljs.core.first(seq__20848_20887__$1);
                      arr.push(x_20893__$1);
                      var G__20894 = cljs.core.next(seq__20848_20887__$1);
                      var G__20895 = null;
                      var G__20896 = 0;
                      var G__20897 = 0;
                      seq__20848_20877 = G__20894;
                      chunk__20849_20878 = G__20895;
                      count__20850_20879 = G__20896;
                      i__20851_20880 = G__20897;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj20899 = {};
  return obj20899;
}();
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._js__GT_clj[function() {
        var G__20903 = x__4944__auto__;
        return goog.typeOf(G__20903);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj() {
  var G__20907 = arguments.length;
  switch(G__20907) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__20908 = opts;
  var map__20908__$1 = cljs.core.seq_QMARK_(map__20908) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20908) : map__20908;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20908__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__20908, map__20908__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (function() {
        var G__20924 = x__$1;
        if (G__20924) {
          var bit__4982__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__4308__auto__ = bit__4982__auto__;
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              return G__20924.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__20924.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__20924);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__20924);
        }
      }()) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__5062__auto__ = function(map__20908, map__20908__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__20925(s__20926) {
                      return new cljs.core.LazySeq(null, function(map__20908, map__20908__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__20926__$1 = s__20926;
                          while (true) {
                            var temp__4422__auto__ = cljs.core.seq(s__20926__$1);
                            if (temp__4422__auto__) {
                              var s__20926__$2 = temp__4422__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__20926__$2)) {
                                var c__5060__auto__ = cljs.core.chunk_first(s__20926__$2);
                                var size__5061__auto__ = cljs.core.count(c__5060__auto__);
                                var b__20928 = cljs.core.chunk_buffer(size__5061__auto__);
                                if (function() {
                                  var i__20927 = 0;
                                  while (true) {
                                    if (i__20927 < size__5061__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5060__auto__, i__20927);
                                      cljs.core.chunk_append(b__20928, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                        var G__20933 = k;
                                        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__20933) : keyfn.call(null, G__20933);
                                      }(), cljs$core$thisfn(x__$1[k])], null));
                                      var G__20936 = i__20927 + 1;
                                      i__20927 = G__20936;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__20928), cljs$core$thisfn_$_iter__20925(cljs.core.chunk_rest(s__20926__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__20928), null);
                                }
                              } else {
                                var k = cljs.core.first(s__20926__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                  var G__20934 = k;
                                  return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__20934) : keyfn.call(null, G__20934);
                                }(), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__20925(cljs.core.rest(s__20926__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__20908, map__20908__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__20908, map__20908__$1, keywordize_keys, keyfn);
                  return iter__5062__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__20908, map__20908__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq20904) {
  var G__20905 = cljs.core.first(seq20904);
  var seq20904__$1 = cljs.core.next(seq20904);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__20905, seq20904__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__20939 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20939) : cljs.core.atom.call(null, G__20939);
  }();
  return function(mem) {
    return function() {
      var G__20941__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__20940 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20940) : cljs.core.deref.call(null, G__20940);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__20941 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__20942__i = 0, G__20942__a = new Array(arguments.length - 0);
          while (G__20942__i < G__20942__a.length) {
            G__20942__a[G__20942__i] = arguments[G__20942__i + 0];
            ++G__20942__i;
          }
          args = new cljs.core.IndexedSeq(G__20942__a, 0);
        }
        return G__20941__delegate.call(this, args);
      };
      G__20941.cljs$lang$maxFixedArity = 0;
      G__20941.cljs$lang$applyTo = function(arglist__20943) {
        var args = cljs.core.seq(arglist__20943);
        return G__20941__delegate(args);
      };
      G__20941.cljs$core$IFn$_invoke$arity$variadic = G__20941__delegate;
      return G__20941;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline() {
  var G__20947 = arguments.length;
  switch(G__20947) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }();
    if (cljs.core.fn_QMARK_(ret)) {
      var G__20949 = ret;
      f = G__20949;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq20944) {
  var G__20945 = cljs.core.first(seq20944);
  var seq20944__$1 = cljs.core.next(seq20944);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__20945, seq20944__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand() {
  var G__20951 = arguments.length;
  switch(G__20951) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function() {
    return Math.random();
  }() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__20954 = function() {
    return Math.random();
  }() * n;
  return Math.floor(G__20954);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__20956 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20956) : f.call(null, G__20956);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__20958 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20958) : cljs.core.atom.call(null, G__20958);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq20959) {
  var G__20960 = cljs.core.first(seq20959);
  var seq20959__$1 = cljs.core.next(seq20959);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__20960, seq20959__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_() {
  var G__20962 = arguments.length;
  switch(G__20962) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__20963 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20963) : cljs.core.deref.call(null, G__20963);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4308__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4308__auto__) {
    return or__4308__auto__;
  } else {
    var or__4308__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4308__auto____$1) {
      return or__4308__auto____$1;
    } else {
      var and__4296__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4296__auto__) {
        var and__4296__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4296__auto____$1) {
          var and__4296__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4296__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__20989 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                  var G__20986 = i;
                  return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__20986) : child.call(null, G__20986);
                }(), function() {
                  var G__20987 = i;
                  return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__20987) : parent.call(null, G__20987);
                }());
                var G__20990 = i + 1;
                ret = G__20989;
                i = G__20990;
                continue;
              }
              break;
            }
          } else {
            return and__4296__auto____$2;
          }
        } else {
          return and__4296__auto____$1;
        }
      } else {
        return and__4296__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents() {
  var G__20992 = arguments.length;
  switch(G__20992) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__20993 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20993) : cljs.core.deref.call(null, G__20993);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors() {
  var G__20996 = arguments.length;
  switch(G__20996) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__20997 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20997) : cljs.core.deref.call(null, G__20997);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants() {
  var G__21000 = arguments.length;
  switch(G__21000) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__21001 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21001) : cljs.core.deref.call(null, G__21001);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive() {
  var G__21004 = arguments.length;
  switch(G__21004) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
            var G__21005 = target;
            return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__21005) : targets.call(null, G__21005);
          }())));
        };
      }(tp, td, ta), m, cljs.core.cons(source, function() {
        var G__21006 = source;
        return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__21006) : sources.call(null, G__21006);
      }()));
    };
  }(tp, td, ta);
  var or__4308__auto__ = cljs.core.contains_QMARK_(function() {
    var G__21010 = tag;
    return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__21010) : tp.call(null, G__21010);
  }(), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(function() {
      var G__21011 = tag;
      return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__21011) : ta.call(null, G__21011);
    }(), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(function() {
      var G__21012 = parent;
      return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__21012) : ta.call(null, G__21012);
    }(), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive() {
  var G__21018 = arguments.length;
  switch(G__21018) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(function() {
    var G__21019 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__21019) : parentMap.call(null, G__21019);
  }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
    var G__21020 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__21020) : parentMap.call(null, G__21020);
  }(), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__21014_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__21014_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__21014_SHARP_), cljs.core.second(p1__21014_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(function() {
    var G__21021 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__21021) : parentMap.call(null, G__21021);
  }(), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__21015_SHARP_, p2__21016_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__21015_SHARP_, p2__21016_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__21025 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21025) : cljs.core.deref.call(null, G__21025);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__21026 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21026) : cljs.core.deref.call(null, G__21026);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__21042 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21042) : cljs.core.deref.call(null, G__21042);
  }().call(null, x);
  var or__4308__auto__ = cljs.core.truth_(function() {
    var and__4296__auto__ = xprefs;
    if (cljs.core.truth_(and__4296__auto__)) {
      var G__21044 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__21044) : xprefs.call(null, G__21044);
    } else {
      return and__4296__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    var or__4308__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__21045 = cljs.core.rest(ps);
          ps = G__21045;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4308__auto____$1)) {
      return or__4308__auto____$1;
    } else {
      var or__4308__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__21046 = cljs.core.rest(ps);
            ps = G__21046;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4308__auto____$2)) {
        return or__4308__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4308__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__21060) {
    var vec__21061 = p__21060;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21061, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21061, 1, null);
    var e = vec__21061;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__21062 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21062) : cljs.core.deref.call(null, G__21062);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4308__auto__ = be == null;
        if (or__4308__auto__) {
          return or__4308__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__21063 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21063) : cljs.core.deref.call(null, G__21063);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__21064 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21064) : cljs.core.deref.call(null, G__21064);
    }(), function() {
      var G__21065 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21065) : cljs.core.deref.call(null, G__21065);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj21067 = {};
  return obj21067;
}();
cljs.core._reset = function cljs$core$_reset(mf) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._reset[function() {
        var G__21071 = x__4944__auto__;
        return goog.typeOf(G__21071);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._reset["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._add_method[function() {
        var G__21075 = x__4944__auto__;
        return goog.typeOf(G__21075);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._add_method["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._remove_method[function() {
        var G__21079 = x__4944__auto__;
        return goog.typeOf(G__21079);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._remove_method["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._prefer_method[function() {
        var G__21083 = x__4944__auto__;
        return goog.typeOf(G__21083);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._prefer_method["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._get_method[function() {
        var G__21087 = x__4944__auto__;
        return goog.typeOf(G__21087);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._get_method["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._methods[function() {
        var G__21091 = x__4944__auto__;
        return goog.typeOf(G__21091);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._methods["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._prefers[function() {
        var G__21095 = x__4944__auto__;
        return goog.typeOf(G__21095);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._prefers["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._default_dispatch_val[function() {
        var G__21099 = x__4944__auto__;
        return goog.typeOf(G__21099);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._default_dispatch_val["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._dispatch_fn[function() {
        var G__21103 = x__4944__auto__;
        return goog.typeOf(G__21103);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._dispatch_fn["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__21952 = null;
  var G__21952__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__21952__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21105 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__21105) : self__.dispatch_fn.call(null, G__21105);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21106 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__21106) : target_fn.call(null, G__21106);
  };
  var G__21952__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21107 = a;
      var G__21108 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__21107, G__21108) : self__.dispatch_fn.call(null, G__21107, G__21108);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21109 = a;
    var G__21110 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__21109, G__21110) : target_fn.call(null, G__21109, G__21110);
  };
  var G__21952__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21111 = a;
      var G__21112 = b;
      var G__21113 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__21111, G__21112, G__21113) : self__.dispatch_fn.call(null, G__21111, G__21112, G__21113);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21114 = a;
    var G__21115 = b;
    var G__21116 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__21114, G__21115, G__21116) : target_fn.call(null, G__21114, G__21115, G__21116);
  };
  var G__21952__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21117 = a;
      var G__21118 = b;
      var G__21119 = c;
      var G__21120 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__21117, G__21118, G__21119, G__21120) : self__.dispatch_fn.call(null, G__21117, G__21118, G__21119, G__21120);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21121 = a;
    var G__21122 = b;
    var G__21123 = c;
    var G__21124 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__21121, G__21122, G__21123, G__21124) : target_fn.call(null, G__21121, G__21122, G__21123, G__21124);
  };
  var G__21952__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21125 = a;
      var G__21126 = b;
      var G__21127 = c;
      var G__21128 = d;
      var G__21129 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__21125, G__21126, G__21127, G__21128, G__21129) : self__.dispatch_fn.call(null, G__21125, G__21126, G__21127, G__21128, G__21129);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21130 = a;
    var G__21131 = b;
    var G__21132 = c;
    var G__21133 = d;
    var G__21134 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__21130, G__21131, G__21132, G__21133, G__21134) : target_fn.call(null, G__21130, G__21131, G__21132, G__21133, G__21134);
  };
  var G__21952__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21135 = a;
      var G__21136 = b;
      var G__21137 = c;
      var G__21138 = d;
      var G__21139 = e;
      var G__21140 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__21135, G__21136, G__21137, G__21138, G__21139, G__21140) : self__.dispatch_fn.call(null, G__21135, G__21136, G__21137, G__21138, G__21139, G__21140);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21141 = a;
    var G__21142 = b;
    var G__21143 = c;
    var G__21144 = d;
    var G__21145 = e;
    var G__21146 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__21141, G__21142, G__21143, G__21144, G__21145, G__21146) : target_fn.call(null, G__21141, G__21142, G__21143, G__21144, G__21145, G__21146);
  };
  var G__21952__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21147 = a;
      var G__21148 = b;
      var G__21149 = c;
      var G__21150 = d;
      var G__21151 = e;
      var G__21152 = f;
      var G__21153 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__21147, G__21148, G__21149, G__21150, G__21151, G__21152, G__21153) : self__.dispatch_fn.call(null, G__21147, G__21148, G__21149, G__21150, G__21151, G__21152, G__21153);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21154 = a;
    var G__21155 = b;
    var G__21156 = c;
    var G__21157 = d;
    var G__21158 = e;
    var G__21159 = f;
    var G__21160 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__21154, G__21155, G__21156, G__21157, G__21158, G__21159, G__21160) : target_fn.call(null, G__21154, G__21155, G__21156, G__21157, G__21158, G__21159, G__21160);
  };
  var G__21952__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21161 = a;
      var G__21162 = b;
      var G__21163 = c;
      var G__21164 = d;
      var G__21165 = e;
      var G__21166 = f;
      var G__21167 = g;
      var G__21168 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__21161, G__21162, G__21163, G__21164, G__21165, G__21166, G__21167, G__21168) : self__.dispatch_fn.call(null, G__21161, G__21162, G__21163, G__21164, G__21165, G__21166, G__21167, G__21168);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21169 = a;
    var G__21170 = b;
    var G__21171 = c;
    var G__21172 = d;
    var G__21173 = e;
    var G__21174 = f;
    var G__21175 = g;
    var G__21176 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__21169, G__21170, G__21171, G__21172, G__21173, G__21174, G__21175, G__21176) : target_fn.call(null, G__21169, G__21170, G__21171, G__21172, G__21173, G__21174, G__21175, G__21176);
  };
  var G__21952__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21177 = a;
      var G__21178 = b;
      var G__21179 = c;
      var G__21180 = d;
      var G__21181 = e;
      var G__21182 = f;
      var G__21183 = g;
      var G__21184 = h;
      var G__21185 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__21177, G__21178, G__21179, G__21180, G__21181, G__21182, G__21183, G__21184, G__21185) : self__.dispatch_fn.call(null, G__21177, G__21178, G__21179, G__21180, G__21181, G__21182, G__21183, G__21184, G__21185);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21186 = a;
    var G__21187 = b;
    var G__21188 = c;
    var G__21189 = d;
    var G__21190 = e;
    var G__21191 = f;
    var G__21192 = g;
    var G__21193 = h;
    var G__21194 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__21186, G__21187, G__21188, G__21189, G__21190, G__21191, G__21192, G__21193, G__21194) : target_fn.call(null, G__21186, G__21187, G__21188, G__21189, G__21190, G__21191, G__21192, G__21193, G__21194);
  };
  var G__21952__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21195 = a;
      var G__21196 = b;
      var G__21197 = c;
      var G__21198 = d;
      var G__21199 = e;
      var G__21200 = f;
      var G__21201 = g;
      var G__21202 = h;
      var G__21203 = i;
      var G__21204 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__21195, G__21196, G__21197, G__21198, G__21199, G__21200, G__21201, G__21202, G__21203, G__21204) : self__.dispatch_fn.call(null, G__21195, G__21196, G__21197, G__21198, G__21199, G__21200, G__21201, G__21202, G__21203, G__21204);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21205 = a;
    var G__21206 = b;
    var G__21207 = c;
    var G__21208 = d;
    var G__21209 = e;
    var G__21210 = f;
    var G__21211 = g;
    var G__21212 = h;
    var G__21213 = i;
    var G__21214 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__21205, G__21206, G__21207, G__21208, G__21209, G__21210, G__21211, G__21212, G__21213, G__21214) : target_fn.call(null, G__21205, G__21206, G__21207, G__21208, G__21209, G__21210, G__21211, G__21212, G__21213, G__21214);
  };
  var G__21952__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21215 = a;
      var G__21216 = b;
      var G__21217 = c;
      var G__21218 = d;
      var G__21219 = e;
      var G__21220 = f;
      var G__21221 = g;
      var G__21222 = h;
      var G__21223 = i;
      var G__21224 = j;
      var G__21225 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__21215, G__21216, G__21217, G__21218, G__21219, G__21220, G__21221, G__21222, G__21223, G__21224, G__21225) : self__.dispatch_fn.call(null, G__21215, G__21216, G__21217, G__21218, G__21219, G__21220, G__21221, G__21222, G__21223, G__21224, G__21225);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21226 = a;
    var G__21227 = b;
    var G__21228 = c;
    var G__21229 = d;
    var G__21230 = e;
    var G__21231 = f;
    var G__21232 = g;
    var G__21233 = h;
    var G__21234 = i;
    var G__21235 = j;
    var G__21236 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__21226, G__21227, G__21228, G__21229, G__21230, G__21231, G__21232, G__21233, G__21234, G__21235, G__21236) : target_fn.call(null, G__21226, G__21227, G__21228, G__21229, G__21230, G__21231, G__21232, G__21233, G__21234, G__21235, G__21236);
  };
  var G__21952__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21237 = a;
      var G__21238 = b;
      var G__21239 = c;
      var G__21240 = d;
      var G__21241 = e;
      var G__21242 = f;
      var G__21243 = g;
      var G__21244 = h;
      var G__21245 = i;
      var G__21246 = j;
      var G__21247 = k;
      var G__21248 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__21237, G__21238, G__21239, G__21240, G__21241, G__21242, G__21243, G__21244, G__21245, G__21246, G__21247, G__21248) : self__.dispatch_fn.call(null, G__21237, G__21238, G__21239, G__21240, G__21241, G__21242, G__21243, G__21244, G__21245, G__21246, G__21247, G__21248);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21249 = a;
    var G__21250 = b;
    var G__21251 = c;
    var G__21252 = d;
    var G__21253 = e;
    var G__21254 = f;
    var G__21255 = g;
    var G__21256 = h;
    var G__21257 = i;
    var G__21258 = j;
    var G__21259 = k;
    var G__21260 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__21249, G__21250, G__21251, G__21252, G__21253, G__21254, G__21255, G__21256, G__21257, G__21258, G__21259, G__21260) : target_fn.call(null, G__21249, G__21250, G__21251, G__21252, G__21253, G__21254, G__21255, G__21256, G__21257, G__21258, G__21259, G__21260);
  };
  var G__21952__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21261 = a;
      var G__21262 = b;
      var G__21263 = c;
      var G__21264 = d;
      var G__21265 = e;
      var G__21266 = f;
      var G__21267 = g;
      var G__21268 = h;
      var G__21269 = i;
      var G__21270 = j;
      var G__21271 = k;
      var G__21272 = l;
      var G__21273 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__21261, G__21262, G__21263, G__21264, G__21265, G__21266, G__21267, G__21268, G__21269, G__21270, G__21271, G__21272, G__21273) : self__.dispatch_fn.call(null, G__21261, G__21262, G__21263, G__21264, G__21265, G__21266, G__21267, G__21268, G__21269, G__21270, G__21271, G__21272, G__21273);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21274 = a;
    var G__21275 = b;
    var G__21276 = c;
    var G__21277 = d;
    var G__21278 = e;
    var G__21279 = f;
    var G__21280 = g;
    var G__21281 = h;
    var G__21282 = i;
    var G__21283 = j;
    var G__21284 = k;
    var G__21285 = l;
    var G__21286 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__21274, G__21275, G__21276, G__21277, G__21278, G__21279, G__21280, G__21281, G__21282, G__21283, G__21284, G__21285, G__21286) : target_fn.call(null, G__21274, G__21275, G__21276, G__21277, G__21278, G__21279, G__21280, G__21281, G__21282, G__21283, G__21284, G__21285, G__21286);
  };
  var G__21952__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21287 = a;
      var G__21288 = b;
      var G__21289 = c;
      var G__21290 = d;
      var G__21291 = e;
      var G__21292 = f;
      var G__21293 = g;
      var G__21294 = h;
      var G__21295 = i;
      var G__21296 = j;
      var G__21297 = k;
      var G__21298 = l;
      var G__21299 = m;
      var G__21300 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__21287, G__21288, G__21289, G__21290, G__21291, G__21292, G__21293, G__21294, G__21295, G__21296, G__21297, G__21298, G__21299, G__21300) : self__.dispatch_fn.call(null, G__21287, G__21288, G__21289, G__21290, G__21291, G__21292, G__21293, G__21294, G__21295, G__21296, G__21297, G__21298, G__21299, G__21300);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21301 = a;
    var G__21302 = b;
    var G__21303 = c;
    var G__21304 = d;
    var G__21305 = e;
    var G__21306 = f;
    var G__21307 = g;
    var G__21308 = h;
    var G__21309 = i;
    var G__21310 = j;
    var G__21311 = k;
    var G__21312 = l;
    var G__21313 = m;
    var G__21314 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__21301, G__21302, G__21303, G__21304, G__21305, G__21306, G__21307, G__21308, G__21309, G__21310, G__21311, G__21312, G__21313, G__21314) : target_fn.call(null, G__21301, G__21302, G__21303, G__21304, G__21305, G__21306, G__21307, G__21308, G__21309, G__21310, G__21311, G__21312, G__21313, G__21314);
  };
  var G__21952__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21315 = a;
      var G__21316 = b;
      var G__21317 = c;
      var G__21318 = d;
      var G__21319 = e;
      var G__21320 = f;
      var G__21321 = g;
      var G__21322 = h;
      var G__21323 = i;
      var G__21324 = j;
      var G__21325 = k;
      var G__21326 = l;
      var G__21327 = m;
      var G__21328 = n;
      var G__21329 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__21315, G__21316, G__21317, G__21318, G__21319, G__21320, G__21321, G__21322, G__21323, G__21324, G__21325, G__21326, G__21327, G__21328, G__21329) : self__.dispatch_fn.call(null, G__21315, G__21316, G__21317, G__21318, G__21319, G__21320, G__21321, G__21322, G__21323, G__21324, G__21325, G__21326, G__21327, G__21328, G__21329);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21330 = a;
    var G__21331 = b;
    var G__21332 = c;
    var G__21333 = d;
    var G__21334 = e;
    var G__21335 = f;
    var G__21336 = g;
    var G__21337 = h;
    var G__21338 = i;
    var G__21339 = j;
    var G__21340 = k;
    var G__21341 = l;
    var G__21342 = m;
    var G__21343 = n;
    var G__21344 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__21330, G__21331, G__21332, G__21333, G__21334, G__21335, G__21336, G__21337, G__21338, G__21339, G__21340, G__21341, G__21342, G__21343, G__21344) : target_fn.call(null, G__21330, G__21331, G__21332, G__21333, G__21334, G__21335, G__21336, G__21337, G__21338, G__21339, G__21340, G__21341, G__21342, G__21343, G__21344);
  };
  var G__21952__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21345 = a;
      var G__21346 = b;
      var G__21347 = c;
      var G__21348 = d;
      var G__21349 = e;
      var G__21350 = f;
      var G__21351 = g;
      var G__21352 = h;
      var G__21353 = i;
      var G__21354 = j;
      var G__21355 = k;
      var G__21356 = l;
      var G__21357 = m;
      var G__21358 = n;
      var G__21359 = o;
      var G__21360 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__21345, G__21346, G__21347, G__21348, G__21349, G__21350, G__21351, G__21352, G__21353, G__21354, G__21355, G__21356, G__21357, G__21358, G__21359, G__21360) : self__.dispatch_fn.call(null, G__21345, G__21346, G__21347, G__21348, G__21349, G__21350, G__21351, G__21352, G__21353, G__21354, G__21355, G__21356, G__21357, G__21358, G__21359, G__21360);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21361 = a;
    var G__21362 = b;
    var G__21363 = c;
    var G__21364 = d;
    var G__21365 = e;
    var G__21366 = f;
    var G__21367 = g;
    var G__21368 = h;
    var G__21369 = i;
    var G__21370 = j;
    var G__21371 = k;
    var G__21372 = l;
    var G__21373 = m;
    var G__21374 = n;
    var G__21375 = o;
    var G__21376 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__21361, G__21362, G__21363, G__21364, G__21365, G__21366, G__21367, G__21368, G__21369, G__21370, G__21371, G__21372, G__21373, G__21374, G__21375, G__21376) : target_fn.call(null, G__21361, G__21362, G__21363, G__21364, G__21365, G__21366, G__21367, G__21368, G__21369, G__21370, G__21371, G__21372, G__21373, G__21374, G__21375, G__21376);
  };
  var G__21952__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21377 = a;
      var G__21378 = b;
      var G__21379 = c;
      var G__21380 = d;
      var G__21381 = e;
      var G__21382 = f;
      var G__21383 = g;
      var G__21384 = h;
      var G__21385 = i;
      var G__21386 = j;
      var G__21387 = k;
      var G__21388 = l;
      var G__21389 = m;
      var G__21390 = n;
      var G__21391 = o;
      var G__21392 = p;
      var G__21393 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__21377, G__21378, G__21379, G__21380, G__21381, G__21382, G__21383, G__21384, G__21385, G__21386, G__21387, G__21388, G__21389, G__21390, G__21391, G__21392, G__21393) : self__.dispatch_fn.call(null, G__21377, G__21378, G__21379, G__21380, G__21381, G__21382, G__21383, G__21384, G__21385, G__21386, G__21387, G__21388, G__21389, G__21390, G__21391, G__21392, G__21393);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21394 = a;
    var G__21395 = b;
    var G__21396 = c;
    var G__21397 = d;
    var G__21398 = e;
    var G__21399 = f;
    var G__21400 = g;
    var G__21401 = h;
    var G__21402 = i;
    var G__21403 = j;
    var G__21404 = k;
    var G__21405 = l;
    var G__21406 = m;
    var G__21407 = n;
    var G__21408 = o;
    var G__21409 = p;
    var G__21410 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__21394, G__21395, G__21396, G__21397, G__21398, G__21399, G__21400, G__21401, G__21402, G__21403, G__21404, G__21405, G__21406, G__21407, G__21408, G__21409, G__21410) : target_fn.call(null, G__21394, G__21395, G__21396, G__21397, G__21398, G__21399, G__21400, G__21401, G__21402, G__21403, G__21404, G__21405, G__21406, G__21407, G__21408, G__21409, G__21410);
  };
  var G__21952__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21411 = a;
      var G__21412 = b;
      var G__21413 = c;
      var G__21414 = d;
      var G__21415 = e;
      var G__21416 = f;
      var G__21417 = g;
      var G__21418 = h;
      var G__21419 = i;
      var G__21420 = j;
      var G__21421 = k;
      var G__21422 = l;
      var G__21423 = m;
      var G__21424 = n;
      var G__21425 = o;
      var G__21426 = p;
      var G__21427 = q;
      var G__21428 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__21411, G__21412, G__21413, G__21414, G__21415, G__21416, G__21417, G__21418, G__21419, G__21420, G__21421, G__21422, G__21423, G__21424, G__21425, G__21426, G__21427, G__21428) : self__.dispatch_fn.call(null, G__21411, G__21412, G__21413, G__21414, G__21415, G__21416, G__21417, G__21418, G__21419, G__21420, G__21421, G__21422, G__21423, G__21424, G__21425, G__21426, G__21427, G__21428);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21429 = a;
    var G__21430 = b;
    var G__21431 = c;
    var G__21432 = d;
    var G__21433 = e;
    var G__21434 = f;
    var G__21435 = g;
    var G__21436 = h;
    var G__21437 = i;
    var G__21438 = j;
    var G__21439 = k;
    var G__21440 = l;
    var G__21441 = m;
    var G__21442 = n;
    var G__21443 = o;
    var G__21444 = p;
    var G__21445 = q;
    var G__21446 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__21429, G__21430, G__21431, G__21432, G__21433, G__21434, G__21435, G__21436, G__21437, G__21438, G__21439, G__21440, G__21441, G__21442, G__21443, G__21444, G__21445, G__21446) : target_fn.call(null, G__21429, G__21430, G__21431, G__21432, G__21433, G__21434, G__21435, G__21436, G__21437, G__21438, G__21439, G__21440, G__21441, G__21442, G__21443, G__21444, G__21445, G__21446);
  };
  var G__21952__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21447 = a;
      var G__21448 = b;
      var G__21449 = c;
      var G__21450 = d;
      var G__21451 = e;
      var G__21452 = f;
      var G__21453 = g;
      var G__21454 = h;
      var G__21455 = i;
      var G__21456 = j;
      var G__21457 = k;
      var G__21458 = l;
      var G__21459 = m;
      var G__21460 = n;
      var G__21461 = o;
      var G__21462 = p;
      var G__21463 = q;
      var G__21464 = r;
      var G__21465 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__21447, G__21448, G__21449, G__21450, G__21451, G__21452, G__21453, G__21454, G__21455, G__21456, G__21457, G__21458, G__21459, G__21460, G__21461, G__21462, G__21463, G__21464, G__21465) : self__.dispatch_fn.call(null, G__21447, G__21448, G__21449, G__21450, G__21451, G__21452, G__21453, G__21454, G__21455, G__21456, G__21457, G__21458, G__21459, G__21460, G__21461, G__21462, G__21463, 
      G__21464, G__21465);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21466 = a;
    var G__21467 = b;
    var G__21468 = c;
    var G__21469 = d;
    var G__21470 = e;
    var G__21471 = f;
    var G__21472 = g;
    var G__21473 = h;
    var G__21474 = i;
    var G__21475 = j;
    var G__21476 = k;
    var G__21477 = l;
    var G__21478 = m;
    var G__21479 = n;
    var G__21480 = o;
    var G__21481 = p;
    var G__21482 = q;
    var G__21483 = r;
    var G__21484 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__21466, G__21467, G__21468, G__21469, G__21470, G__21471, G__21472, G__21473, G__21474, G__21475, G__21476, G__21477, G__21478, G__21479, G__21480, G__21481, G__21482, G__21483, G__21484) : target_fn.call(null, G__21466, G__21467, G__21468, G__21469, G__21470, G__21471, G__21472, G__21473, G__21474, G__21475, G__21476, G__21477, G__21478, G__21479, G__21480, G__21481, G__21482, G__21483, G__21484);
  };
  var G__21952__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21485 = a;
      var G__21486 = b;
      var G__21487 = c;
      var G__21488 = d;
      var G__21489 = e;
      var G__21490 = f;
      var G__21491 = g;
      var G__21492 = h;
      var G__21493 = i;
      var G__21494 = j;
      var G__21495 = k;
      var G__21496 = l;
      var G__21497 = m;
      var G__21498 = n;
      var G__21499 = o;
      var G__21500 = p;
      var G__21501 = q;
      var G__21502 = r;
      var G__21503 = s;
      var G__21504 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__21485, G__21486, G__21487, G__21488, G__21489, G__21490, G__21491, G__21492, G__21493, G__21494, G__21495, G__21496, G__21497, G__21498, G__21499, G__21500, G__21501, G__21502, G__21503, G__21504) : self__.dispatch_fn.call(null, G__21485, G__21486, G__21487, G__21488, G__21489, G__21490, G__21491, G__21492, G__21493, G__21494, G__21495, G__21496, G__21497, G__21498, G__21499, G__21500, 
      G__21501, G__21502, G__21503, G__21504);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21505 = a;
    var G__21506 = b;
    var G__21507 = c;
    var G__21508 = d;
    var G__21509 = e;
    var G__21510 = f;
    var G__21511 = g;
    var G__21512 = h;
    var G__21513 = i;
    var G__21514 = j;
    var G__21515 = k;
    var G__21516 = l;
    var G__21517 = m;
    var G__21518 = n;
    var G__21519 = o;
    var G__21520 = p;
    var G__21521 = q;
    var G__21522 = r;
    var G__21523 = s;
    var G__21524 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__21505, G__21506, G__21507, G__21508, G__21509, G__21510, G__21511, G__21512, G__21513, G__21514, G__21515, G__21516, G__21517, G__21518, G__21519, G__21520, G__21521, G__21522, G__21523, G__21524) : target_fn.call(null, G__21505, G__21506, G__21507, G__21508, G__21509, G__21510, G__21511, G__21512, G__21513, G__21514, G__21515, G__21516, G__21517, G__21518, G__21519, G__21520, G__21521, G__21522, G__21523, 
    G__21524);
  };
  var G__21952__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__21952 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__21952__1.call(this, self__);
      case 2:
        return G__21952__2.call(this, self__, a);
      case 3:
        return G__21952__3.call(this, self__, a, b);
      case 4:
        return G__21952__4.call(this, self__, a, b, c);
      case 5:
        return G__21952__5.call(this, self__, a, b, c, d);
      case 6:
        return G__21952__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__21952__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__21952__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__21952__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__21952__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__21952__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__21952__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__21952__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__21952__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__21952__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__21952__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__21952__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__21952__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__21952__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__21952__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__21952__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__21952__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21952.cljs$core$IFn$_invoke$arity$1 = G__21952__1;
  G__21952.cljs$core$IFn$_invoke$arity$2 = G__21952__2;
  G__21952.cljs$core$IFn$_invoke$arity$3 = G__21952__3;
  G__21952.cljs$core$IFn$_invoke$arity$4 = G__21952__4;
  G__21952.cljs$core$IFn$_invoke$arity$5 = G__21952__5;
  G__21952.cljs$core$IFn$_invoke$arity$6 = G__21952__6;
  G__21952.cljs$core$IFn$_invoke$arity$7 = G__21952__7;
  G__21952.cljs$core$IFn$_invoke$arity$8 = G__21952__8;
  G__21952.cljs$core$IFn$_invoke$arity$9 = G__21952__9;
  G__21952.cljs$core$IFn$_invoke$arity$10 = G__21952__10;
  G__21952.cljs$core$IFn$_invoke$arity$11 = G__21952__11;
  G__21952.cljs$core$IFn$_invoke$arity$12 = G__21952__12;
  G__21952.cljs$core$IFn$_invoke$arity$13 = G__21952__13;
  G__21952.cljs$core$IFn$_invoke$arity$14 = G__21952__14;
  G__21952.cljs$core$IFn$_invoke$arity$15 = G__21952__15;
  G__21952.cljs$core$IFn$_invoke$arity$16 = G__21952__16;
  G__21952.cljs$core$IFn$_invoke$arity$17 = G__21952__17;
  G__21952.cljs$core$IFn$_invoke$arity$18 = G__21952__18;
  G__21952.cljs$core$IFn$_invoke$arity$19 = G__21952__19;
  G__21952.cljs$core$IFn$_invoke$arity$20 = G__21952__20;
  G__21952.cljs$core$IFn$_invoke$arity$21 = G__21952__21;
  G__21952.cljs$core$IFn$_invoke$arity$22 = G__21952__22;
  return G__21952;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args21104) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21104)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21525 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__21525) : self__.dispatch_fn.call(null, G__21525);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21526 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__21526) : target_fn.call(null, G__21526);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21527 = a;
    var G__21528 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__21527, G__21528) : self__.dispatch_fn.call(null, G__21527, G__21528);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21529 = a;
  var G__21530 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__21529, G__21530) : target_fn.call(null, G__21529, G__21530);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21531 = a;
    var G__21532 = b;
    var G__21533 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__21531, G__21532, G__21533) : self__.dispatch_fn.call(null, G__21531, G__21532, G__21533);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21534 = a;
  var G__21535 = b;
  var G__21536 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__21534, G__21535, G__21536) : target_fn.call(null, G__21534, G__21535, G__21536);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21537 = a;
    var G__21538 = b;
    var G__21539 = c;
    var G__21540 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__21537, G__21538, G__21539, G__21540) : self__.dispatch_fn.call(null, G__21537, G__21538, G__21539, G__21540);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21541 = a;
  var G__21542 = b;
  var G__21543 = c;
  var G__21544 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__21541, G__21542, G__21543, G__21544) : target_fn.call(null, G__21541, G__21542, G__21543, G__21544);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21545 = a;
    var G__21546 = b;
    var G__21547 = c;
    var G__21548 = d;
    var G__21549 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__21545, G__21546, G__21547, G__21548, G__21549) : self__.dispatch_fn.call(null, G__21545, G__21546, G__21547, G__21548, G__21549);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21550 = a;
  var G__21551 = b;
  var G__21552 = c;
  var G__21553 = d;
  var G__21554 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__21550, G__21551, G__21552, G__21553, G__21554) : target_fn.call(null, G__21550, G__21551, G__21552, G__21553, G__21554);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21555 = a;
    var G__21556 = b;
    var G__21557 = c;
    var G__21558 = d;
    var G__21559 = e;
    var G__21560 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__21555, G__21556, G__21557, G__21558, G__21559, G__21560) : self__.dispatch_fn.call(null, G__21555, G__21556, G__21557, G__21558, G__21559, G__21560);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21561 = a;
  var G__21562 = b;
  var G__21563 = c;
  var G__21564 = d;
  var G__21565 = e;
  var G__21566 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__21561, G__21562, G__21563, G__21564, G__21565, G__21566) : target_fn.call(null, G__21561, G__21562, G__21563, G__21564, G__21565, G__21566);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21567 = a;
    var G__21568 = b;
    var G__21569 = c;
    var G__21570 = d;
    var G__21571 = e;
    var G__21572 = f;
    var G__21573 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__21567, G__21568, G__21569, G__21570, G__21571, G__21572, G__21573) : self__.dispatch_fn.call(null, G__21567, G__21568, G__21569, G__21570, G__21571, G__21572, G__21573);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21574 = a;
  var G__21575 = b;
  var G__21576 = c;
  var G__21577 = d;
  var G__21578 = e;
  var G__21579 = f;
  var G__21580 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__21574, G__21575, G__21576, G__21577, G__21578, G__21579, G__21580) : target_fn.call(null, G__21574, G__21575, G__21576, G__21577, G__21578, G__21579, G__21580);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21581 = a;
    var G__21582 = b;
    var G__21583 = c;
    var G__21584 = d;
    var G__21585 = e;
    var G__21586 = f;
    var G__21587 = g;
    var G__21588 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__21581, G__21582, G__21583, G__21584, G__21585, G__21586, G__21587, G__21588) : self__.dispatch_fn.call(null, G__21581, G__21582, G__21583, G__21584, G__21585, G__21586, G__21587, G__21588);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21589 = a;
  var G__21590 = b;
  var G__21591 = c;
  var G__21592 = d;
  var G__21593 = e;
  var G__21594 = f;
  var G__21595 = g;
  var G__21596 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__21589, G__21590, G__21591, G__21592, G__21593, G__21594, G__21595, G__21596) : target_fn.call(null, G__21589, G__21590, G__21591, G__21592, G__21593, G__21594, G__21595, G__21596);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21597 = a;
    var G__21598 = b;
    var G__21599 = c;
    var G__21600 = d;
    var G__21601 = e;
    var G__21602 = f;
    var G__21603 = g;
    var G__21604 = h;
    var G__21605 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__21597, G__21598, G__21599, G__21600, G__21601, G__21602, G__21603, G__21604, G__21605) : self__.dispatch_fn.call(null, G__21597, G__21598, G__21599, G__21600, G__21601, G__21602, G__21603, G__21604, G__21605);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21606 = a;
  var G__21607 = b;
  var G__21608 = c;
  var G__21609 = d;
  var G__21610 = e;
  var G__21611 = f;
  var G__21612 = g;
  var G__21613 = h;
  var G__21614 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__21606, G__21607, G__21608, G__21609, G__21610, G__21611, G__21612, G__21613, G__21614) : target_fn.call(null, G__21606, G__21607, G__21608, G__21609, G__21610, G__21611, G__21612, G__21613, G__21614);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21615 = a;
    var G__21616 = b;
    var G__21617 = c;
    var G__21618 = d;
    var G__21619 = e;
    var G__21620 = f;
    var G__21621 = g;
    var G__21622 = h;
    var G__21623 = i;
    var G__21624 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__21615, G__21616, G__21617, G__21618, G__21619, G__21620, G__21621, G__21622, G__21623, G__21624) : self__.dispatch_fn.call(null, G__21615, G__21616, G__21617, G__21618, G__21619, G__21620, G__21621, G__21622, G__21623, G__21624);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21625 = a;
  var G__21626 = b;
  var G__21627 = c;
  var G__21628 = d;
  var G__21629 = e;
  var G__21630 = f;
  var G__21631 = g;
  var G__21632 = h;
  var G__21633 = i;
  var G__21634 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__21625, G__21626, G__21627, G__21628, G__21629, G__21630, G__21631, G__21632, G__21633, G__21634) : target_fn.call(null, G__21625, G__21626, G__21627, G__21628, G__21629, G__21630, G__21631, G__21632, G__21633, G__21634);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21635 = a;
    var G__21636 = b;
    var G__21637 = c;
    var G__21638 = d;
    var G__21639 = e;
    var G__21640 = f;
    var G__21641 = g;
    var G__21642 = h;
    var G__21643 = i;
    var G__21644 = j;
    var G__21645 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__21635, G__21636, G__21637, G__21638, G__21639, G__21640, G__21641, G__21642, G__21643, G__21644, G__21645) : self__.dispatch_fn.call(null, G__21635, G__21636, G__21637, G__21638, G__21639, G__21640, G__21641, G__21642, G__21643, G__21644, G__21645);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21646 = a;
  var G__21647 = b;
  var G__21648 = c;
  var G__21649 = d;
  var G__21650 = e;
  var G__21651 = f;
  var G__21652 = g;
  var G__21653 = h;
  var G__21654 = i;
  var G__21655 = j;
  var G__21656 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__21646, G__21647, G__21648, G__21649, G__21650, G__21651, G__21652, G__21653, G__21654, G__21655, G__21656) : target_fn.call(null, G__21646, G__21647, G__21648, G__21649, G__21650, G__21651, G__21652, G__21653, G__21654, G__21655, G__21656);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21657 = a;
    var G__21658 = b;
    var G__21659 = c;
    var G__21660 = d;
    var G__21661 = e;
    var G__21662 = f;
    var G__21663 = g;
    var G__21664 = h;
    var G__21665 = i;
    var G__21666 = j;
    var G__21667 = k;
    var G__21668 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__21657, G__21658, G__21659, G__21660, G__21661, G__21662, G__21663, G__21664, G__21665, G__21666, G__21667, G__21668) : self__.dispatch_fn.call(null, G__21657, G__21658, G__21659, G__21660, G__21661, G__21662, G__21663, G__21664, G__21665, G__21666, G__21667, G__21668);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21669 = a;
  var G__21670 = b;
  var G__21671 = c;
  var G__21672 = d;
  var G__21673 = e;
  var G__21674 = f;
  var G__21675 = g;
  var G__21676 = h;
  var G__21677 = i;
  var G__21678 = j;
  var G__21679 = k;
  var G__21680 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__21669, G__21670, G__21671, G__21672, G__21673, G__21674, G__21675, G__21676, G__21677, G__21678, G__21679, G__21680) : target_fn.call(null, G__21669, G__21670, G__21671, G__21672, G__21673, G__21674, G__21675, G__21676, G__21677, G__21678, G__21679, G__21680);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21681 = a;
    var G__21682 = b;
    var G__21683 = c;
    var G__21684 = d;
    var G__21685 = e;
    var G__21686 = f;
    var G__21687 = g;
    var G__21688 = h;
    var G__21689 = i;
    var G__21690 = j;
    var G__21691 = k;
    var G__21692 = l;
    var G__21693 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__21681, G__21682, G__21683, G__21684, G__21685, G__21686, G__21687, G__21688, G__21689, G__21690, G__21691, G__21692, G__21693) : self__.dispatch_fn.call(null, G__21681, G__21682, G__21683, G__21684, G__21685, G__21686, G__21687, G__21688, G__21689, G__21690, G__21691, G__21692, G__21693);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21694 = a;
  var G__21695 = b;
  var G__21696 = c;
  var G__21697 = d;
  var G__21698 = e;
  var G__21699 = f;
  var G__21700 = g;
  var G__21701 = h;
  var G__21702 = i;
  var G__21703 = j;
  var G__21704 = k;
  var G__21705 = l;
  var G__21706 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__21694, G__21695, G__21696, G__21697, G__21698, G__21699, G__21700, G__21701, G__21702, G__21703, G__21704, G__21705, G__21706) : target_fn.call(null, G__21694, G__21695, G__21696, G__21697, G__21698, G__21699, G__21700, G__21701, G__21702, G__21703, G__21704, G__21705, G__21706);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21707 = a;
    var G__21708 = b;
    var G__21709 = c;
    var G__21710 = d;
    var G__21711 = e;
    var G__21712 = f;
    var G__21713 = g;
    var G__21714 = h;
    var G__21715 = i;
    var G__21716 = j;
    var G__21717 = k;
    var G__21718 = l;
    var G__21719 = m;
    var G__21720 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__21707, G__21708, G__21709, G__21710, G__21711, G__21712, G__21713, G__21714, G__21715, G__21716, G__21717, G__21718, G__21719, G__21720) : self__.dispatch_fn.call(null, G__21707, G__21708, G__21709, G__21710, G__21711, G__21712, G__21713, G__21714, G__21715, G__21716, G__21717, G__21718, G__21719, G__21720);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21721 = a;
  var G__21722 = b;
  var G__21723 = c;
  var G__21724 = d;
  var G__21725 = e;
  var G__21726 = f;
  var G__21727 = g;
  var G__21728 = h;
  var G__21729 = i;
  var G__21730 = j;
  var G__21731 = k;
  var G__21732 = l;
  var G__21733 = m;
  var G__21734 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__21721, G__21722, G__21723, G__21724, G__21725, G__21726, G__21727, G__21728, G__21729, G__21730, G__21731, G__21732, G__21733, G__21734) : target_fn.call(null, G__21721, G__21722, G__21723, G__21724, G__21725, G__21726, G__21727, G__21728, G__21729, G__21730, G__21731, G__21732, G__21733, G__21734);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21735 = a;
    var G__21736 = b;
    var G__21737 = c;
    var G__21738 = d;
    var G__21739 = e;
    var G__21740 = f;
    var G__21741 = g;
    var G__21742 = h;
    var G__21743 = i;
    var G__21744 = j;
    var G__21745 = k;
    var G__21746 = l;
    var G__21747 = m;
    var G__21748 = n;
    var G__21749 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__21735, G__21736, G__21737, G__21738, G__21739, G__21740, G__21741, G__21742, G__21743, G__21744, G__21745, G__21746, G__21747, G__21748, G__21749) : self__.dispatch_fn.call(null, G__21735, G__21736, G__21737, G__21738, G__21739, G__21740, G__21741, G__21742, G__21743, G__21744, G__21745, G__21746, G__21747, G__21748, G__21749);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21750 = a;
  var G__21751 = b;
  var G__21752 = c;
  var G__21753 = d;
  var G__21754 = e;
  var G__21755 = f;
  var G__21756 = g;
  var G__21757 = h;
  var G__21758 = i;
  var G__21759 = j;
  var G__21760 = k;
  var G__21761 = l;
  var G__21762 = m;
  var G__21763 = n;
  var G__21764 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__21750, G__21751, G__21752, G__21753, G__21754, G__21755, G__21756, G__21757, G__21758, G__21759, G__21760, G__21761, G__21762, G__21763, G__21764) : target_fn.call(null, G__21750, G__21751, G__21752, G__21753, G__21754, G__21755, G__21756, G__21757, G__21758, G__21759, G__21760, G__21761, G__21762, G__21763, G__21764);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21765 = a;
    var G__21766 = b;
    var G__21767 = c;
    var G__21768 = d;
    var G__21769 = e;
    var G__21770 = f;
    var G__21771 = g;
    var G__21772 = h;
    var G__21773 = i;
    var G__21774 = j;
    var G__21775 = k;
    var G__21776 = l;
    var G__21777 = m;
    var G__21778 = n;
    var G__21779 = o;
    var G__21780 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__21765, G__21766, G__21767, G__21768, G__21769, G__21770, G__21771, G__21772, G__21773, G__21774, G__21775, G__21776, G__21777, G__21778, G__21779, G__21780) : self__.dispatch_fn.call(null, G__21765, G__21766, G__21767, G__21768, G__21769, G__21770, G__21771, G__21772, G__21773, G__21774, G__21775, G__21776, G__21777, G__21778, G__21779, G__21780);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21781 = a;
  var G__21782 = b;
  var G__21783 = c;
  var G__21784 = d;
  var G__21785 = e;
  var G__21786 = f;
  var G__21787 = g;
  var G__21788 = h;
  var G__21789 = i;
  var G__21790 = j;
  var G__21791 = k;
  var G__21792 = l;
  var G__21793 = m;
  var G__21794 = n;
  var G__21795 = o;
  var G__21796 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__21781, G__21782, G__21783, G__21784, G__21785, G__21786, G__21787, G__21788, G__21789, G__21790, G__21791, G__21792, G__21793, G__21794, G__21795, G__21796) : target_fn.call(null, G__21781, G__21782, G__21783, G__21784, G__21785, G__21786, G__21787, G__21788, G__21789, G__21790, G__21791, G__21792, G__21793, G__21794, G__21795, G__21796);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21797 = a;
    var G__21798 = b;
    var G__21799 = c;
    var G__21800 = d;
    var G__21801 = e;
    var G__21802 = f;
    var G__21803 = g;
    var G__21804 = h;
    var G__21805 = i;
    var G__21806 = j;
    var G__21807 = k;
    var G__21808 = l;
    var G__21809 = m;
    var G__21810 = n;
    var G__21811 = o;
    var G__21812 = p;
    var G__21813 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__21797, G__21798, G__21799, G__21800, G__21801, G__21802, G__21803, G__21804, G__21805, G__21806, G__21807, G__21808, G__21809, G__21810, G__21811, G__21812, G__21813) : self__.dispatch_fn.call(null, G__21797, G__21798, G__21799, G__21800, G__21801, G__21802, G__21803, G__21804, G__21805, G__21806, G__21807, G__21808, G__21809, G__21810, G__21811, G__21812, G__21813);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21814 = a;
  var G__21815 = b;
  var G__21816 = c;
  var G__21817 = d;
  var G__21818 = e;
  var G__21819 = f;
  var G__21820 = g;
  var G__21821 = h;
  var G__21822 = i;
  var G__21823 = j;
  var G__21824 = k;
  var G__21825 = l;
  var G__21826 = m;
  var G__21827 = n;
  var G__21828 = o;
  var G__21829 = p;
  var G__21830 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__21814, G__21815, G__21816, G__21817, G__21818, G__21819, G__21820, G__21821, G__21822, G__21823, G__21824, G__21825, G__21826, G__21827, G__21828, G__21829, G__21830) : target_fn.call(null, G__21814, G__21815, G__21816, G__21817, G__21818, G__21819, G__21820, G__21821, G__21822, G__21823, G__21824, G__21825, G__21826, G__21827, G__21828, G__21829, G__21830);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21831 = a;
    var G__21832 = b;
    var G__21833 = c;
    var G__21834 = d;
    var G__21835 = e;
    var G__21836 = f;
    var G__21837 = g;
    var G__21838 = h;
    var G__21839 = i;
    var G__21840 = j;
    var G__21841 = k;
    var G__21842 = l;
    var G__21843 = m;
    var G__21844 = n;
    var G__21845 = o;
    var G__21846 = p;
    var G__21847 = q;
    var G__21848 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__21831, G__21832, G__21833, G__21834, G__21835, G__21836, G__21837, G__21838, G__21839, G__21840, G__21841, G__21842, G__21843, G__21844, G__21845, G__21846, G__21847, G__21848) : self__.dispatch_fn.call(null, G__21831, G__21832, G__21833, G__21834, G__21835, G__21836, G__21837, G__21838, G__21839, G__21840, G__21841, G__21842, G__21843, G__21844, G__21845, G__21846, G__21847, G__21848);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21849 = a;
  var G__21850 = b;
  var G__21851 = c;
  var G__21852 = d;
  var G__21853 = e;
  var G__21854 = f;
  var G__21855 = g;
  var G__21856 = h;
  var G__21857 = i;
  var G__21858 = j;
  var G__21859 = k;
  var G__21860 = l;
  var G__21861 = m;
  var G__21862 = n;
  var G__21863 = o;
  var G__21864 = p;
  var G__21865 = q;
  var G__21866 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__21849, G__21850, G__21851, G__21852, G__21853, G__21854, G__21855, G__21856, G__21857, G__21858, G__21859, G__21860, G__21861, G__21862, G__21863, G__21864, G__21865, G__21866) : target_fn.call(null, G__21849, G__21850, G__21851, G__21852, G__21853, G__21854, G__21855, G__21856, G__21857, G__21858, G__21859, G__21860, G__21861, G__21862, G__21863, G__21864, G__21865, G__21866);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21867 = a;
    var G__21868 = b;
    var G__21869 = c;
    var G__21870 = d;
    var G__21871 = e;
    var G__21872 = f;
    var G__21873 = g;
    var G__21874 = h;
    var G__21875 = i;
    var G__21876 = j;
    var G__21877 = k;
    var G__21878 = l;
    var G__21879 = m;
    var G__21880 = n;
    var G__21881 = o;
    var G__21882 = p;
    var G__21883 = q;
    var G__21884 = r;
    var G__21885 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__21867, G__21868, G__21869, G__21870, G__21871, G__21872, G__21873, G__21874, G__21875, G__21876, G__21877, G__21878, G__21879, G__21880, G__21881, G__21882, G__21883, G__21884, G__21885) : self__.dispatch_fn.call(null, G__21867, G__21868, G__21869, G__21870, G__21871, G__21872, G__21873, G__21874, G__21875, G__21876, G__21877, G__21878, G__21879, G__21880, G__21881, G__21882, G__21883, 
    G__21884, G__21885);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21886 = a;
  var G__21887 = b;
  var G__21888 = c;
  var G__21889 = d;
  var G__21890 = e;
  var G__21891 = f;
  var G__21892 = g;
  var G__21893 = h;
  var G__21894 = i;
  var G__21895 = j;
  var G__21896 = k;
  var G__21897 = l;
  var G__21898 = m;
  var G__21899 = n;
  var G__21900 = o;
  var G__21901 = p;
  var G__21902 = q;
  var G__21903 = r;
  var G__21904 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__21886, G__21887, G__21888, G__21889, G__21890, G__21891, G__21892, G__21893, G__21894, G__21895, G__21896, G__21897, G__21898, G__21899, G__21900, G__21901, G__21902, G__21903, G__21904) : target_fn.call(null, G__21886, G__21887, G__21888, G__21889, G__21890, G__21891, G__21892, G__21893, G__21894, G__21895, G__21896, G__21897, G__21898, G__21899, G__21900, G__21901, G__21902, G__21903, G__21904);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21905 = a;
    var G__21906 = b;
    var G__21907 = c;
    var G__21908 = d;
    var G__21909 = e;
    var G__21910 = f;
    var G__21911 = g;
    var G__21912 = h;
    var G__21913 = i;
    var G__21914 = j;
    var G__21915 = k;
    var G__21916 = l;
    var G__21917 = m;
    var G__21918 = n;
    var G__21919 = o;
    var G__21920 = p;
    var G__21921 = q;
    var G__21922 = r;
    var G__21923 = s;
    var G__21924 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__21905, G__21906, G__21907, G__21908, G__21909, G__21910, G__21911, G__21912, G__21913, G__21914, G__21915, G__21916, G__21917, G__21918, G__21919, G__21920, G__21921, G__21922, G__21923, G__21924) : self__.dispatch_fn.call(null, G__21905, G__21906, G__21907, G__21908, G__21909, G__21910, G__21911, G__21912, G__21913, G__21914, G__21915, G__21916, G__21917, G__21918, G__21919, G__21920, 
    G__21921, G__21922, G__21923, G__21924);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21925 = a;
  var G__21926 = b;
  var G__21927 = c;
  var G__21928 = d;
  var G__21929 = e;
  var G__21930 = f;
  var G__21931 = g;
  var G__21932 = h;
  var G__21933 = i;
  var G__21934 = j;
  var G__21935 = k;
  var G__21936 = l;
  var G__21937 = m;
  var G__21938 = n;
  var G__21939 = o;
  var G__21940 = p;
  var G__21941 = q;
  var G__21942 = r;
  var G__21943 = s;
  var G__21944 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__21925, G__21926, G__21927, G__21928, G__21929, G__21930, G__21931, G__21932, G__21933, G__21934, G__21935, G__21936, G__21937, G__21938, G__21939, G__21940, G__21941, G__21942, G__21943, G__21944) : target_fn.call(null, G__21925, G__21926, G__21927, G__21928, G__21929, G__21930, G__21931, G__21932, G__21933, G__21934, G__21935, G__21936, G__21937, G__21938, G__21939, G__21940, G__21941, G__21942, G__21943, 
  G__21944);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__21945 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21945) : cljs.core.deref.call(null, G__21945);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__21946 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21946) : cljs.core.deref.call(null, G__21946);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__21948 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21948) : cljs.core.deref.call(null, G__21948);
  }(), function() {
    var G__21949 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21949) : cljs.core.deref.call(null, G__21949);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4420__auto__ = function() {
    var G__21950 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21950) : cljs.core.deref.call(null, G__21950);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4420__auto__)) {
    var target_fn = temp__4420__auto__;
    return target_fn;
  } else {
    var temp__4420__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4420__auto____$1)) {
      var target_fn = temp__4420__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__21951 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21951) : cljs.core.deref.call(null, G__21951);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__21947 = this$__$1;
  return goog.getUid(G__21947);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__21953 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__21953);
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__21954 = self__.uuid;
  var G__21955 = other.uuid;
  return goog.array.defaultCompare(G__21954, G__21955);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null)], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error;
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info() {
  var G__21957 = arguments.length;
  switch(G__21957) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__21963 = x;
      var G__21964 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__21963, G__21964) : pred.call(null, G__21963, G__21964);
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(function() {
        var G__21965 = y;
        var G__21966 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__21965, G__21966) : pred.call(null, G__21965, G__21966);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 6291712;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__21967 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__21967) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
goog.provide("subpar.paredit");
goog.require("cljs.core");
subpar.paredit.code = "c";
subpar.paredit.cmmnt = ";";
subpar.paredit.string = '"';
subpar.paredit.openers = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["(", null, "[", null, "{", null], null), null);
subpar.paredit.closers = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [")", null, "]", null, "}", null], null), null);
subpar.paredit.opener_QMARK_ = function subpar$paredit$opener_QMARK_(a) {
  return cljs.core.contains_QMARK_.call(null, subpar.paredit.openers, a);
};
subpar.paredit.closer_QMARK_ = function subpar$paredit$closer_QMARK_(a) {
  return cljs.core.contains_QMARK_.call(null, subpar.paredit.closers, a);
};
subpar.paredit.whitespace_QMARK_ = function subpar$paredit$whitespace_QMARK_(x) {
  return cljs.core._EQ_.call(null, x, "\t") || cljs.core._EQ_.call(null, x, " ") || cljs.core._EQ_.call(null, x, "\n");
};
subpar.paredit.get_opening_delimiter_index_with_parse = function subpar$paredit$get_opening_delimiter_index_with_parse(p, i) {
  return cljs.core.nth.call(null, cljs.core.nth.call(null, (new cljs.core.Keyword(null, "chars", "chars", -1094630317)).cljs$core$IFn$_invoke$arity$1(p), i), 1);
};
subpar.paredit.get_closing_delimiter_index_with_parse = function subpar$paredit$get_closing_delimiter_index_with_parse(p, i) {
  return cljs.core.get_in.call(null, p, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "families", "families", 255079231), subpar.paredit.get_opening_delimiter_index_with_parse.call(null, p, i), new cljs.core.Keyword(null, "closer", "closer", 10992481)], null));
};
subpar.paredit.get_opening_delimiter_index = function subpar$paredit$get_opening_delimiter_index(s, i) {
  return subpar.paredit.get_opening_delimiter_index_with_parse.call(null, subpar.paredit.parse.call(null, s), i);
};
subpar.paredit.get_closing_delimiter_index = function subpar$paredit$get_closing_delimiter_index(s, i) {
  return subpar.paredit.get_closing_delimiter_index_with_parse.call(null, subpar.paredit.parse.call(null, s), i);
};
subpar.paredit.get_wrapper = function subpar$paredit$get_wrapper(p, i) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [subpar.paredit.get_opening_delimiter_index_with_parse.call(null, p, i), subpar.paredit.get_closing_delimiter_index_with_parse.call(null, p, i)], null);
};
subpar.paredit.get_mode = function subpar$paredit$get_mode(p, i) {
  return cljs.core.nth.call(null, cljs.core.nth.call(null, (new cljs.core.Keyword(null, "chars", "chars", -1094630317)).cljs$core$IFn$_invoke$arity$1(p), i), 0);
};
subpar.paredit.in_QMARK_ = function subpar$paredit$in_QMARK_(p, i, mode) {
  return 0 <= i && i <= cljs.core.count.call(null, (new cljs.core.Keyword(null, "chars", "chars", -1094630317)).cljs$core$IFn$_invoke$arity$1(p)) && cljs.core._EQ_.call(null, mode, subpar.paredit.get_mode.call(null, p, i));
};
subpar.paredit.in_comment_QMARK_ = function subpar$paredit$in_comment_QMARK_(p, i) {
  return subpar.paredit.in_QMARK_.call(null, p, i, subpar.paredit.cmmnt);
};
subpar.paredit.in_code_QMARK_ = function subpar$paredit$in_code_QMARK_(p, i) {
  return subpar.paredit.in_QMARK_.call(null, p, i, subpar.paredit.code);
};
subpar.paredit.in_string_QMARK_ = function subpar$paredit$in_string_QMARK_(p, i) {
  return subpar.paredit.in_QMARK_.call(null, p, i, subpar.paredit.string);
};
subpar.paredit.in_string = function subpar$paredit$in_string(s, i) {
  return subpar.paredit.in_string_QMARK_.call(null, subpar.paredit.parse.call(null, s), i);
};
subpar.paredit.n_str_QMARK_ = cljs.core.complement.call(null, subpar.paredit.in_string_QMARK_);
subpar.paredit.get_all_siblings = function subpar$paredit$get_all_siblings(i, p) {
  return cljs.core.get_in.call(null, p, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "families", "families", 255079231), subpar.paredit.get_opening_delimiter_index_with_parse.call(null, p, i), new cljs.core.Keyword(null, "children", "children", -940561982)], null));
};
subpar.paredit.get_siblings = function subpar$paredit$get_siblings(i, transform, predicate, p) {
  return cljs.core.sort.call(null, cljs.core.filter.call(null, predicate, transform.call(null, subpar.paredit.get_all_siblings.call(null, i, p))));
};
subpar.paredit.count_lines = function subpar$paredit$count_lines(s, i, j) {
  var and__4296__auto__ = i;
  if (cljs.core.truth_(and__4296__auto__)) {
    var and__4296__auto____$1 = j;
    if (cljs.core.truth_(and__4296__auto____$1)) {
      return cljs.core.count.call(null, cljs.core.filter.call(null, function(and__4296__auto____$1, and__4296__auto__) {
        return function(p1__16413_SHARP_) {
          return cljs.core._EQ_.call(null, "\n", p1__16413_SHARP_);
        };
      }(and__4296__auto____$1, and__4296__auto__), cljs.core.drop.call(null, i, cljs.core.drop_last.call(null, cljs.core.count.call(null, s) - j - 1, cljs.core.take.call(null, cljs.core.count.call(null, s), s))))) + 1;
    } else {
      return and__4296__auto____$1;
    }
  } else {
    return and__4296__auto__;
  }
};
subpar.paredit.escaped_QMARK_ = function subpar$paredit$escaped_QMARK_(s, i) {
  return cljs.core.odd_QMARK_.call(null, function() {
    var c = 0;
    var j = i - 1;
    while (true) {
      var a = cljs.core.nth.call(null, s, j, null);
      if (j < 0) {
        return c;
      } else {
        if (a == null) {
          return c;
        } else {
          if (cljs.core.not_EQ_.call(null, "\\", a)) {
            return c;
          } else {
            var G__16414 = c + 1;
            var G__16415 = j - 1;
            c = G__16414;
            j = G__16415;
            continue;
          }
        }
      }
      break;
    }
  }());
};
subpar.paredit.closes_list_QMARK_ = function subpar$paredit$closes_list_QMARK_(p, i) {
  return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([i], true), cljs.core.map.call(null, new cljs.core.Keyword(null, "closer", "closer", 10992481), cljs.core.vals.call(null, (new cljs.core.Keyword(null, "families", "families", 255079231)).cljs$core$IFn$_invoke$arity$1(p))));
};
subpar.paredit.opens_list_QMARK_ = function subpar$paredit$opens_list_QMARK_(p, i) {
  return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([i], true), cljs.core.keys.call(null, (new cljs.core.Keyword(null, "families", "families", 255079231)).cljs$core$IFn$_invoke$arity$1(p)));
};
subpar.paredit.backward_up_fn = function subpar$paredit$backward_up_fn(s, i) {
  var vec__16417 = subpar.paredit.get_wrapper.call(null, subpar.paredit.parse.call(null, s), i);
  var o = cljs.core.nth.call(null, vec__16417, 0, null);
  var c = cljs.core.nth.call(null, vec__16417, 1, null);
  if (cljs.core._EQ_.call(null, -1, o)) {
    return i;
  } else {
    return o;
  }
};
subpar.paredit.forward_delete_action = function subpar$paredit$forward_delete_action(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var h = i - 1;
  var j = i + 1;
  var c = cljs.core.nth.call(null, s, i, null);
  if (i >= cljs.core.count.call(null, s)) {
    return 0;
  } else {
    if (cljs.core.truth_(subpar.paredit.escaped_QMARK_.call(null, s, i))) {
      return 2;
    } else {
      if (cljs.core.truth_(subpar.paredit.escaped_QMARK_.call(null, s, j))) {
        return 3;
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, i], null), subpar.paredit.get_wrapper.call(null, p, i))) {
          return 2;
        } else {
          if (cljs.core.truth_(subpar.paredit.closes_list_QMARK_.call(null, p, i))) {
            return 0;
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, j], null), subpar.paredit.get_wrapper.call(null, p, j))) {
              return 3;
            } else {
              if (cljs.core.truth_(subpar.paredit.opens_list_QMARK_.call(null, p, i))) {
                return 4;
              } else {
                return 1;
              }
            }
          }
        }
      }
    }
  }
};
subpar.paredit.backward_delete_action = function subpar$paredit$backward_delete_action(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var g = i - 2;
  var h = i - 1;
  if (i <= 0) {
    return 0;
  } else {
    if (cljs.core.truth_(subpar.paredit.escaped_QMARK_.call(null, s, h))) {
      return 3;
    } else {
      if (cljs.core.truth_(subpar.paredit.escaped_QMARK_.call(null, s, i))) {
        return 2;
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [g, h], null), subpar.paredit.get_wrapper.call(null, p, h))) {
          return 3;
        } else {
          if (cljs.core.truth_(subpar.paredit.closes_list_QMARK_.call(null, p, h))) {
            return 4;
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, i], null), subpar.paredit.get_wrapper.call(null, p, i))) {
              return 2;
            } else {
              if (cljs.core.truth_(subpar.paredit.opens_list_QMARK_.call(null, p, h))) {
                return 0;
              } else {
                return 1;
              }
            }
          }
        }
      }
    }
  }
};
subpar.paredit.double_quote_action = function subpar$paredit$double_quote_action(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  if (i < 0) {
    return 0;
  } else {
    if (i >= cljs.core.count.call(null, s)) {
      return 0;
    } else {
      if (cljs.core.truth_(subpar.paredit.in_comment_QMARK_.call(null, p, i))) {
        return 3;
      } else {
        if (cljs.core.truth_(subpar.paredit.n_str_QMARK_.call(null, p, i))) {
          return 0;
        } else {
          if (cljs.core._EQ_.call(null, '"', cljs.core.nth.call(null, s, i))) {
            return 2;
          } else {
            return 1;
          }
        }
      }
    }
  }
};
subpar.paredit.close_expression_vals = function subpar$paredit$close_expression_vals(p, i) {
  var vec__16419 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__16419, 0, null);
  var c = cljs.core.nth.call(null, vec__16419, 1, null);
  if (cljs.core._EQ_.call(null, -1, o)) {
    return cljs.core.PersistentVector.EMPTY;
  } else {
    var start = function() {
      var or__4308__auto__ = cljs.core.last.call(null, subpar.paredit.get_siblings.call(null, i, cljs.core.vals, cljs.core.identity, p));
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return o;
      }
    }() + 1;
    var delete$ = cljs.core.not_EQ_.call(null, start, c);
    var dest = delete$ ? start + 1 : c + 1;
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [delete$, start, c, dest], null);
  }
};
subpar.paredit.get_start_of_next_list = function subpar$paredit$get_start_of_next_list(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var r = cljs.core.first.call(null, subpar.paredit.get_siblings.call(null, i, cljs.core.keys, function(p) {
    return function(p1__16420_SHARP_) {
      var and__4296__auto__ = p1__16420_SHARP_ >= i;
      if (and__4296__auto__) {
        return cljs.core.get_in.call(null, p, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "families", "families", 255079231), p1__16420_SHARP_], null));
      } else {
        return and__4296__auto__;
      }
    };
  }(p), p));
  if (r == null) {
    return false;
  } else {
    return r;
  }
};
subpar.paredit.forward_down_fn = function subpar$paredit$forward_down_fn(s, i) {
  var r = subpar.paredit.get_start_of_next_list.call(null, s, i);
  if (cljs.core.truth_(r)) {
    return r + 1;
  } else {
    return i;
  }
};
subpar.paredit.backward_fn = function subpar$paredit$backward_fn(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var b = cljs.core.last.call(null, subpar.paredit.get_siblings.call(null, i, cljs.core.keys, function(p) {
    return function(p1__16421_SHARP_) {
      return p1__16421_SHARP_ < i;
    };
  }(p), p));
  var o = subpar.paredit.get_opening_delimiter_index_with_parse.call(null, p, i);
  var or__4308__auto__ = b;
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    if (o < 0) {
      return 0;
    } else {
      return o;
    }
  }
};
subpar.paredit.backward_down_fn = function subpar$paredit$backward_down_fn(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var b = cljs.core.last.call(null, subpar.paredit.get_siblings.call(null, i, cljs.core.vals, function(p) {
    return function(p1__16422_SHARP_) {
      var and__4296__auto__ = p1__16422_SHARP_ < i;
      if (and__4296__auto__) {
        return subpar.paredit.closes_list_QMARK_.call(null, p, p1__16422_SHARP_);
      } else {
        return and__4296__auto__;
      }
    };
  }(p), p));
  var or__4308__auto__ = b;
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    return i;
  }
};
subpar.paredit.forward_up_fn = function subpar$paredit$forward_up_fn(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__16424 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__16424, 0, null);
  var c = cljs.core.nth.call(null, vec__16424, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  if (in_list) {
    return c + 1;
  } else {
    return i;
  }
};
subpar.paredit.forward_fn = function subpar$paredit$forward_fn(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var b = cljs.core.first.call(null, subpar.paredit.get_siblings.call(null, i, cljs.core.vals, function(p) {
    return function(p1__16425_SHARP_) {
      return p1__16425_SHARP_ >= i;
    };
  }(p), p));
  var c = subpar.paredit.get_closing_delimiter_index_with_parse.call(null, p, i);
  var l = cljs.core.count.call(null, s);
  if (cljs.core.truth_(b)) {
    return b + 1;
  } else {
    if (cljs.core.truth_(c)) {
      var x__4627__auto__ = c + 1;
      var y__4628__auto__ = l;
      return x__4627__auto__ < y__4628__auto__ ? x__4627__auto__ : y__4628__auto__;
    } else {
      return l;
    }
  }
};
subpar.paredit.forward_slurp_vals = function subpar$paredit$forward_slurp_vals(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__16428 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__16428, 0, null);
  var c = cljs.core.nth.call(null, vec__16428, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  var a = function() {
    var and__4296__auto__ = in_list;
    if (and__4296__auto__) {
      return cljs.core.nth.call(null, s, c, false);
    } else {
      return and__4296__auto__;
    }
  }();
  var d = function() {
    var and__4296__auto__ = in_list;
    if (and__4296__auto__) {
      return cljs.core.first.call(null, subpar.paredit.get_siblings.call(null, o, cljs.core.vals, function(and__4296__auto__, p, vec__16428, o, c, in_list, a) {
        return function(p1__16426_SHARP_) {
          return p1__16426_SHARP_ > c;
        };
      }(and__4296__auto__, p, vec__16428, o, c, in_list, a), p));
    } else {
      return and__4296__auto__;
    }
  }();
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = a;
    if (cljs.core.truth_(and__4296__auto__)) {
      var and__4296__auto____$1 = c;
      if (cljs.core.truth_(and__4296__auto____$1)) {
        return d;
      } else {
        return and__4296__auto____$1;
      }
    } else {
      return and__4296__auto__;
    }
  }())) {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, c, d + 1, subpar.paredit.count_lines.call(null, s, o, d + 1)], null);
  } else {
    return cljs.core.PersistentVector.EMPTY;
  }
};
subpar.paredit.backward_slurp_vals = function subpar$paredit$backward_slurp_vals(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__16431 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__16431, 0, null);
  var c = cljs.core.nth.call(null, vec__16431, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  var d = function() {
    var and__4296__auto__ = in_list;
    if (and__4296__auto__) {
      return cljs.core.last.call(null, subpar.paredit.get_siblings.call(null, o, cljs.core.keys, function(and__4296__auto__, p, vec__16431, o, c, in_list) {
        return function(p1__16429_SHARP_) {
          return p1__16429_SHARP_ < o;
        };
      }(and__4296__auto__, p, vec__16431, o, c, in_list), p));
    } else {
      return and__4296__auto__;
    }
  }();
  var a = function() {
    var and__4296__auto__ = in_list;
    if (and__4296__auto__) {
      return cljs.core.nth.call(null, s, o, false);
    } else {
      return and__4296__auto__;
    }
  }();
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = a;
    if (cljs.core.truth_(and__4296__auto__)) {
      return d;
    } else {
      return and__4296__auto__;
    }
  }())) {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, o, d, subpar.paredit.count_lines.call(null, s, d, c)], null);
  } else {
    return cljs.core.PersistentVector.EMPTY;
  }
};
subpar.paredit.forward_barf_vals = function subpar$paredit$forward_barf_vals(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__16433 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__16433, 0, null);
  var c = cljs.core.nth.call(null, vec__16433, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  var endings = function() {
    var and__4296__auto__ = in_list;
    if (and__4296__auto__) {
      return subpar.paredit.get_siblings.call(null, i, cljs.core.vals, cljs.core.constantly.call(null, true), p);
    } else {
      return and__4296__auto__;
    }
  }();
  var a = function() {
    var and__4296__auto__ = c;
    if (cljs.core.truth_(and__4296__auto__)) {
      var and__4296__auto____$1 = in_list;
      if (and__4296__auto____$1) {
        return cljs.core.nth.call(null, s, c, null);
      } else {
        return and__4296__auto____$1;
      }
    } else {
      return and__4296__auto__;
    }
  }();
  var r = function() {
    var or__4308__auto__ = subpar.paredit.count_lines.call(null, s, o, c);
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return 1;
    }
  }();
  var num = cljs.core.truth_(endings) ? cljs.core.count.call(null, endings) : 0;
  if (num > 1) {
    return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, c, cljs.core.nth.call(null, endings, num - 2) + 1, false, r, o], null);
  } else {
    if (cljs.core._EQ_.call(null, num, 1)) {
      return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, c, o + 1, true, r, o], null);
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }
};
subpar.paredit.backward_barf_vals = function subpar$paredit$backward_barf_vals(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__16435 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__16435, 0, null);
  var c = cljs.core.nth.call(null, vec__16435, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  var starts = function() {
    var and__4296__auto__ = in_list;
    if (and__4296__auto__) {
      return subpar.paredit.get_siblings.call(null, i, cljs.core.keys, cljs.core.constantly.call(null, true), p);
    } else {
      return and__4296__auto__;
    }
  }();
  var a = function() {
    var and__4296__auto__ = o;
    if (cljs.core.truth_(and__4296__auto__)) {
      var and__4296__auto____$1 = in_list;
      if (and__4296__auto____$1) {
        return cljs.core.nth.call(null, s, o, null);
      } else {
        return and__4296__auto____$1;
      }
    } else {
      return and__4296__auto__;
    }
  }();
  var r = function() {
    var or__4308__auto__ = subpar.paredit.count_lines.call(null, s, o, c);
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return 1;
    }
  }();
  var num = cljs.core.truth_(starts) ? cljs.core.count.call(null, starts) : 0;
  if (num > 1) {
    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, o, cljs.core.second.call(null, starts), false, r], null);
  } else {
    if (cljs.core._EQ_.call(null, num, 1)) {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, o, c, true, r], null);
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }
};
subpar.paredit.splice_vals = function subpar$paredit$splice_vals(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__16438 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__16438, 0, null);
  var c = cljs.core.nth.call(null, vec__16438, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  if (in_list) {
    var vec__16439 = subpar.paredit.get_wrapper.call(null, p, o);
    var n = cljs.core.nth.call(null, vec__16439, 0, null);
    var d = cljs.core.nth.call(null, vec__16439, 1, null);
    var r = subpar.paredit.count_lines.call(null, s, n, d);
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, c, function() {
      var x__4620__auto__ = 0;
      var y__4621__auto__ = n;
      return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
    }(), r], null);
  } else {
    return cljs.core.PersistentVector.EMPTY;
  }
};
subpar.paredit.splice_delete_backward_vals = function subpar$paredit$splice_delete_backward_vals(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__16442 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__16442, 0, null);
  var c = cljs.core.nth.call(null, vec__16442, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  if (in_list) {
    var vec__16443 = subpar.paredit.get_wrapper.call(null, p, o);
    var n = cljs.core.nth.call(null, vec__16443, 0, null);
    var d = cljs.core.nth.call(null, vec__16443, 1, null);
    var r = subpar.paredit.count_lines.call(null, s, n, d);
    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, function() {
      var x__4620__auto__ = o;
      var y__4621__auto__ = i;
      return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
    }(), c, function() {
      var x__4620__auto__ = 0;
      var y__4621__auto__ = n;
      return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
    }(), r], null);
  } else {
    return cljs.core.PersistentVector.EMPTY;
  }
};
subpar.paredit.splice_delete_forward_vals = function subpar$paredit$splice_delete_forward_vals(s, i) {
  var p = subpar.paredit.parse.call(null, s);
  var vec__16446 = subpar.paredit.get_wrapper.call(null, p, i);
  var o = cljs.core.nth.call(null, vec__16446, 0, null);
  var c = cljs.core.nth.call(null, vec__16446, 1, null);
  var in_list = cljs.core.not_EQ_.call(null, -1, o);
  if (in_list) {
    var vec__16447 = subpar.paredit.get_wrapper.call(null, p, o);
    var n = cljs.core.nth.call(null, vec__16447, 0, null);
    var d = cljs.core.nth.call(null, vec__16447, 1, null);
    var r = subpar.paredit.count_lines.call(null, s, n, d);
    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, i, c + 1, function() {
      var x__4620__auto__ = 0;
      var y__4621__auto__ = n;
      return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
    }(), r], null);
  } else {
    return cljs.core.PersistentVector.EMPTY;
  }
};
subpar.paredit.parse = function subpar$paredit$parse(ss) {
  var s = [cljs.core.str(ss), cljs.core.str(" ")].join("");
  var i = 0;
  var mode = subpar.paredit.code;
  var openings = cljs.core._conj.call(null, cljs.core.List.EMPTY, -1);
  var start = -1;
  var t = cljs.core.PersistentVector.EMPTY;
  var families = new cljs.core.PersistentArrayMap(null, 1, [-1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "children", "children", -940561982), cljs.core.PersistentArrayMap.EMPTY], null)], null);
  var escaping = false;
  var in_word = false;
  while (true) {
    var a = cljs.core.nth.call(null, s, i, null);
    var j = i + 1;
    var o = cljs.core.peek.call(null, openings);
    if (a == null && in_word) {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "chars", "chars", -1094630317), t, new cljs.core.Keyword(null, "families", "families", 255079231), cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, new cljs.core.Keyword(null, "closer", "closer", 10992481)], null), i - 1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 
      new cljs.core.Keyword(null, "children", "children", -940561982), start], null), i - 1)], null);
    } else {
      if (a == null) {
        return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "chars", "chars", -1094630317), t, new cljs.core.Keyword(null, "families", "families", 255079231), cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, new cljs.core.Keyword(null, "closer", "closer", 10992481)], null), i - 1)], null);
      } else {
        if (cljs.core.not_EQ_.call(null, subpar.paredit.cmmnt, mode) && cljs.core._EQ_.call(null, "\\", a) && !escaping && !in_word) {
          var G__16448 = j;
          var G__16449 = mode;
          var G__16450 = openings;
          var G__16451 = i;
          var G__16452 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
          var G__16453 = cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), i], null), j);
          var G__16454 = true;
          var G__16455 = true;
          i = G__16448;
          mode = G__16449;
          openings = G__16450;
          start = G__16451;
          t = G__16452;
          families = G__16453;
          escaping = G__16454;
          in_word = G__16455;
          continue;
        } else {
          if (cljs.core.not_EQ_.call(null, subpar.paredit.cmmnt, mode) && cljs.core._EQ_.call(null, "\\", a) && !escaping) {
            var G__16456 = j;
            var G__16457 = mode;
            var G__16458 = openings;
            var G__16459 = i;
            var G__16460 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
            var G__16461 = families;
            var G__16462 = true;
            var G__16463 = true;
            i = G__16456;
            mode = G__16457;
            openings = G__16458;
            start = G__16459;
            t = G__16460;
            families = G__16461;
            escaping = G__16462;
            in_word = G__16463;
            continue;
          } else {
            if (cljs.core._EQ_.call(null, subpar.paredit.code, mode) && cljs.core._EQ_.call(null, ";", a) && !escaping) {
              var G__16464 = j;
              var G__16465 = subpar.paredit.cmmnt;
              var G__16466 = openings;
              var G__16467 = start;
              var G__16468 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
              var G__16469 = families;
              var G__16470 = false;
              var G__16471 = false;
              i = G__16464;
              mode = G__16465;
              openings = G__16466;
              start = G__16467;
              t = G__16468;
              families = G__16469;
              escaping = G__16470;
              in_word = G__16471;
              continue;
            } else {
              if (cljs.core._EQ_.call(null, subpar.paredit.cmmnt, mode) && cljs.core._EQ_.call(null, "\n", a)) {
                var G__16472 = j;
                var G__16473 = subpar.paredit.code;
                var G__16474 = openings;
                var G__16475 = start;
                var G__16476 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                var G__16477 = families;
                var G__16478 = false;
                var G__16479 = false;
                i = G__16472;
                mode = G__16473;
                openings = G__16474;
                start = G__16475;
                t = G__16476;
                families = G__16477;
                escaping = G__16478;
                in_word = G__16479;
                continue;
              } else {
                if (cljs.core._EQ_.call(null, subpar.paredit.cmmnt, mode)) {
                  var G__16480 = j;
                  var G__16481 = subpar.paredit.cmmnt;
                  var G__16482 = openings;
                  var G__16483 = start;
                  var G__16484 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                  var G__16485 = families;
                  var G__16486 = false;
                  var G__16487 = false;
                  i = G__16480;
                  mode = G__16481;
                  openings = G__16482;
                  start = G__16483;
                  t = G__16484;
                  families = G__16485;
                  escaping = G__16486;
                  in_word = G__16487;
                  continue;
                } else {
                  if (cljs.core._EQ_.call(null, subpar.paredit.code, mode) && cljs.core._EQ_.call(null, '"', a) && !escaping) {
                    var G__16488 = j;
                    var G__16489 = subpar.paredit.string;
                    var G__16490 = cljs.core.conj.call(null, openings, i);
                    var G__16491 = -1;
                    var G__16492 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                    var G__16493 = cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, new cljs.core.Keyword(null, "children", "children", -940561982)], null), cljs.core.PersistentArrayMap.EMPTY), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), i], null), j);
                    var G__16494 = false;
                    var G__16495 = false;
                    i = G__16488;
                    mode = G__16489;
                    openings = G__16490;
                    start = G__16491;
                    t = G__16492;
                    families = G__16493;
                    escaping = G__16494;
                    in_word = G__16495;
                    continue;
                  } else {
                    if (cljs.core._EQ_.call(null, subpar.paredit.string, mode) && cljs.core._EQ_.call(null, '"', a) && !escaping && in_word) {
                      var G__16496 = j;
                      var G__16497 = subpar.paredit.code;
                      var G__16498 = cljs.core.pop.call(null, openings);
                      var G__16499 = -1;
                      var G__16500 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                      var G__16501 = cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "closer", "closer", 10992481)], null), i), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, openings), new cljs.core.Keyword(null, "children", "children", -940561982), o], null), i), new cljs.core.PersistentVector(null, 
                      3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), start], null), i - 1);
                      var G__16502 = false;
                      var G__16503 = false;
                      i = G__16496;
                      mode = G__16497;
                      openings = G__16498;
                      start = G__16499;
                      t = G__16500;
                      families = G__16501;
                      escaping = G__16502;
                      in_word = G__16503;
                      continue;
                    } else {
                      if (cljs.core._EQ_.call(null, subpar.paredit.string, mode) && cljs.core._EQ_.call(null, '"', a) && !escaping) {
                        var G__16504 = j;
                        var G__16505 = subpar.paredit.code;
                        var G__16506 = cljs.core.pop.call(null, openings);
                        var G__16507 = -1;
                        var G__16508 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                        var G__16509 = cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "closer", "closer", 10992481)], null), i), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, openings), new cljs.core.Keyword(null, "children", "children", -940561982), o], null), i);
                        var G__16510 = false;
                        var G__16511 = false;
                        i = G__16504;
                        mode = G__16505;
                        openings = G__16506;
                        start = G__16507;
                        t = G__16508;
                        families = G__16509;
                        escaping = G__16510;
                        in_word = G__16511;
                        continue;
                      } else {
                        if (cljs.core._EQ_.call(null, subpar.paredit.string, mode) && cljs.core.not.call(null, subpar.paredit.whitespace_QMARK_.call(null, a)) && !in_word) {
                          var G__16512 = j;
                          var G__16513 = subpar.paredit.string;
                          var G__16514 = openings;
                          var G__16515 = i;
                          var G__16516 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                          var G__16517 = cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), i], null), i);
                          var G__16518 = false;
                          var G__16519 = true;
                          i = G__16512;
                          mode = G__16513;
                          openings = G__16514;
                          start = G__16515;
                          t = G__16516;
                          families = G__16517;
                          escaping = G__16518;
                          in_word = G__16519;
                          continue;
                        } else {
                          if (cljs.core.truth_(function() {
                            var and__4296__auto__ = cljs.core._EQ_.call(null, subpar.paredit.string, mode);
                            if (and__4296__auto__) {
                              var and__4296__auto____$1 = subpar.paredit.whitespace_QMARK_.call(null, a);
                              if (cljs.core.truth_(and__4296__auto____$1)) {
                                return in_word;
                              } else {
                                return and__4296__auto____$1;
                              }
                            } else {
                              return and__4296__auto__;
                            }
                          }())) {
                            var G__16520 = j;
                            var G__16521 = subpar.paredit.string;
                            var G__16522 = openings;
                            var G__16523 = -1;
                            var G__16524 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                            var G__16525 = cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), start], null), i - 1);
                            var G__16526 = false;
                            var G__16527 = false;
                            i = G__16520;
                            mode = G__16521;
                            openings = G__16522;
                            start = G__16523;
                            t = G__16524;
                            families = G__16525;
                            escaping = G__16526;
                            in_word = G__16527;
                            continue;
                          } else {
                            if (cljs.core._EQ_.call(null, subpar.paredit.string, mode)) {
                              var G__16528 = j;
                              var G__16529 = subpar.paredit.string;
                              var G__16530 = openings;
                              var G__16531 = start;
                              var G__16532 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                              var G__16533 = families;
                              var G__16534 = false;
                              var G__16535 = in_word;
                              i = G__16528;
                              mode = G__16529;
                              openings = G__16530;
                              start = G__16531;
                              t = G__16532;
                              families = G__16533;
                              escaping = G__16534;
                              in_word = G__16535;
                              continue;
                            } else {
                              if (cljs.core.truth_(function() {
                                var and__4296__auto__ = subpar.paredit.opener_QMARK_.call(null, a);
                                if (cljs.core.truth_(and__4296__auto__)) {
                                  return in_word;
                                } else {
                                  return and__4296__auto__;
                                }
                              }())) {
                                var G__16536 = j;
                                var G__16537 = subpar.paredit.code;
                                var G__16538 = cljs.core.conj.call(null, openings, i);
                                var G__16539 = -1;
                                var G__16540 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                var G__16541 = cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), start], null), i - 1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), i], null), i), new cljs.core.PersistentVector(null, 
                                2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, new cljs.core.Keyword(null, "children", "children", -940561982)], null), cljs.core.PersistentArrayMap.EMPTY);
                                var G__16542 = false;
                                var G__16543 = false;
                                i = G__16536;
                                mode = G__16537;
                                openings = G__16538;
                                start = G__16539;
                                t = G__16540;
                                families = G__16541;
                                escaping = G__16542;
                                in_word = G__16543;
                                continue;
                              } else {
                                if (cljs.core.truth_(subpar.paredit.opener_QMARK_.call(null, a))) {
                                  var G__16544 = j;
                                  var G__16545 = subpar.paredit.code;
                                  var G__16546 = cljs.core.conj.call(null, openings, i);
                                  var G__16547 = -1;
                                  var G__16548 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                  var G__16549 = cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), i], null), i), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, new cljs.core.Keyword(null, "children", "children", -940561982)], null), cljs.core.PersistentArrayMap.EMPTY);
                                  var G__16550 = false;
                                  var G__16551 = false;
                                  i = G__16544;
                                  mode = G__16545;
                                  openings = G__16546;
                                  start = G__16547;
                                  t = G__16548;
                                  families = G__16549;
                                  escaping = G__16550;
                                  in_word = G__16551;
                                  continue;
                                } else {
                                  if (cljs.core.truth_(function() {
                                    var and__4296__auto__ = subpar.paredit.closer_QMARK_.call(null, a);
                                    if (cljs.core.truth_(and__4296__auto__)) {
                                      return in_word;
                                    } else {
                                      return and__4296__auto__;
                                    }
                                  }())) {
                                    var G__16552 = j;
                                    var G__16553 = subpar.paredit.code;
                                    var G__16554 = cljs.core.pop.call(null, openings);
                                    var G__16555 = -1;
                                    var G__16556 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                    var G__16557 = cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), start], null), i - 1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "closer", "closer", 10992481)], null), i), new cljs.core.PersistentVector(null, 
                                    3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, openings), new cljs.core.Keyword(null, "children", "children", -940561982), o], null), i);
                                    var G__16558 = false;
                                    var G__16559 = false;
                                    i = G__16552;
                                    mode = G__16553;
                                    openings = G__16554;
                                    start = G__16555;
                                    t = G__16556;
                                    families = G__16557;
                                    escaping = G__16558;
                                    in_word = G__16559;
                                    continue;
                                  } else {
                                    if (cljs.core.truth_(subpar.paredit.closer_QMARK_.call(null, a))) {
                                      var G__16560 = j;
                                      var G__16561 = subpar.paredit.code;
                                      var G__16562 = cljs.core.pop.call(null, openings);
                                      var G__16563 = -1;
                                      var G__16564 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                      var G__16565 = cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "closer", "closer", 10992481)], null), i), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, openings), new cljs.core.Keyword(null, "children", "children", -940561982), o], null), i);
                                      var G__16566 = false;
                                      var G__16567 = false;
                                      i = G__16560;
                                      mode = G__16561;
                                      openings = G__16562;
                                      start = G__16563;
                                      t = G__16564;
                                      families = G__16565;
                                      escaping = G__16566;
                                      in_word = G__16567;
                                      continue;
                                    } else {
                                      if (cljs.core.not.call(null, subpar.paredit.whitespace_QMARK_.call(null, a)) && !in_word) {
                                        var G__16568 = j;
                                        var G__16569 = subpar.paredit.code;
                                        var G__16570 = openings;
                                        var G__16571 = i;
                                        var G__16572 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                        var G__16573 = cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), i], null), i);
                                        var G__16574 = false;
                                        var G__16575 = true;
                                        i = G__16568;
                                        mode = G__16569;
                                        openings = G__16570;
                                        start = G__16571;
                                        t = G__16572;
                                        families = G__16573;
                                        escaping = G__16574;
                                        in_word = G__16575;
                                        continue;
                                      } else {
                                        if (cljs.core.truth_(function() {
                                          var and__4296__auto__ = subpar.paredit.whitespace_QMARK_.call(null, a);
                                          if (cljs.core.truth_(and__4296__auto__)) {
                                            return in_word;
                                          } else {
                                            return and__4296__auto__;
                                          }
                                        }())) {
                                          var G__16576 = j;
                                          var G__16577 = subpar.paredit.code;
                                          var G__16578 = openings;
                                          var G__16579 = -1;
                                          var G__16580 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                          var G__16581 = cljs.core.assoc_in.call(null, families, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, new cljs.core.Keyword(null, "children", "children", -940561982), start], null), i - 1);
                                          var G__16582 = false;
                                          var G__16583 = false;
                                          i = G__16576;
                                          mode = G__16577;
                                          openings = G__16578;
                                          start = G__16579;
                                          t = G__16580;
                                          families = G__16581;
                                          escaping = G__16582;
                                          in_word = G__16583;
                                          continue;
                                        } else {
                                          if (cljs.core.truth_(function() {
                                            var and__4296__auto__ = subpar.paredit.whitespace_QMARK_.call(null, a);
                                            if (cljs.core.truth_(and__4296__auto__)) {
                                              return !in_word;
                                            } else {
                                              return and__4296__auto__;
                                            }
                                          }())) {
                                            var G__16584 = j;
                                            var G__16585 = subpar.paredit.code;
                                            var G__16586 = openings;
                                            var G__16587 = -1;
                                            var G__16588 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                            var G__16589 = families;
                                            var G__16590 = false;
                                            var G__16591 = false;
                                            i = G__16584;
                                            mode = G__16585;
                                            openings = G__16586;
                                            start = G__16587;
                                            t = G__16588;
                                            families = G__16589;
                                            escaping = G__16590;
                                            in_word = G__16591;
                                            continue;
                                          } else {
                                            if (cljs.core.not.call(null, subpar.paredit.whitespace_QMARK_.call(null, a)) && in_word) {
                                              var G__16592 = j;
                                              var G__16593 = subpar.paredit.code;
                                              var G__16594 = openings;
                                              var G__16595 = start;
                                              var G__16596 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mode, o], null));
                                              var G__16597 = families;
                                              var G__16598 = false;
                                              var G__16599 = true;
                                              i = G__16592;
                                              mode = G__16593;
                                              openings = G__16594;
                                              start = G__16595;
                                              t = G__16596;
                                              families = G__16597;
                                              escaping = G__16598;
                                              in_word = G__16599;
                                              continue;
                                            } else {
                                              var G__16600 = j;
                                              var G__16601 = subpar.paredit.code;
                                              var G__16602 = openings;
                                              var G__16603 = start;
                                              var G__16604 = cljs.core.conj.call(null, t, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["?", o], null));
                                              var G__16605 = families;
                                              var G__16606 = escaping;
                                              var G__16607 = in_word;
                                              i = G__16600;
                                              mode = G__16601;
                                              openings = G__16602;
                                              start = G__16603;
                                              t = G__16604;
                                              families = G__16605;
                                              escaping = G__16606;
                                              in_word = G__16607;
                                              continue;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("subpar.core");
goog.require("cljs.core");
goog.require("subpar.paredit");
subpar.core.get_index = function subpar$core$get_index(cm) {
  return cm.indexFromPos(cm.getCursor());
};
subpar.core.go_to_index = function subpar$core$go_to_index(cm, i, j) {
  if (cljs.core.not_EQ_.call(null, i, j)) {
    return cm.setCursor(cm.posFromIndex(j));
  } else {
    return null;
  }
};
subpar.core.nothing_selected_QMARK_ = function subpar$core$nothing_selected_QMARK_(cm) {
  return cljs.core._EQ_.call(null, "", cm.getSelection());
};
subpar.core.get_info = function subpar$core$get_info(cm) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cm.getCursor(), subpar.core.get_index.call(null, cm), cm.getValue()], null);
};
subpar.core.open_expression = function subpar$core$open_expression(cm, pair) {
  var vec__16611 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__16611, 0, null);
  var i = cljs.core.nth.call(null, vec__16611, 1, null);
  var s = cljs.core.nth.call(null, vec__16611, 2, null);
  if (cljs.core.truth_(subpar.paredit.in_string.call(null, s, i))) {
    cm.replaceRange(cljs.core.nth.call(null, pair, 0), cur);
    return cm.setCursor(cur.line, cur.ch + 1);
  } else {
    return cm.operation(function(vec__16611, cur, i, s) {
      return function() {
        cm.replaceRange(pair, cur);
        cm.setCursor(cur["line"], cur["ch"] + 1);
        return cm.indentLine(cur["line"]);
      };
    }(vec__16611, cur, i, s));
  }
};
goog.exportSymbol("subpar.core.open_expression", subpar.core.open_expression);
subpar.core.forward_delete = function subpar$core$forward_delete(cm) {
  if (cljs.core.truth_(subpar.core.nothing_selected_QMARK_.call(null, cm))) {
    var vec__16616 = subpar.core.get_info.call(null, cm);
    var cur = cljs.core.nth.call(null, vec__16616, 0, null);
    var i = cljs.core.nth.call(null, vec__16616, 1, null);
    var s = cljs.core.nth.call(null, vec__16616, 2, null);
    var act = subpar.paredit.forward_delete_action.call(null, s, i);
    var s1 = cm.posFromIndex(i);
    var e1 = cm.posFromIndex(i + 1);
    var s2 = cm.posFromIndex(i - 1);
    var e2 = e1;
    var s3 = s1;
    var e3 = cm.posFromIndex(i + 2);
    var pred__16617 = cljs.core._EQ_;
    var expr__16618 = act;
    if (cljs.core.truth_(pred__16617.call(null, 1, expr__16618))) {
      return cm.replaceRange("", s1, e1);
    } else {
      if (cljs.core.truth_(pred__16617.call(null, 2, expr__16618))) {
        return cm.replaceRange("", s2, e2);
      } else {
        if (cljs.core.truth_(pred__16617.call(null, 3, expr__16618))) {
          return cm.replaceRange("", s3, e3);
        } else {
          if (cljs.core.truth_(pred__16617.call(null, 4, expr__16618))) {
            return cm.setCursor(e1);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__16618)].join(""));
          }
        }
      }
    }
  } else {
    return cm.replaceSelection("");
  }
};
goog.exportSymbol("subpar.core.forward_delete", subpar.core.forward_delete);
subpar.core.backward_delete = function subpar$core$backward_delete(cm) {
  if (cljs.core.truth_(subpar.core.nothing_selected_QMARK_.call(null, cm))) {
    var vec__16624 = subpar.core.get_info.call(null, cm);
    var cur = cljs.core.nth.call(null, vec__16624, 0, null);
    var i = cljs.core.nth.call(null, vec__16624, 1, null);
    var s = cljs.core.nth.call(null, vec__16624, 2, null);
    var act = subpar.paredit.backward_delete_action.call(null, s, i);
    var s1 = cm.posFromIndex(i - 1);
    var e1 = cm.posFromIndex(i);
    var s2 = s1;
    var e2 = cm.posFromIndex(i + 1);
    var s3 = cm.posFromIndex(i - 2);
    var e3 = e1;
    var pred__16625 = cljs.core._EQ_;
    var expr__16626 = act;
    if (cljs.core.truth_(pred__16625.call(null, 1, expr__16626))) {
      return cm.replaceRange("", s1, e1);
    } else {
      if (cljs.core.truth_(pred__16625.call(null, 2, expr__16626))) {
        return cm.replaceRange("", s2, e2);
      } else {
        if (cljs.core.truth_(pred__16625.call(null, 3, expr__16626))) {
          return cm.replaceRange("", s3, e3);
        } else {
          return cm.setCursor(s1);
        }
      }
    }
  } else {
    return cm.replaceSelection("");
  }
};
goog.exportSymbol("subpar.core.backward_delete", subpar.core.backward_delete);
subpar.core.double_quote = function subpar$core$double_quote(cm) {
  var vec__16632 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__16632, 0, null);
  var i = cljs.core.nth.call(null, vec__16632, 1, null);
  var s = cljs.core.nth.call(null, vec__16632, 2, null);
  var act = subpar.paredit.double_quote_action.call(null, s, i);
  var pred__16633 = cljs.core._EQ_;
  var expr__16634 = act;
  if (cljs.core.truth_(pred__16633.call(null, 0, expr__16634))) {
    return subpar.core.open_expression.call(null, cm, '""');
  } else {
    if (cljs.core.truth_(pred__16633.call(null, 1, expr__16634))) {
      return cm.replaceRange('\\"', cur);
    } else {
      if (cljs.core.truth_(pred__16633.call(null, 2, expr__16634))) {
        return subpar.core.go_to_index.call(null, cm, i, i + 1);
      } else {
        if (cljs.core.truth_(pred__16633.call(null, 3, expr__16634))) {
          return cm.replaceRange('"', cur);
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__16634)].join(""));
        }
      }
    }
  }
};
goog.exportSymbol("subpar.core.double_quote", subpar.core.double_quote);
subpar.core.close_expression = function subpar$core$close_expression(cm, c) {
  var vec__16638 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__16638, 0, null);
  var i = cljs.core.nth.call(null, vec__16638, 1, null);
  var s = cljs.core.nth.call(null, vec__16638, 2, null);
  var p = subpar.paredit.parse.call(null, s);
  if (cljs.core.truth_(subpar.paredit.in_string_QMARK_.call(null, p, i))) {
    cm.replaceRange(c, cur);
    return cm.setCursor(cur["line"], cur["ch"] + 1);
  } else {
    var vec__16639 = subpar.paredit.close_expression_vals.call(null, p, i);
    var del = cljs.core.nth.call(null, vec__16639, 0, null);
    var beg = cljs.core.nth.call(null, vec__16639, 1, null);
    var end = cljs.core.nth.call(null, vec__16639, 2, null);
    var dst = cljs.core.nth.call(null, vec__16639, 3, null);
    if (cljs.core.truth_(dst)) {
      if (cljs.core.truth_(del)) {
        cm.replaceRange("", cm.posFromIndex(beg), cm.posFromIndex(end));
      } else {
      }
      return subpar.core.go_to_index.call(null, cm, i, dst);
    } else {
      return null;
    }
  }
};
goog.exportSymbol("subpar.core.close_expression", subpar.core.close_expression);
subpar.core.go = function subpar$core$go(cm, f) {
  var vec__16641 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__16641, 0, null);
  var i = cljs.core.nth.call(null, vec__16641, 1, null);
  var s = cljs.core.nth.call(null, vec__16641, 2, null);
  var j = f.call(null, s, i);
  return subpar.core.go_to_index.call(null, cm, i, j);
};
subpar.core.backward_up = function subpar$core$backward_up(cm) {
  return subpar.core.go.call(null, cm, subpar.paredit.backward_up_fn);
};
goog.exportSymbol("subpar.core.backward_up", subpar.core.backward_up);
subpar.core.forward_down = function subpar$core$forward_down(cm) {
  return subpar.core.go.call(null, cm, subpar.paredit.forward_down_fn);
};
goog.exportSymbol("subpar.core.forward_down", subpar.core.forward_down);
subpar.core.backward = function subpar$core$backward(cm) {
  return subpar.core.go.call(null, cm, subpar.paredit.backward_fn);
};
goog.exportSymbol("subpar.core.backward", subpar.core.backward);
subpar.core.forward = function subpar$core$forward(cm) {
  return subpar.core.go.call(null, cm, subpar.paredit.forward_fn);
};
goog.exportSymbol("subpar.core.forward", subpar.core.forward);
subpar.core.backward_down = function subpar$core$backward_down(cm) {
  return subpar.core.go.call(null, cm, subpar.paredit.backward_down_fn);
};
goog.exportSymbol("subpar.core.backward_down", subpar.core.backward_down);
subpar.core.forward_up = function subpar$core$forward_up(cm) {
  return subpar.core.go.call(null, cm, subpar.paredit.forward_up_fn);
};
goog.exportSymbol("subpar.core.forward_up", subpar.core.forward_up);
subpar.core.forward_slurp = function subpar$core$forward_slurp(cm) {
  var vec__16645 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__16645, 0, null);
  var i = cljs.core.nth.call(null, vec__16645, 1, null);
  var s = cljs.core.nth.call(null, vec__16645, 2, null);
  var vec__16646 = subpar.paredit.forward_slurp_vals.call(null, s, i);
  var delimiter = cljs.core.nth.call(null, vec__16646, 0, null);
  var si = cljs.core.nth.call(null, vec__16646, 1, null);
  var di = cljs.core.nth.call(null, vec__16646, 2, null);
  var ri = cljs.core.nth.call(null, vec__16646, 3, null);
  if (cljs.core.truth_(ri)) {
    var start = cm.posFromIndex(si);
    var end = cm.posFromIndex(si + 1);
    var destination = cm.posFromIndex(di);
    var line = start["line"];
    var update = function(start, end, destination, line, vec__16645, cur, i, s, vec__16646, delimiter, si, di, ri) {
      return function() {
        cm.replaceRange(delimiter, destination);
        cm.replaceRange("", start, end);
        return cljs.core.map.call(null, function(start, end, destination, line, vec__16645, cur, i, s, vec__16646, delimiter, si, di, ri) {
          return function(p1__16642_SHARP_) {
            return cm.indentLine(p1__16642_SHARP_);
          };
        }(start, end, destination, line, vec__16645, cur, i, s, vec__16646, delimiter, si, di, ri), cljs.core.range.call(null, line, line + ri));
      };
    }(start, end, destination, line, vec__16645, cur, i, s, vec__16646, delimiter, si, di, ri);
    return cm.operation(update);
  } else {
    return null;
  }
};
goog.exportSymbol("subpar.core.forward_slurp", subpar.core.forward_slurp);
subpar.core.backward_slurp = function subpar$core$backward_slurp(cm) {
  var vec__16650 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__16650, 0, null);
  var i = cljs.core.nth.call(null, vec__16650, 1, null);
  var s = cljs.core.nth.call(null, vec__16650, 2, null);
  var vec__16651 = subpar.paredit.backward_slurp_vals.call(null, s, i);
  var delimiter = cljs.core.nth.call(null, vec__16651, 0, null);
  var si = cljs.core.nth.call(null, vec__16651, 1, null);
  var di = cljs.core.nth.call(null, vec__16651, 2, null);
  var ri = cljs.core.nth.call(null, vec__16651, 3, null);
  if (cljs.core.truth_(ri)) {
    var start = cm.posFromIndex(si);
    var end = cm.posFromIndex(si + 1);
    var destination = cm.posFromIndex(di);
    var line = start["line"];
    var update = function(start, end, destination, line, vec__16650, cur, i, s, vec__16651, delimiter, si, di, ri) {
      return function() {
        cm.replaceRange("", start, end);
        cm.replaceRange(delimiter, destination);
        return cljs.core.map.call(null, function(start, end, destination, line, vec__16650, cur, i, s, vec__16651, delimiter, si, di, ri) {
          return function(p1__16647_SHARP_) {
            return cm.indentLine(p1__16647_SHARP_);
          };
        }(start, end, destination, line, vec__16650, cur, i, s, vec__16651, delimiter, si, di, ri), cljs.core.range.call(null, line, line + ri));
      };
    }(start, end, destination, line, vec__16650, cur, i, s, vec__16651, delimiter, si, di, ri);
    return cm.operation(update);
  } else {
    return null;
  }
};
goog.exportSymbol("subpar.core.backward_slurp", subpar.core.backward_slurp);
subpar.core.backward_barf = function subpar$core$backward_barf(cm) {
  var vec__16655 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__16655, 0, null);
  var i = cljs.core.nth.call(null, vec__16655, 1, null);
  var s = cljs.core.nth.call(null, vec__16655, 2, null);
  var vec__16656 = subpar.paredit.backward_barf_vals.call(null, s, i);
  var delimiter = cljs.core.nth.call(null, vec__16656, 0, null);
  var si = cljs.core.nth.call(null, vec__16656, 1, null);
  var di = cljs.core.nth.call(null, vec__16656, 2, null);
  var pad = cljs.core.nth.call(null, vec__16656, 3, null);
  var ri = cljs.core.nth.call(null, vec__16656, 4, null);
  if (cljs.core.truth_(ri)) {
    var delimiter__$1 = cljs.core.truth_(pad) ? [cljs.core.str(" "), cljs.core.str(delimiter)].join("") : delimiter;
    var destination = cm.posFromIndex(di);
    var start = cm.posFromIndex(si);
    var end = cm.posFromIndex(si + 1);
    var line = start["line"];
    var update = function(delimiter__$1, destination, start, end, line, vec__16655, cur, i, s, vec__16656, delimiter, si, di, pad, ri) {
      return function() {
        cm.replaceRange(delimiter__$1, destination);
        cm.replaceRange("", start, end);
        return cljs.core.map.call(null, function(delimiter__$1, destination, start, end, line, vec__16655, cur, i, s, vec__16656, delimiter, si, di, pad, ri) {
          return function(p1__16652_SHARP_) {
            return cm.indentLine(p1__16652_SHARP_);
          };
        }(delimiter__$1, destination, start, end, line, vec__16655, cur, i, s, vec__16656, delimiter, si, di, pad, ri), cljs.core.range.call(null, line, line + ri));
      };
    }(delimiter__$1, destination, start, end, line, vec__16655, cur, i, s, vec__16656, delimiter, si, di, pad, ri);
    return cm.operation(update);
  } else {
    return null;
  }
};
goog.exportSymbol("subpar.core.backward_barf", subpar.core.backward_barf);
subpar.core.forward_barf = function subpar$core$forward_barf(cm) {
  var vec__16660 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__16660, 0, null);
  var i = cljs.core.nth.call(null, vec__16660, 1, null);
  var s = cljs.core.nth.call(null, vec__16660, 2, null);
  var vec__16661 = subpar.paredit.forward_barf_vals.call(null, s, i);
  var delimiter = cljs.core.nth.call(null, vec__16661, 0, null);
  var si = cljs.core.nth.call(null, vec__16661, 1, null);
  var di = cljs.core.nth.call(null, vec__16661, 2, null);
  var pad = cljs.core.nth.call(null, vec__16661, 3, null);
  var ri = cljs.core.nth.call(null, vec__16661, 4, null);
  var i0 = cljs.core.nth.call(null, vec__16661, 5, null);
  if (cljs.core.truth_(ri)) {
    var delimiter__$1 = cljs.core.truth_(pad) ? [cljs.core.str(" "), cljs.core.str(delimiter)].join("") : delimiter;
    var destination = cm.posFromIndex(di);
    var start = cm.posFromIndex(si);
    var end = cm.posFromIndex(si + 1);
    var line = cm.posFromIndex(i0)["line"];
    var update = function(delimiter__$1, destination, start, end, line, vec__16660, cur, i, s, vec__16661, delimiter, si, di, pad, ri, i0) {
      return function() {
        cm.replaceRange("", start, end);
        cm.replaceRange(delimiter__$1, destination);
        return cljs.core.map.call(null, function(delimiter__$1, destination, start, end, line, vec__16660, cur, i, s, vec__16661, delimiter, si, di, pad, ri, i0) {
          return function(p1__16657_SHARP_) {
            return cm.indentLine(p1__16657_SHARP_);
          };
        }(delimiter__$1, destination, start, end, line, vec__16660, cur, i, s, vec__16661, delimiter, si, di, pad, ri, i0), cljs.core.range.call(null, line, line + ri));
      };
    }(delimiter__$1, destination, start, end, line, vec__16660, cur, i, s, vec__16661, delimiter, si, di, pad, ri, i0);
    return cm.operation(update);
  } else {
    return null;
  }
};
goog.exportSymbol("subpar.core.forward_barf", subpar.core.forward_barf);
subpar.core.splice_delete_backward = function subpar$core$splice_delete_backward(cm) {
  var vec__16665 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__16665, 0, null);
  var i = cljs.core.nth.call(null, vec__16665, 1, null);
  var s = cljs.core.nth.call(null, vec__16665, 2, null);
  var vec__16666 = subpar.paredit.splice_delete_backward_vals.call(null, s, i);
  var start = cljs.core.nth.call(null, vec__16666, 0, null);
  var end = cljs.core.nth.call(null, vec__16666, 1, null);
  var closer = cljs.core.nth.call(null, vec__16666, 2, null);
  var reindent = cljs.core.nth.call(null, vec__16666, 3, null);
  var num = cljs.core.nth.call(null, vec__16666, 4, null);
  if (cljs.core.truth_(reindent)) {
    var line = cm.posFromIndex(reindent)["line"];
    var c0 = cm.posFromIndex(closer);
    var c1 = cm.posFromIndex(closer + 1);
    var s0 = cm.posFromIndex(start);
    var s1 = cm.posFromIndex(end);
    var update = function(line, c0, c1, s0, s1, vec__16665, cur, i, s, vec__16666, start, end, closer, reindent, num) {
      return function() {
        cm.replaceRange("", c0, c1);
        cm.replaceRange("", s0, s1);
        return cljs.core.map.call(null, function(line, c0, c1, s0, s1, vec__16665, cur, i, s, vec__16666, start, end, closer, reindent, num) {
          return function(p1__16662_SHARP_) {
            return cm.indentLine(p1__16662_SHARP_);
          };
        }(line, c0, c1, s0, s1, vec__16665, cur, i, s, vec__16666, start, end, closer, reindent, num), cljs.core.range.call(null, line, line + num));
      };
    }(line, c0, c1, s0, s1, vec__16665, cur, i, s, vec__16666, start, end, closer, reindent, num);
    return cm.operation(update);
  } else {
    return null;
  }
};
goog.exportSymbol("subpar.core.splice_delete_backward", subpar.core.splice_delete_backward);
subpar.core.splice_delete_forward = function subpar$core$splice_delete_forward(cm) {
  var vec__16670 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__16670, 0, null);
  var i = cljs.core.nth.call(null, vec__16670, 1, null);
  var s = cljs.core.nth.call(null, vec__16670, 2, null);
  var vec__16671 = subpar.paredit.splice_delete_forward_vals.call(null, s, i);
  var opener = cljs.core.nth.call(null, vec__16671, 0, null);
  var start = cljs.core.nth.call(null, vec__16671, 1, null);
  var end = cljs.core.nth.call(null, vec__16671, 2, null);
  var reindent = cljs.core.nth.call(null, vec__16671, 3, null);
  var num = cljs.core.nth.call(null, vec__16671, 4, null);
  if (cljs.core.truth_(reindent)) {
    var line = cm.posFromIndex(reindent)["line"];
    var o0 = cm.posFromIndex(opener);
    var o1 = cm.posFromIndex(opener + 1);
    var s0 = cm.posFromIndex(start);
    var s1 = cm.posFromIndex(end);
    var update = function(line, o0, o1, s0, s1, vec__16670, cur, i, s, vec__16671, opener, start, end, reindent, num) {
      return function() {
        cm.replaceRange("", s0, s1);
        cm.replaceRange("", o0, o1);
        return cljs.core.map.call(null, function(line, o0, o1, s0, s1, vec__16670, cur, i, s, vec__16671, opener, start, end, reindent, num) {
          return function(p1__16667_SHARP_) {
            return cm.indentLine(p1__16667_SHARP_);
          };
        }(line, o0, o1, s0, s1, vec__16670, cur, i, s, vec__16671, opener, start, end, reindent, num), cljs.core.range.call(null, line, line + num));
      };
    }(line, o0, o1, s0, s1, vec__16670, cur, i, s, vec__16671, opener, start, end, reindent, num);
    return cm.operation(update);
  } else {
    return null;
  }
};
goog.exportSymbol("subpar.core.splice_delete_forward", subpar.core.splice_delete_forward);
subpar.core.splice = function subpar$core$splice(cm) {
  var vec__16675 = subpar.core.get_info.call(null, cm);
  var cur = cljs.core.nth.call(null, vec__16675, 0, null);
  var i = cljs.core.nth.call(null, vec__16675, 1, null);
  var s = cljs.core.nth.call(null, vec__16675, 2, null);
  var vec__16676 = subpar.paredit.splice_vals.call(null, s, i);
  var opener = cljs.core.nth.call(null, vec__16676, 0, null);
  var closer = cljs.core.nth.call(null, vec__16676, 1, null);
  var reindent = cljs.core.nth.call(null, vec__16676, 2, null);
  var num = cljs.core.nth.call(null, vec__16676, 3, null);
  if (cljs.core.truth_(reindent)) {
    var line = cm.posFromIndex(reindent)["line"];
    var o0 = cm.posFromIndex(opener);
    var o1 = cm.posFromIndex(opener + 1);
    var c0 = cm.posFromIndex(closer);
    var c1 = cm.posFromIndex(closer + 1);
    var update = function(line, o0, o1, c0, c1, vec__16675, cur, i, s, vec__16676, opener, closer, reindent, num) {
      return function() {
        cm.replaceRange("", c0, c1);
        cm.replaceRange("", o0, o1);
        return cljs.core.map.call(null, function(line, o0, o1, c0, c1, vec__16675, cur, i, s, vec__16676, opener, closer, reindent, num) {
          return function(p1__16672_SHARP_) {
            return cm.indentLine(p1__16672_SHARP_);
          };
        }(line, o0, o1, c0, c1, vec__16675, cur, i, s, vec__16676, opener, closer, reindent, num), cljs.core.range.call(null, line, line + num));
      };
    }(line, o0, o1, c0, c1, vec__16675, cur, i, s, vec__16676, opener, closer, reindent, num);
    return cm.operation(update);
  } else {
    return null;
  }
};
goog.exportSymbol("subpar.core.splice", subpar.core.splice);
subpar.core.indent_selection = function subpar$core$indent_selection(cm) {
  if (cljs.core.truth_(cm.somethingSelected())) {
    var start = cm.getCursor(true)["line"];
    var end = cm.getCursor(false)["line"];
    var f = function(start, end) {
      return function() {
        return cljs.core.map.call(null, function(start, end) {
          return function(p1__16677_SHARP_) {
            return cm.indentLine(p1__16677_SHARP_);
          };
        }(start, end), cljs.core.range.call(null, start, end + 1));
      };
    }(start, end);
    return cm.operation(f);
  } else {
    return cm.indentLine(cm.getCursor()["line"]);
  }
};
goog.exportSymbol("subpar.core.indent_selection", subpar.core.indent_selection);
